{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sergey Melyukov @smelukov\n*/\n\n\"use strict\";\n\nconst {\n  RawSource\n} = require(\"webpack-sources\");\nconst ConcatenationScope = require(\"../ConcatenationScope\");\nconst Generator = require(\"../Generator\");\nconst {\n  NO_TYPES,\n  CSS_URL_TYPES,\n  JS_TYPES,\n  JS_AND_CSS_URL_TYPES\n} = require(\"../ModuleSourceTypesConstants\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Generator\").GenerateContext} GenerateContext */\n/** @typedef {import(\"../Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n/** @typedef {import(\"../Module\").SourceTypes} SourceTypes */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n\nclass AssetSourceGenerator extends Generator {\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   */\n  constructor(moduleGraph) {\n    super();\n    this._moduleGraph = moduleGraph;\n  }\n\n  /**\n   * @param {NormalModule} module module for which the code should be generated\n   * @param {GenerateContext} generateContext context for generate\n   * @returns {Source | null} generated code\n   */\n  generate(module, {\n    type,\n    concatenationScope,\n    getData,\n    runtimeTemplate,\n    runtimeRequirements\n  }) {\n    const originalSource = module.originalSource();\n    const data = getData ? getData() : undefined;\n    switch (type) {\n      case \"javascript\":\n        {\n          if (!originalSource) {\n            return new RawSource(\"\");\n          }\n          const content = originalSource.source();\n          const encodedSource = typeof content === \"string\" ? content : content.toString(\"utf-8\");\n          let sourceContent;\n          if (concatenationScope) {\n            concatenationScope.registerNamespaceExport(ConcatenationScope.NAMESPACE_OBJECT_EXPORT);\n            sourceContent = `${runtimeTemplate.supportsConst() ? \"const\" : \"var\"} ${ConcatenationScope.NAMESPACE_OBJECT_EXPORT} = ${JSON.stringify(encodedSource)};`;\n          } else {\n            runtimeRequirements.add(RuntimeGlobals.module);\n            sourceContent = `${RuntimeGlobals.module}.exports = ${JSON.stringify(encodedSource)};`;\n          }\n          return new RawSource(sourceContent);\n        }\n      case \"css-url\":\n        {\n          if (!originalSource) {\n            return null;\n          }\n          const content = originalSource.source();\n          const encodedSource = typeof content === \"string\" ? content : content.toString(\"utf-8\");\n          if (data) {\n            data.set(\"url\", {\n              [type]: encodedSource\n            });\n          }\n          return null;\n        }\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * @param {NormalModule} module module for which the bailout reason should be determined\n   * @param {ConcatenationBailoutReasonContext} context context\n   * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n   */\n  getConcatenationBailoutReason(module, context) {\n    return undefined;\n  }\n\n  /**\n   * @param {NormalModule} module fresh module\n   * @returns {SourceTypes} available types (do not mutate)\n   */\n  getTypes(module) {\n    const sourceTypes = new Set();\n    const connections = this._moduleGraph.getIncomingConnections(module);\n    for (const connection of connections) {\n      if (!connection.originModule) {\n        continue;\n      }\n      sourceTypes.add(connection.originModule.type.split(\"/\")[0]);\n    }\n    if (sourceTypes.has(\"javascript\") && sourceTypes.has(\"css\")) {\n      return JS_AND_CSS_URL_TYPES;\n    } else if (sourceTypes.has(\"javascript\")) {\n      return JS_TYPES;\n    } else if (sourceTypes.has(\"css\")) {\n      return CSS_URL_TYPES;\n    }\n    return NO_TYPES;\n  }\n\n  /**\n   * @param {NormalModule} module the module\n   * @param {string=} type source type\n   * @returns {number} estimate size of the module\n   */\n  getSize(module, type) {\n    const originalSource = module.originalSource();\n    if (!originalSource) {\n      return 0;\n    }\n\n    // Example: m.exports=\"abcd\"\n    return originalSource.size() + 12;\n  }\n}\nmodule.exports = AssetSourceGenerator;","map":{"version":3,"names":["RawSource","require","ConcatenationScope","Generator","NO_TYPES","CSS_URL_TYPES","JS_TYPES","JS_AND_CSS_URL_TYPES","RuntimeGlobals","AssetSourceGenerator","constructor","moduleGraph","_moduleGraph","generate","module","type","concatenationScope","getData","runtimeTemplate","runtimeRequirements","originalSource","data","undefined","content","source","encodedSource","toString","sourceContent","registerNamespaceExport","NAMESPACE_OBJECT_EXPORT","supportsConst","JSON","stringify","add","set","getConcatenationBailoutReason","context","getTypes","sourceTypes","Set","connections","getIncomingConnections","connection","originModule","split","has","getSize","size","exports"],"sources":["/home/wickliff/Desktop/dev-waki/portfolio2/node_modules/webpack/lib/asset/AssetSourceGenerator.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sergey Melyukov @smelukov\n*/\n\n\"use strict\";\n\nconst { RawSource } = require(\"webpack-sources\");\nconst ConcatenationScope = require(\"../ConcatenationScope\");\nconst Generator = require(\"../Generator\");\nconst {\n\tNO_TYPES,\n\tCSS_URL_TYPES,\n\tJS_TYPES,\n\tJS_AND_CSS_URL_TYPES\n} = require(\"../ModuleSourceTypesConstants\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Generator\").GenerateContext} GenerateContext */\n/** @typedef {import(\"../Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n/** @typedef {import(\"../Module\").SourceTypes} SourceTypes */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n\nclass AssetSourceGenerator extends Generator {\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t */\n\tconstructor(moduleGraph) {\n\t\tsuper();\n\n\t\tthis._moduleGraph = moduleGraph;\n\t}\n\n\t/**\n\t * @param {NormalModule} module module for which the code should be generated\n\t * @param {GenerateContext} generateContext context for generate\n\t * @returns {Source | null} generated code\n\t */\n\tgenerate(\n\t\tmodule,\n\t\t{ type, concatenationScope, getData, runtimeTemplate, runtimeRequirements }\n\t) {\n\t\tconst originalSource = module.originalSource();\n\t\tconst data = getData ? getData() : undefined;\n\n\t\tswitch (type) {\n\t\t\tcase \"javascript\": {\n\t\t\t\tif (!originalSource) {\n\t\t\t\t\treturn new RawSource(\"\");\n\t\t\t\t}\n\n\t\t\t\tconst content = originalSource.source();\n\t\t\t\tconst encodedSource =\n\t\t\t\t\ttypeof content === \"string\" ? content : content.toString(\"utf-8\");\n\n\t\t\t\tlet sourceContent;\n\t\t\t\tif (concatenationScope) {\n\t\t\t\t\tconcatenationScope.registerNamespaceExport(\n\t\t\t\t\t\tConcatenationScope.NAMESPACE_OBJECT_EXPORT\n\t\t\t\t\t);\n\t\t\t\t\tsourceContent = `${runtimeTemplate.supportsConst() ? \"const\" : \"var\"} ${\n\t\t\t\t\t\tConcatenationScope.NAMESPACE_OBJECT_EXPORT\n\t\t\t\t\t} = ${JSON.stringify(encodedSource)};`;\n\t\t\t\t} else {\n\t\t\t\t\truntimeRequirements.add(RuntimeGlobals.module);\n\t\t\t\t\tsourceContent = `${RuntimeGlobals.module}.exports = ${JSON.stringify(\n\t\t\t\t\t\tencodedSource\n\t\t\t\t\t)};`;\n\t\t\t\t}\n\t\t\t\treturn new RawSource(sourceContent);\n\t\t\t}\n\t\t\tcase \"css-url\": {\n\t\t\t\tif (!originalSource) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst content = originalSource.source();\n\t\t\t\tconst encodedSource =\n\t\t\t\t\ttypeof content === \"string\" ? content : content.toString(\"utf-8\");\n\n\t\t\t\tif (data) {\n\t\t\t\t\tdata.set(\"url\", { [type]: encodedSource });\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * @param {NormalModule} module module for which the bailout reason should be determined\n\t * @param {ConcatenationBailoutReasonContext} context context\n\t * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n\t */\n\tgetConcatenationBailoutReason(module, context) {\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {NormalModule} module fresh module\n\t * @returns {SourceTypes} available types (do not mutate)\n\t */\n\tgetTypes(module) {\n\t\tconst sourceTypes = new Set();\n\t\tconst connections = this._moduleGraph.getIncomingConnections(module);\n\n\t\tfor (const connection of connections) {\n\t\t\tif (!connection.originModule) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsourceTypes.add(connection.originModule.type.split(\"/\")[0]);\n\t\t}\n\n\t\tif (sourceTypes.has(\"javascript\") && sourceTypes.has(\"css\")) {\n\t\t\treturn JS_AND_CSS_URL_TYPES;\n\t\t} else if (sourceTypes.has(\"javascript\")) {\n\t\t\treturn JS_TYPES;\n\t\t} else if (sourceTypes.has(\"css\")) {\n\t\t\treturn CSS_URL_TYPES;\n\t\t}\n\n\t\treturn NO_TYPES;\n\t}\n\n\t/**\n\t * @param {NormalModule} module the module\n\t * @param {string=} type source type\n\t * @returns {number} estimate size of the module\n\t */\n\tgetSize(module, type) {\n\t\tconst originalSource = module.originalSource();\n\n\t\tif (!originalSource) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Example: m.exports=\"abcd\"\n\t\treturn originalSource.size() + 12;\n\t}\n}\n\nmodule.exports = AssetSourceGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}