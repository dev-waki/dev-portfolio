{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst HotModuleReplacementPlugin = require(\"../HotModuleReplacementPlugin\");\nconst {\n  getImportAttributes\n} = require(\"../javascript/JavascriptParser\");\nconst InnerGraph = require(\"../optimize/InnerGraph\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst HarmonyAcceptDependency = require(\"./HarmonyAcceptDependency\");\nconst HarmonyAcceptImportDependency = require(\"./HarmonyAcceptImportDependency\");\nconst HarmonyEvaluatedImportSpecifierDependency = require(\"./HarmonyEvaluatedImportSpecifierDependency\");\nconst HarmonyExports = require(\"./HarmonyExports\");\nconst {\n  ExportPresenceModes\n} = require(\"./HarmonyImportDependency\");\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nconst HarmonyImportSpecifierDependency = require(\"./HarmonyImportSpecifierDependency\");\n\n/** @typedef {import(\"estree\").Identifier} Identifier */\n/** @typedef {import(\"estree\").Literal} Literal */\n/** @typedef {import(\"estree\").MemberExpression} MemberExpression */\n/** @typedef {import(\"estree\").ObjectExpression} ObjectExpression */\n/** @typedef {import(\"estree\").Property} Property */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"../javascript/BasicEvaluatedExpression\")} BasicEvaluatedExpression */\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n/** @typedef {import(\"../javascript/JavascriptParser\").DestructuringAssignmentProperty} DestructuringAssignmentProperty */\n/** @typedef {import(\"../javascript/JavascriptParser\").ExportAllDeclaration} ExportAllDeclaration */\n/** @typedef {import(\"../javascript/JavascriptParser\").ExportNamedDeclaration} ExportNamedDeclaration */\n/** @typedef {import(\"../javascript/JavascriptParser\").ImportAttributes} ImportAttributes */\n/** @typedef {import(\"../javascript/JavascriptParser\").ImportDeclaration} ImportDeclaration */\n/** @typedef {import(\"../javascript/JavascriptParser\").ImportExpression} ImportExpression */\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n/** @typedef {import(\"../optimize/InnerGraph\").InnerGraph} InnerGraph */\n/** @typedef {import(\"../optimize/InnerGraph\").TopLevelSymbol} TopLevelSymbol */\n/** @typedef {import(\"./HarmonyImportDependency\")} HarmonyImportDependency */\n\nconst harmonySpecifierTag = Symbol(\"harmony import\");\n\n/**\n * @typedef {object} HarmonySettings\n * @property {string[]} ids\n * @property {string} source\n * @property {number} sourceOrder\n * @property {string} name\n * @property {boolean} await\n * @property {Record<string, any> | undefined} assertions\n */\n\nmodule.exports = class HarmonyImportDependencyParserPlugin {\n  /**\n   * @param {JavascriptParserOptions} options options\n   */\n  constructor(options) {\n    this.exportPresenceMode = options.importExportsPresence !== undefined ? ExportPresenceModes.fromUserOption(options.importExportsPresence) : options.exportsPresence !== undefined ? ExportPresenceModes.fromUserOption(options.exportsPresence) : options.strictExportPresence ? ExportPresenceModes.ERROR : ExportPresenceModes.AUTO;\n    this.strictThisContextOnImports = options.strictThisContextOnImports;\n  }\n\n  /**\n   * @param {JavascriptParser} parser the parser\n   * @returns {void}\n   */\n  apply(parser) {\n    const {\n      exportPresenceMode\n    } = this;\n\n    /**\n     * @param {string[]} members members\n     * @param {boolean[]} membersOptionals members Optionals\n     * @returns {string[]} a non optional part\n     */\n    function getNonOptionalPart(members, membersOptionals) {\n      let i = 0;\n      while (i < members.length && membersOptionals[i] === false) i++;\n      return i !== members.length ? members.slice(0, i) : members;\n    }\n\n    /**\n     * @param {TODO} node member expression\n     * @param {number} count count\n     * @returns {TODO} member expression\n     */\n    function getNonOptionalMemberChain(node, count) {\n      while (count--) node = node.object;\n      return node;\n    }\n    parser.hooks.isPure.for(\"Identifier\").tap(\"HarmonyImportDependencyParserPlugin\", expression => {\n      const expr = /** @type {Identifier} */expression;\n      if (parser.isVariableDefined(expr.name) || parser.getTagData(expr.name, harmonySpecifierTag)) {\n        return true;\n      }\n    });\n    parser.hooks.import.tap(\"HarmonyImportDependencyParserPlugin\", (statement, source) => {\n      parser.state.lastHarmonyImportOrder = (parser.state.lastHarmonyImportOrder || 0) + 1;\n      const clearDep = new ConstDependency(parser.isAsiPosition(/** @type {Range} */statement.range[0]) ? \";\" : \"\", /** @type {Range} */statement.range);\n      clearDep.loc = /** @type {DependencyLocation} */statement.loc;\n      parser.state.module.addPresentationalDependency(clearDep);\n      parser.unsetAsiPosition(/** @type {Range} */statement.range[1]);\n      const attributes = getImportAttributes(statement);\n      const sideEffectDep = new HarmonyImportSideEffectDependency(/** @type {string} */source, parser.state.lastHarmonyImportOrder, attributes);\n      sideEffectDep.loc = /** @type {DependencyLocation} */statement.loc;\n      parser.state.module.addDependency(sideEffectDep);\n      return true;\n    });\n    parser.hooks.importSpecifier.tap(\"HarmonyImportDependencyParserPlugin\", (statement, source, id, name) => {\n      const ids = id === null ? [] : [id];\n      parser.tagVariable(name, harmonySpecifierTag, {\n        name,\n        source,\n        ids,\n        sourceOrder: parser.state.lastHarmonyImportOrder,\n        assertions: getImportAttributes(statement)\n      });\n      return true;\n    });\n    parser.hooks.binaryExpression.tap(\"HarmonyImportDependencyParserPlugin\", expression => {\n      if (expression.operator !== \"in\") return;\n      const leftPartEvaluated = parser.evaluateExpression(expression.left);\n      if (leftPartEvaluated.couldHaveSideEffects()) return;\n      const leftPart = leftPartEvaluated.asString();\n      if (!leftPart) return;\n      const rightPart = parser.evaluateExpression(expression.right);\n      if (!rightPart.isIdentifier()) return;\n      const rootInfo = rightPart.rootInfo;\n      if (typeof rootInfo === \"string\" || !rootInfo || !rootInfo.tagInfo || rootInfo.tagInfo.tag !== harmonySpecifierTag) return;\n      const settings = rootInfo.tagInfo.data;\n      const members = /** @type {(() => string[])} */\n      rightPart.getMembers();\n      const dep = new HarmonyEvaluatedImportSpecifierDependency(settings.source, settings.sourceOrder, settings.ids.concat(members).concat([leftPart]), settings.name, /** @type {Range} */expression.range, settings.assertions, \"in\");\n      dep.directImport = members.length === 0;\n      dep.asiSafe = !parser.isAsiPosition(/** @type {Range} */expression.range[0]);\n      dep.loc = /** @type {DependencyLocation} */expression.loc;\n      parser.state.module.addDependency(dep);\n      InnerGraph.onUsage(parser.state, e => dep.usedByExports = e);\n      return true;\n    });\n    parser.hooks.expression.for(harmonySpecifierTag).tap(\"HarmonyImportDependencyParserPlugin\", expr => {\n      const settings = /** @type {HarmonySettings} */parser.currentTagData;\n      const dep = new HarmonyImportSpecifierDependency(settings.source, settings.sourceOrder, settings.ids, settings.name, /** @type {Range} */expr.range, exportPresenceMode, settings.assertions, []);\n      dep.referencedPropertiesInDestructuring = parser.destructuringAssignmentPropertiesFor(expr);\n      dep.shorthand = parser.scope.inShorthand;\n      dep.directImport = true;\n      dep.asiSafe = !parser.isAsiPosition(/** @type {Range} */expr.range[0]);\n      dep.loc = /** @type {DependencyLocation} */expr.loc;\n      dep.call = parser.scope.inTaggedTemplateTag;\n      parser.state.module.addDependency(dep);\n      InnerGraph.onUsage(parser.state, e => dep.usedByExports = e);\n      return true;\n    });\n    parser.hooks.expressionMemberChain.for(harmonySpecifierTag).tap(\"HarmonyImportDependencyParserPlugin\", (expression, members, membersOptionals, memberRanges) => {\n      const settings = /** @type {HarmonySettings} */\n      parser.currentTagData;\n      const nonOptionalMembers = getNonOptionalPart(members, membersOptionals);\n      /** @type {Range[]} */\n      const ranges = memberRanges.slice(0, memberRanges.length - (members.length - nonOptionalMembers.length));\n      const expr = nonOptionalMembers !== members ? getNonOptionalMemberChain(expression, members.length - nonOptionalMembers.length) : expression;\n      const ids = settings.ids.concat(nonOptionalMembers);\n      const dep = new HarmonyImportSpecifierDependency(settings.source, settings.sourceOrder, ids, settings.name, /** @type {Range} */expr.range, exportPresenceMode, settings.assertions, ranges);\n      dep.referencedPropertiesInDestructuring = parser.destructuringAssignmentPropertiesFor(expr);\n      dep.asiSafe = !parser.isAsiPosition(/** @type {Range} */expr.range[0]);\n      dep.loc = /** @type {DependencyLocation} */expr.loc;\n      parser.state.module.addDependency(dep);\n      InnerGraph.onUsage(parser.state, e => dep.usedByExports = e);\n      return true;\n    });\n    parser.hooks.callMemberChain.for(harmonySpecifierTag).tap(\"HarmonyImportDependencyParserPlugin\", (expression, members, membersOptionals, memberRanges) => {\n      const {\n        arguments: args,\n        callee\n      } = expression;\n      const settings = /** @type {HarmonySettings} */\n      parser.currentTagData;\n      const nonOptionalMembers = getNonOptionalPart(members, membersOptionals);\n      /** @type {Range[]} */\n      const ranges = memberRanges.slice(0, memberRanges.length - (members.length - nonOptionalMembers.length));\n      const expr = nonOptionalMembers !== members ? getNonOptionalMemberChain(callee, members.length - nonOptionalMembers.length) : callee;\n      const ids = settings.ids.concat(nonOptionalMembers);\n      const dep = new HarmonyImportSpecifierDependency(settings.source, settings.sourceOrder, ids, settings.name, /** @type {Range} */expr.range, exportPresenceMode, settings.assertions, ranges);\n      dep.directImport = members.length === 0;\n      dep.call = true;\n      dep.asiSafe = !parser.isAsiPosition(/** @type {Range} */expr.range[0]);\n      // only in case when we strictly follow the spec we need a special case here\n      dep.namespaceObjectAsContext = members.length > 0 && (/** @type {boolean} */this.strictThisContextOnImports);\n      dep.loc = /** @type {DependencyLocation} */expr.loc;\n      parser.state.module.addDependency(dep);\n      if (args) parser.walkExpressions(args);\n      InnerGraph.onUsage(parser.state, e => dep.usedByExports = e);\n      return true;\n    });\n    const {\n      hotAcceptCallback,\n      hotAcceptWithoutCallback\n    } = HotModuleReplacementPlugin.getParserHooks(parser);\n    hotAcceptCallback.tap(\"HarmonyImportDependencyParserPlugin\", (expr, requests) => {\n      if (!HarmonyExports.isEnabled(parser.state)) {\n        // This is not a harmony module, skip it\n        return;\n      }\n      const dependencies = requests.map(request => {\n        const dep = new HarmonyAcceptImportDependency(request);\n        dep.loc = /** @type {DependencyLocation} */expr.loc;\n        parser.state.module.addDependency(dep);\n        return dep;\n      });\n      if (dependencies.length > 0) {\n        const dep = new HarmonyAcceptDependency(/** @type {Range} */\n        expr.range, dependencies, true);\n        dep.loc = /** @type {DependencyLocation} */expr.loc;\n        parser.state.module.addDependency(dep);\n      }\n    });\n    hotAcceptWithoutCallback.tap(\"HarmonyImportDependencyParserPlugin\", (expr, requests) => {\n      if (!HarmonyExports.isEnabled(parser.state)) {\n        // This is not a harmony module, skip it\n        return;\n      }\n      const dependencies = requests.map(request => {\n        const dep = new HarmonyAcceptImportDependency(request);\n        dep.loc = /** @type {DependencyLocation} */expr.loc;\n        parser.state.module.addDependency(dep);\n        return dep;\n      });\n      if (dependencies.length > 0) {\n        const dep = new HarmonyAcceptDependency(/** @type {Range} */\n        expr.range, dependencies, false);\n        dep.loc = /** @type {DependencyLocation} */expr.loc;\n        parser.state.module.addDependency(dep);\n      }\n    });\n  }\n};\nmodule.exports.harmonySpecifierTag = harmonySpecifierTag;","map":{"version":3,"names":["HotModuleReplacementPlugin","require","getImportAttributes","InnerGraph","ConstDependency","HarmonyAcceptDependency","HarmonyAcceptImportDependency","HarmonyEvaluatedImportSpecifierDependency","HarmonyExports","ExportPresenceModes","HarmonyImportSideEffectDependency","HarmonyImportSpecifierDependency","harmonySpecifierTag","Symbol","module","exports","HarmonyImportDependencyParserPlugin","constructor","options","exportPresenceMode","importExportsPresence","undefined","fromUserOption","exportsPresence","strictExportPresence","ERROR","AUTO","strictThisContextOnImports","apply","parser","getNonOptionalPart","members","membersOptionals","i","length","slice","getNonOptionalMemberChain","node","count","object","hooks","isPure","for","tap","expression","expr","isVariableDefined","name","getTagData","import","statement","source","state","lastHarmonyImportOrder","clearDep","isAsiPosition","range","loc","addPresentationalDependency","unsetAsiPosition","attributes","sideEffectDep","addDependency","importSpecifier","id","ids","tagVariable","sourceOrder","assertions","binaryExpression","operator","leftPartEvaluated","evaluateExpression","left","couldHaveSideEffects","leftPart","asString","rightPart","right","isIdentifier","rootInfo","tagInfo","tag","settings","data","getMembers","dep","concat","directImport","asiSafe","onUsage","e","usedByExports","currentTagData","referencedPropertiesInDestructuring","destructuringAssignmentPropertiesFor","shorthand","scope","inShorthand","call","inTaggedTemplateTag","expressionMemberChain","memberRanges","nonOptionalMembers","ranges","callMemberChain","arguments","args","callee","namespaceObjectAsContext","walkExpressions","hotAcceptCallback","hotAcceptWithoutCallback","getParserHooks","requests","isEnabled","dependencies","map","request"],"sources":["/home/wickliff/Desktop/dev-waki/portfolio2/node_modules/webpack/lib/dependencies/HarmonyImportDependencyParserPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst HotModuleReplacementPlugin = require(\"../HotModuleReplacementPlugin\");\nconst { getImportAttributes } = require(\"../javascript/JavascriptParser\");\nconst InnerGraph = require(\"../optimize/InnerGraph\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst HarmonyAcceptDependency = require(\"./HarmonyAcceptDependency\");\nconst HarmonyAcceptImportDependency = require(\"./HarmonyAcceptImportDependency\");\nconst HarmonyEvaluatedImportSpecifierDependency = require(\"./HarmonyEvaluatedImportSpecifierDependency\");\nconst HarmonyExports = require(\"./HarmonyExports\");\nconst { ExportPresenceModes } = require(\"./HarmonyImportDependency\");\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nconst HarmonyImportSpecifierDependency = require(\"./HarmonyImportSpecifierDependency\");\n\n/** @typedef {import(\"estree\").Identifier} Identifier */\n/** @typedef {import(\"estree\").Literal} Literal */\n/** @typedef {import(\"estree\").MemberExpression} MemberExpression */\n/** @typedef {import(\"estree\").ObjectExpression} ObjectExpression */\n/** @typedef {import(\"estree\").Property} Property */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"../javascript/BasicEvaluatedExpression\")} BasicEvaluatedExpression */\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n/** @typedef {import(\"../javascript/JavascriptParser\").DestructuringAssignmentProperty} DestructuringAssignmentProperty */\n/** @typedef {import(\"../javascript/JavascriptParser\").ExportAllDeclaration} ExportAllDeclaration */\n/** @typedef {import(\"../javascript/JavascriptParser\").ExportNamedDeclaration} ExportNamedDeclaration */\n/** @typedef {import(\"../javascript/JavascriptParser\").ImportAttributes} ImportAttributes */\n/** @typedef {import(\"../javascript/JavascriptParser\").ImportDeclaration} ImportDeclaration */\n/** @typedef {import(\"../javascript/JavascriptParser\").ImportExpression} ImportExpression */\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n/** @typedef {import(\"../optimize/InnerGraph\").InnerGraph} InnerGraph */\n/** @typedef {import(\"../optimize/InnerGraph\").TopLevelSymbol} TopLevelSymbol */\n/** @typedef {import(\"./HarmonyImportDependency\")} HarmonyImportDependency */\n\nconst harmonySpecifierTag = Symbol(\"harmony import\");\n\n/**\n * @typedef {object} HarmonySettings\n * @property {string[]} ids\n * @property {string} source\n * @property {number} sourceOrder\n * @property {string} name\n * @property {boolean} await\n * @property {Record<string, any> | undefined} assertions\n */\n\nmodule.exports = class HarmonyImportDependencyParserPlugin {\n\t/**\n\t * @param {JavascriptParserOptions} options options\n\t */\n\tconstructor(options) {\n\t\tthis.exportPresenceMode =\n\t\t\toptions.importExportsPresence !== undefined\n\t\t\t\t? ExportPresenceModes.fromUserOption(options.importExportsPresence)\n\t\t\t\t: options.exportsPresence !== undefined\n\t\t\t\t\t? ExportPresenceModes.fromUserOption(options.exportsPresence)\n\t\t\t\t\t: options.strictExportPresence\n\t\t\t\t\t\t? ExportPresenceModes.ERROR\n\t\t\t\t\t\t: ExportPresenceModes.AUTO;\n\t\tthis.strictThisContextOnImports = options.strictThisContextOnImports;\n\t}\n\n\t/**\n\t * @param {JavascriptParser} parser the parser\n\t * @returns {void}\n\t */\n\tapply(parser) {\n\t\tconst { exportPresenceMode } = this;\n\n\t\t/**\n\t\t * @param {string[]} members members\n\t\t * @param {boolean[]} membersOptionals members Optionals\n\t\t * @returns {string[]} a non optional part\n\t\t */\n\t\tfunction getNonOptionalPart(members, membersOptionals) {\n\t\t\tlet i = 0;\n\t\t\twhile (i < members.length && membersOptionals[i] === false) i++;\n\t\t\treturn i !== members.length ? members.slice(0, i) : members;\n\t\t}\n\n\t\t/**\n\t\t * @param {TODO} node member expression\n\t\t * @param {number} count count\n\t\t * @returns {TODO} member expression\n\t\t */\n\t\tfunction getNonOptionalMemberChain(node, count) {\n\t\t\twhile (count--) node = node.object;\n\t\t\treturn node;\n\t\t}\n\n\t\tparser.hooks.isPure\n\t\t\t.for(\"Identifier\")\n\t\t\t.tap(\"HarmonyImportDependencyParserPlugin\", expression => {\n\t\t\t\tconst expr = /** @type {Identifier} */ (expression);\n\t\t\t\tif (\n\t\t\t\t\tparser.isVariableDefined(expr.name) ||\n\t\t\t\t\tparser.getTagData(expr.name, harmonySpecifierTag)\n\t\t\t\t) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\tparser.hooks.import.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(statement, source) => {\n\t\t\t\tparser.state.lastHarmonyImportOrder =\n\t\t\t\t\t(parser.state.lastHarmonyImportOrder || 0) + 1;\n\t\t\t\tconst clearDep = new ConstDependency(\n\t\t\t\t\tparser.isAsiPosition(/** @type {Range} */ (statement.range)[0])\n\t\t\t\t\t\t? \";\"\n\t\t\t\t\t\t: \"\",\n\t\t\t\t\t/** @type {Range} */ (statement.range)\n\t\t\t\t);\n\t\t\t\tclearDep.loc = /** @type {DependencyLocation} */ (statement.loc);\n\t\t\t\tparser.state.module.addPresentationalDependency(clearDep);\n\t\t\t\tparser.unsetAsiPosition(/** @type {Range} */ (statement.range)[1]);\n\t\t\t\tconst attributes = getImportAttributes(statement);\n\t\t\t\tconst sideEffectDep = new HarmonyImportSideEffectDependency(\n\t\t\t\t\t/** @type {string} */ (source),\n\t\t\t\t\tparser.state.lastHarmonyImportOrder,\n\t\t\t\t\tattributes\n\t\t\t\t);\n\t\t\t\tsideEffectDep.loc = /** @type {DependencyLocation} */ (statement.loc);\n\t\t\t\tparser.state.module.addDependency(sideEffectDep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.importSpecifier.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(statement, source, id, name) => {\n\t\t\t\tconst ids = id === null ? [] : [id];\n\t\t\t\tparser.tagVariable(name, harmonySpecifierTag, {\n\t\t\t\t\tname,\n\t\t\t\t\tsource,\n\t\t\t\t\tids,\n\t\t\t\t\tsourceOrder: parser.state.lastHarmonyImportOrder,\n\t\t\t\t\tassertions: getImportAttributes(statement)\n\t\t\t\t});\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.binaryExpression.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\texpression => {\n\t\t\t\tif (expression.operator !== \"in\") return;\n\n\t\t\t\tconst leftPartEvaluated = parser.evaluateExpression(expression.left);\n\t\t\t\tif (leftPartEvaluated.couldHaveSideEffects()) return;\n\t\t\t\tconst leftPart = leftPartEvaluated.asString();\n\t\t\t\tif (!leftPart) return;\n\n\t\t\t\tconst rightPart = parser.evaluateExpression(expression.right);\n\t\t\t\tif (!rightPart.isIdentifier()) return;\n\n\t\t\t\tconst rootInfo = rightPart.rootInfo;\n\t\t\t\tif (\n\t\t\t\t\ttypeof rootInfo === \"string\" ||\n\t\t\t\t\t!rootInfo ||\n\t\t\t\t\t!rootInfo.tagInfo ||\n\t\t\t\t\trootInfo.tagInfo.tag !== harmonySpecifierTag\n\t\t\t\t)\n\t\t\t\t\treturn;\n\t\t\t\tconst settings = rootInfo.tagInfo.data;\n\t\t\t\tconst members =\n\t\t\t\t\t/** @type {(() => string[])} */\n\t\t\t\t\t(rightPart.getMembers)();\n\t\t\t\tconst dep = new HarmonyEvaluatedImportSpecifierDependency(\n\t\t\t\t\tsettings.source,\n\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\tsettings.ids.concat(members).concat([leftPart]),\n\t\t\t\t\tsettings.name,\n\t\t\t\t\t/** @type {Range} */ (expression.range),\n\t\t\t\t\tsettings.assertions,\n\t\t\t\t\t\"in\"\n\t\t\t\t);\n\t\t\t\tdep.directImport = members.length === 0;\n\t\t\t\tdep.asiSafe = !parser.isAsiPosition(\n\t\t\t\t\t/** @type {Range} */ (expression.range)[0]\n\t\t\t\t);\n\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (expression.loc);\n\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.expression\n\t\t\t.for(harmonySpecifierTag)\n\t\t\t.tap(\"HarmonyImportDependencyParserPlugin\", expr => {\n\t\t\t\tconst settings = /** @type {HarmonySettings} */ (parser.currentTagData);\n\t\t\t\tconst dep = new HarmonyImportSpecifierDependency(\n\t\t\t\t\tsettings.source,\n\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\tsettings.ids,\n\t\t\t\t\tsettings.name,\n\t\t\t\t\t/** @type {Range} */ (expr.range),\n\t\t\t\t\texportPresenceMode,\n\t\t\t\t\tsettings.assertions,\n\t\t\t\t\t[]\n\t\t\t\t);\n\t\t\t\tdep.referencedPropertiesInDestructuring =\n\t\t\t\t\tparser.destructuringAssignmentPropertiesFor(expr);\n\t\t\t\tdep.shorthand = parser.scope.inShorthand;\n\t\t\t\tdep.directImport = true;\n\t\t\t\tdep.asiSafe = !parser.isAsiPosition(\n\t\t\t\t\t/** @type {Range} */ (expr.range)[0]\n\t\t\t\t);\n\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (expr.loc);\n\t\t\t\tdep.call = parser.scope.inTaggedTemplateTag;\n\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\treturn true;\n\t\t\t});\n\t\tparser.hooks.expressionMemberChain\n\t\t\t.for(harmonySpecifierTag)\n\t\t\t.tap(\n\t\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t\t(expression, members, membersOptionals, memberRanges) => {\n\t\t\t\t\tconst settings = /** @type {HarmonySettings} */ (\n\t\t\t\t\t\tparser.currentTagData\n\t\t\t\t\t);\n\t\t\t\t\tconst nonOptionalMembers = getNonOptionalPart(\n\t\t\t\t\t\tmembers,\n\t\t\t\t\t\tmembersOptionals\n\t\t\t\t\t);\n\t\t\t\t\t/** @type {Range[]} */\n\t\t\t\t\tconst ranges = memberRanges.slice(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tmemberRanges.length - (members.length - nonOptionalMembers.length)\n\t\t\t\t\t);\n\t\t\t\t\tconst expr =\n\t\t\t\t\t\tnonOptionalMembers !== members\n\t\t\t\t\t\t\t? getNonOptionalMemberChain(\n\t\t\t\t\t\t\t\t\texpression,\n\t\t\t\t\t\t\t\t\tmembers.length - nonOptionalMembers.length\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: expression;\n\t\t\t\t\tconst ids = settings.ids.concat(nonOptionalMembers);\n\t\t\t\t\tconst dep = new HarmonyImportSpecifierDependency(\n\t\t\t\t\t\tsettings.source,\n\t\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\t\tids,\n\t\t\t\t\t\tsettings.name,\n\t\t\t\t\t\t/** @type {Range} */ (expr.range),\n\t\t\t\t\t\texportPresenceMode,\n\t\t\t\t\t\tsettings.assertions,\n\t\t\t\t\t\tranges\n\t\t\t\t\t);\n\t\t\t\t\tdep.referencedPropertiesInDestructuring =\n\t\t\t\t\t\tparser.destructuringAssignmentPropertiesFor(expr);\n\t\t\t\t\tdep.asiSafe = !parser.isAsiPosition(\n\t\t\t\t\t\t/** @type {Range} */ (expr.range)[0]\n\t\t\t\t\t);\n\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (expr.loc);\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t);\n\t\tparser.hooks.callMemberChain\n\t\t\t.for(harmonySpecifierTag)\n\t\t\t.tap(\n\t\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t\t(expression, members, membersOptionals, memberRanges) => {\n\t\t\t\t\tconst { arguments: args, callee } = expression;\n\t\t\t\t\tconst settings = /** @type {HarmonySettings} */ (\n\t\t\t\t\t\tparser.currentTagData\n\t\t\t\t\t);\n\t\t\t\t\tconst nonOptionalMembers = getNonOptionalPart(\n\t\t\t\t\t\tmembers,\n\t\t\t\t\t\tmembersOptionals\n\t\t\t\t\t);\n\t\t\t\t\t/** @type {Range[]} */\n\t\t\t\t\tconst ranges = memberRanges.slice(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tmemberRanges.length - (members.length - nonOptionalMembers.length)\n\t\t\t\t\t);\n\t\t\t\t\tconst expr =\n\t\t\t\t\t\tnonOptionalMembers !== members\n\t\t\t\t\t\t\t? getNonOptionalMemberChain(\n\t\t\t\t\t\t\t\t\tcallee,\n\t\t\t\t\t\t\t\t\tmembers.length - nonOptionalMembers.length\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: callee;\n\t\t\t\t\tconst ids = settings.ids.concat(nonOptionalMembers);\n\t\t\t\t\tconst dep = new HarmonyImportSpecifierDependency(\n\t\t\t\t\t\tsettings.source,\n\t\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\t\tids,\n\t\t\t\t\t\tsettings.name,\n\t\t\t\t\t\t/** @type {Range} */ (expr.range),\n\t\t\t\t\t\texportPresenceMode,\n\t\t\t\t\t\tsettings.assertions,\n\t\t\t\t\t\tranges\n\t\t\t\t\t);\n\t\t\t\t\tdep.directImport = members.length === 0;\n\t\t\t\t\tdep.call = true;\n\t\t\t\t\tdep.asiSafe = !parser.isAsiPosition(\n\t\t\t\t\t\t/** @type {Range} */ (expr.range)[0]\n\t\t\t\t\t);\n\t\t\t\t\t// only in case when we strictly follow the spec we need a special case here\n\t\t\t\t\tdep.namespaceObjectAsContext =\n\t\t\t\t\t\tmembers.length > 0 &&\n\t\t\t\t\t\t/** @type {boolean} */ (this.strictThisContextOnImports);\n\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (expr.loc);\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\tif (args) parser.walkExpressions(args);\n\t\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t);\n\t\tconst { hotAcceptCallback, hotAcceptWithoutCallback } =\n\t\t\tHotModuleReplacementPlugin.getParserHooks(parser);\n\t\thotAcceptCallback.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(expr, requests) => {\n\t\t\t\tif (!HarmonyExports.isEnabled(parser.state)) {\n\t\t\t\t\t// This is not a harmony module, skip it\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst dependencies = requests.map(request => {\n\t\t\t\t\tconst dep = new HarmonyAcceptImportDependency(request);\n\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (expr.loc);\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\treturn dep;\n\t\t\t\t});\n\t\t\t\tif (dependencies.length > 0) {\n\t\t\t\t\tconst dep = new HarmonyAcceptDependency(\n\t\t\t\t\t\t/** @type {Range} */\n\t\t\t\t\t\t(expr.range),\n\t\t\t\t\t\tdependencies,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (expr.loc);\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\thotAcceptWithoutCallback.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(expr, requests) => {\n\t\t\t\tif (!HarmonyExports.isEnabled(parser.state)) {\n\t\t\t\t\t// This is not a harmony module, skip it\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst dependencies = requests.map(request => {\n\t\t\t\t\tconst dep = new HarmonyAcceptImportDependency(request);\n\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (expr.loc);\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\treturn dep;\n\t\t\t\t});\n\t\t\t\tif (dependencies.length > 0) {\n\t\t\t\t\tconst dep = new HarmonyAcceptDependency(\n\t\t\t\t\t\t/** @type {Range} */\n\t\t\t\t\t\t(expr.range),\n\t\t\t\t\t\tdependencies,\n\t\t\t\t\t\tfalse\n\t\t\t\t\t);\n\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (expr.loc);\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n};\n\nmodule.exports.harmonySpecifierTag = harmonySpecifierTag;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}