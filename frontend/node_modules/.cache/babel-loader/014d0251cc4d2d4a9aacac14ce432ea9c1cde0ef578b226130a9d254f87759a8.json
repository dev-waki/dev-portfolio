{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst memoize = require(\"./memoize\");\n\n/** @typedef {import(\"schema-utils/declarations/validate\").ValidationErrorConfiguration} ValidationErrorConfiguration */\n/** @typedef {import(\"./fs\").JsonObject} JsonObject */\n\nconst getValidate = memoize(() => require(\"schema-utils\").validate);\n\n/**\n * @template {object | object[]} T\n * @param {(function(T): boolean) | undefined} check check\n * @param {() => JsonObject} getSchema get schema fn\n * @param {ValidationErrorConfiguration} options options\n * @returns {function(T=): void} validate\n */\nconst createSchemaValidation = (check, getSchema, options) => {\n  getSchema = memoize(getSchema);\n  return value => {\n    if (check && !check(/** @type {T} */value)) {\n      getValidate()(getSchema(), /** @type {object | object[]} */\n      value, options);\n      require(\"util\").deprecate(() => {}, \"webpack bug: Pre-compiled schema reports error while real schema is happy. This has performance drawbacks.\", \"DEP_WEBPACK_PRE_COMPILED_SCHEMA_INVALID\")();\n    }\n  };\n};\nmodule.exports = createSchemaValidation;","map":{"version":3,"names":["memoize","require","getValidate","validate","createSchemaValidation","check","getSchema","options","value","deprecate","module","exports"],"sources":["/home/wickliff/Desktop/dev-waki/portfolio2/node_modules/webpack/lib/util/create-schema-validation.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst memoize = require(\"./memoize\");\n\n/** @typedef {import(\"schema-utils/declarations/validate\").ValidationErrorConfiguration} ValidationErrorConfiguration */\n/** @typedef {import(\"./fs\").JsonObject} JsonObject */\n\nconst getValidate = memoize(() => require(\"schema-utils\").validate);\n\n/**\n * @template {object | object[]} T\n * @param {(function(T): boolean) | undefined} check check\n * @param {() => JsonObject} getSchema get schema fn\n * @param {ValidationErrorConfiguration} options options\n * @returns {function(T=): void} validate\n */\nconst createSchemaValidation = (check, getSchema, options) => {\n\tgetSchema = memoize(getSchema);\n\treturn value => {\n\t\tif (check && !check(/** @type {T} */ (value))) {\n\t\t\tgetValidate()(\n\t\t\t\tgetSchema(),\n\t\t\t\t/** @type {object | object[]} */\n\t\t\t\t(value),\n\t\t\t\toptions\n\t\t\t);\n\t\t\trequire(\"util\").deprecate(\n\t\t\t\t() => {},\n\t\t\t\t\"webpack bug: Pre-compiled schema reports error while real schema is happy. This has performance drawbacks.\",\n\t\t\t\t\"DEP_WEBPACK_PRE_COMPILED_SCHEMA_INVALID\"\n\t\t\t)();\n\t\t}\n\t};\n};\n\nmodule.exports = createSchemaValidation;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;;AAEpC;AACA;;AAEA,MAAMC,WAAW,GAAGF,OAAO,CAAC,MAAMC,OAAO,CAAC,cAAc,CAAC,CAACE,QAAQ,CAAC;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,sBAAsB,GAAGA,CAACC,KAAK,EAAEC,SAAS,EAAEC,OAAO,KAAK;EAC7DD,SAAS,GAAGN,OAAO,CAACM,SAAS,CAAC;EAC9B,OAAOE,KAAK,IAAI;IACf,IAAIH,KAAK,IAAI,CAACA,KAAK,CAAC,gBAAkBG,KAAM,CAAC,EAAE;MAC9CN,WAAW,CAAC,CAAC,CACZI,SAAS,CAAC,CAAC,EACX;MACCE,KAAK,EACND,OACD,CAAC;MACDN,OAAO,CAAC,MAAM,CAAC,CAACQ,SAAS,CACxB,MAAM,CAAC,CAAC,EACR,4GAA4G,EAC5G,yCACD,CAAC,CAAC,CAAC;IACJ;EACD,CAAC;AACF,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGP,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}