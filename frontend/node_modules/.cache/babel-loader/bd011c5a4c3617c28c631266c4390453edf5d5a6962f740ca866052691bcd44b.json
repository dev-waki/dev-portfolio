{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra, Zackary Jackson @ScriptedAlchemy, Marais Rossouw @maraisr\n*/\n\n\"use strict\";\n\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst memoize = require(\"../util/memoize\");\nconst ContainerEntryDependency = require(\"./ContainerEntryDependency\");\nconst ContainerEntryModuleFactory = require(\"./ContainerEntryModuleFactory\");\nconst ContainerExposedDependency = require(\"./ContainerExposedDependency\");\nconst {\n  parseOptions\n} = require(\"./options\");\n\n/** @typedef {import(\"../../declarations/plugins/container/ContainerPlugin\").ContainerPluginOptions} ContainerPluginOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"./ContainerEntryModule\").ExposeOptions} ExposeOptions */\n/** @typedef {import(\"./ContainerEntryModule\").ExposesList} ExposesList */\n\nconst getModuleFederationPlugin = memoize(() => require(\"./ModuleFederationPlugin\"));\nconst validate = createSchemaValidation(require(\"../../schemas/plugins/container/ContainerPlugin.check.js\"), () => require(\"../../schemas/plugins/container/ContainerPlugin.json\"), {\n  name: \"Container Plugin\",\n  baseDataPath: \"options\"\n});\nconst PLUGIN_NAME = \"ContainerPlugin\";\nclass ContainerPlugin {\n  /**\n   * @param {ContainerPluginOptions} options options\n   */\n  constructor(options) {\n    validate(options);\n    this._options = {\n      name: options.name,\n      shareScope: options.shareScope || \"default\",\n      library: options.library || {\n        type: \"var\",\n        name: options.name\n      },\n      runtime: options.runtime,\n      filename: options.filename || undefined,\n      exposes: (/** @type {ExposesList} */\n      parseOptions(options.exposes, item => ({\n        import: Array.isArray(item) ? item : [item],\n        name: undefined\n      }), item => ({\n        import: Array.isArray(item.import) ? item.import : [item.import],\n        name: item.name || undefined\n      })))\n    };\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    const {\n      name,\n      exposes,\n      shareScope,\n      filename,\n      library,\n      runtime\n    } = this._options;\n    if (!compiler.options.output.enabledLibraryTypes.includes(library.type)) {\n      compiler.options.output.enabledLibraryTypes.push(library.type);\n    }\n    compiler.hooks.make.tapAsync(PLUGIN_NAME, (compilation, callback) => {\n      const hooks = getModuleFederationPlugin().getCompilationHooks(compilation);\n      const dep = new ContainerEntryDependency(name, exposes, shareScope);\n      dep.loc = {\n        name\n      };\n      compilation.addEntry(/** @type {string} */compilation.options.context, dep, {\n        name,\n        filename,\n        runtime,\n        library\n      }, error => {\n        if (error) return callback(error);\n        hooks.addContainerEntryDependency.call(dep);\n        callback();\n      });\n    });\n    compiler.hooks.thisCompilation.tap(PLUGIN_NAME, (compilation, {\n      normalModuleFactory\n    }) => {\n      compilation.dependencyFactories.set(ContainerEntryDependency, new ContainerEntryModuleFactory());\n      compilation.dependencyFactories.set(ContainerExposedDependency, normalModuleFactory);\n    });\n  }\n}\nmodule.exports = ContainerPlugin;","map":{"version":3,"names":["createSchemaValidation","require","memoize","ContainerEntryDependency","ContainerEntryModuleFactory","ContainerExposedDependency","parseOptions","getModuleFederationPlugin","validate","name","baseDataPath","PLUGIN_NAME","ContainerPlugin","constructor","options","_options","shareScope","library","type","runtime","filename","undefined","exposes","item","import","Array","isArray","apply","compiler","output","enabledLibraryTypes","includes","push","hooks","make","tapAsync","compilation","callback","getCompilationHooks","dep","loc","addEntry","context","error","addContainerEntryDependency","call","thisCompilation","tap","normalModuleFactory","dependencyFactories","set","module","exports"],"sources":["/home/wickliff/Desktop/dev-waki/portfolio2/node_modules/webpack/lib/container/ContainerPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra, Zackary Jackson @ScriptedAlchemy, Marais Rossouw @maraisr\n*/\n\n\"use strict\";\n\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst memoize = require(\"../util/memoize\");\nconst ContainerEntryDependency = require(\"./ContainerEntryDependency\");\nconst ContainerEntryModuleFactory = require(\"./ContainerEntryModuleFactory\");\nconst ContainerExposedDependency = require(\"./ContainerExposedDependency\");\nconst { parseOptions } = require(\"./options\");\n\n/** @typedef {import(\"../../declarations/plugins/container/ContainerPlugin\").ContainerPluginOptions} ContainerPluginOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"./ContainerEntryModule\").ExposeOptions} ExposeOptions */\n/** @typedef {import(\"./ContainerEntryModule\").ExposesList} ExposesList */\n\nconst getModuleFederationPlugin = memoize(() =>\n\trequire(\"./ModuleFederationPlugin\")\n);\n\nconst validate = createSchemaValidation(\n\trequire(\"../../schemas/plugins/container/ContainerPlugin.check.js\"),\n\t() => require(\"../../schemas/plugins/container/ContainerPlugin.json\"),\n\t{\n\t\tname: \"Container Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\n\nconst PLUGIN_NAME = \"ContainerPlugin\";\n\nclass ContainerPlugin {\n\t/**\n\t * @param {ContainerPluginOptions} options options\n\t */\n\tconstructor(options) {\n\t\tvalidate(options);\n\n\t\tthis._options = {\n\t\t\tname: options.name,\n\t\t\tshareScope: options.shareScope || \"default\",\n\t\t\tlibrary: options.library || {\n\t\t\t\ttype: \"var\",\n\t\t\t\tname: options.name\n\t\t\t},\n\t\t\truntime: options.runtime,\n\t\t\tfilename: options.filename || undefined,\n\t\t\texposes: /** @type {ExposesList} */ (\n\t\t\t\tparseOptions(\n\t\t\t\t\toptions.exposes,\n\t\t\t\t\titem => ({\n\t\t\t\t\t\timport: Array.isArray(item) ? item : [item],\n\t\t\t\t\t\tname: undefined\n\t\t\t\t\t}),\n\t\t\t\t\titem => ({\n\t\t\t\t\t\timport: Array.isArray(item.import) ? item.import : [item.import],\n\t\t\t\t\t\tname: item.name || undefined\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t)\n\t\t};\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst { name, exposes, shareScope, filename, library, runtime } =\n\t\t\tthis._options;\n\n\t\tif (!compiler.options.output.enabledLibraryTypes.includes(library.type)) {\n\t\t\tcompiler.options.output.enabledLibraryTypes.push(library.type);\n\t\t}\n\n\t\tcompiler.hooks.make.tapAsync(PLUGIN_NAME, (compilation, callback) => {\n\t\t\tconst hooks =\n\t\t\t\tgetModuleFederationPlugin().getCompilationHooks(compilation);\n\t\t\tconst dep = new ContainerEntryDependency(name, exposes, shareScope);\n\t\t\tdep.loc = { name };\n\t\t\tcompilation.addEntry(\n\t\t\t\t/** @type {string} */ (compilation.options.context),\n\t\t\t\tdep,\n\t\t\t\t{\n\t\t\t\t\tname,\n\t\t\t\t\tfilename,\n\t\t\t\t\truntime,\n\t\t\t\t\tlibrary\n\t\t\t\t},\n\t\t\t\terror => {\n\t\t\t\t\tif (error) return callback(error);\n\t\t\t\t\thooks.addContainerEntryDependency.call(dep);\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\tPLUGIN_NAME,\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tContainerEntryDependency,\n\t\t\t\t\tnew ContainerEntryModuleFactory()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tContainerExposedDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ContainerPlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}