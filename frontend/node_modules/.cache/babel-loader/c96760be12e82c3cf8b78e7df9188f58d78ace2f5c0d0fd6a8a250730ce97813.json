{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  OriginalSource,\n  RawSource\n} = require(\"webpack-sources\");\nconst ConcatenationScope = require(\"./ConcatenationScope\");\nconst EnvironmentNotSupportAsyncWarning = require(\"./EnvironmentNotSupportAsyncWarning\");\nconst {\n  UsageState\n} = require(\"./ExportsInfo\");\nconst InitFragment = require(\"./InitFragment\");\nconst Module = require(\"./Module\");\nconst {\n  JS_TYPES,\n  CSS_URL_TYPES,\n  CSS_IMPORT_TYPES\n} = require(\"./ModuleSourceTypesConstants\");\nconst {\n  JAVASCRIPT_MODULE_TYPE_DYNAMIC\n} = require(\"./ModuleTypeConstants\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst Template = require(\"./Template\");\nconst StaticExportsDependency = require(\"./dependencies/StaticExportsDependency\");\nconst createHash = require(\"./util/createHash\");\nconst extractUrlAndGlobal = require(\"./util/extractUrlAndGlobal\");\nconst makeSerializable = require(\"./util/makeSerializable\");\nconst propertyAccess = require(\"./util/propertyAccess\");\nconst {\n  register\n} = require(\"./util/serialization\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"./ExportsInfo\")} ExportsInfo */\n/** @typedef {import(\"./Generator\").GenerateContext} GenerateContext */\n/** @typedef {import(\"./Generator\").SourceTypes} SourceTypes */\n/** @typedef {import(\"./Module\").BuildInfo} BuildInfo */\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"./Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n/** @typedef {import(\"./Module\").LibIdentOptions} LibIdentOptions */\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"./Module\").ReadOnlyRuntimeRequirements} ReadOnlyRuntimeRequirements */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"./NormalModuleFactory\")} NormalModuleFactory */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"./WebpackError\")} WebpackError */\n/** @typedef {import(\"./javascript/JavascriptModulesPlugin\").ChunkRenderContext} ChunkRenderContext */\n/** @typedef {import(\"./javascript/JavascriptParser\").ImportAttributes} ImportAttributes */\n/** @typedef {import(\"./serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"./serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"./util/Hash\")} Hash */\n/** @typedef {typeof import(\"./util/Hash\")} HashConstructor */\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/** @typedef {{ attributes?: ImportAttributes, externalType: \"import\" | \"module\" | undefined }} ImportDependencyMeta */\n/** @typedef {{ layer?: string, supports?: string, media?: string }} CssImportDependencyMeta */\n/** @typedef {{ sourceType: \"css-url\" }} AssetDependencyMeta */\n\n/** @typedef {ImportDependencyMeta | CssImportDependencyMeta | AssetDependencyMeta} DependencyMeta */\n\n/**\n * @typedef {object} SourceData\n * @property {boolean=} iife\n * @property {string=} init\n * @property {string} expression\n * @property {InitFragment<ChunkRenderContext>[]=} chunkInitFragments\n * @property {ReadOnlyRuntimeRequirements=} runtimeRequirements\n */\n\nconst RUNTIME_REQUIREMENTS = new Set([RuntimeGlobals.module]);\nconst RUNTIME_REQUIREMENTS_FOR_SCRIPT = new Set([RuntimeGlobals.loadScript]);\nconst RUNTIME_REQUIREMENTS_FOR_MODULE = new Set([RuntimeGlobals.definePropertyGetters]);\nconst EMPTY_RUNTIME_REQUIREMENTS = new Set([]);\n\n/**\n * @param {string|string[]} variableName the variable name or path\n * @param {string} type the module system\n * @returns {SourceData} the generated source\n */\nconst getSourceForGlobalVariableExternal = (variableName, type) => {\n  if (!Array.isArray(variableName)) {\n    // make it an array as the look up works the same basically\n    variableName = [variableName];\n  }\n\n  // needed for e.g. window[\"some\"][\"thing\"]\n  const objectLookup = variableName.map(r => `[${JSON.stringify(r)}]`).join(\"\");\n  return {\n    iife: type === \"this\",\n    expression: `${type}${objectLookup}`\n  };\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @returns {SourceData} the generated source\n */\nconst getSourceForCommonJsExternal = moduleAndSpecifiers => {\n  if (!Array.isArray(moduleAndSpecifiers)) {\n    return {\n      expression: `require(${JSON.stringify(moduleAndSpecifiers)})`\n    };\n  }\n  const moduleName = moduleAndSpecifiers[0];\n  return {\n    expression: `require(${JSON.stringify(moduleName)})${propertyAccess(moduleAndSpecifiers, 1)}`\n  };\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @param {string} importMetaName import.meta name\n * @param {boolean} needPrefix need to use `node:` prefix for `module` import\n * @returns {SourceData} the generated source\n */\nconst getSourceForCommonJsExternalInNodeModule = (moduleAndSpecifiers, importMetaName, needPrefix) => {\n  const chunkInitFragments = [new InitFragment(`import { createRequire as __WEBPACK_EXTERNAL_createRequire } from \"${needPrefix ? \"node:\" : \"\"}module\";\\n`, InitFragment.STAGE_HARMONY_IMPORTS, 0, \"external module node-commonjs\")];\n  if (!Array.isArray(moduleAndSpecifiers)) {\n    return {\n      chunkInitFragments,\n      expression: `__WEBPACK_EXTERNAL_createRequire(${importMetaName}.url)(${JSON.stringify(moduleAndSpecifiers)})`\n    };\n  }\n  const moduleName = moduleAndSpecifiers[0];\n  return {\n    chunkInitFragments,\n    expression: `__WEBPACK_EXTERNAL_createRequire(${importMetaName}.url)(${JSON.stringify(moduleName)})${propertyAccess(moduleAndSpecifiers, 1)}`\n  };\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @param {ImportDependencyMeta=} dependencyMeta the dependency meta\n * @returns {SourceData} the generated source\n */\nconst getSourceForImportExternal = (moduleAndSpecifiers, runtimeTemplate, dependencyMeta) => {\n  const importName = runtimeTemplate.outputOptions.importFunctionName;\n  if (!runtimeTemplate.supportsDynamicImport() && (importName === \"import\" || importName === \"module-import\")) {\n    throw new Error(\"The target environment doesn't support 'import()' so it's not possible to use external type 'import'\");\n  }\n  const attributes = dependencyMeta && dependencyMeta.attributes ? dependencyMeta.attributes._isLegacyAssert ? `, { assert: ${JSON.stringify(dependencyMeta.attributes, importAssertionReplacer)} }` : `, { with: ${JSON.stringify(dependencyMeta.attributes)} }` : \"\";\n  if (!Array.isArray(moduleAndSpecifiers)) {\n    return {\n      expression: `${importName}(${JSON.stringify(moduleAndSpecifiers)}${attributes});`\n    };\n  }\n  if (moduleAndSpecifiers.length === 1) {\n    return {\n      expression: `${importName}(${JSON.stringify(moduleAndSpecifiers[0])}${attributes});`\n    };\n  }\n  const moduleName = moduleAndSpecifiers[0];\n  return {\n    expression: `${importName}(${JSON.stringify(moduleName)}${attributes}).then(${runtimeTemplate.returningFunction(`module${propertyAccess(moduleAndSpecifiers, 1)}`, \"module\")});`\n  };\n};\n\n/**\n * @param {string} key key\n * @param {any | undefined} value value\n * @returns {undefined | string} replaced value\n */\nconst importAssertionReplacer = (key, value) => {\n  if (key === \"_isLegacyAssert\") {\n    return;\n  }\n  return value;\n};\n\n/**\n * @extends {InitFragment<ChunkRenderContext>}\n */\nclass ModuleExternalInitFragment extends InitFragment {\n  /**\n   * @param {string} request import source\n   * @param {string=} ident recomputed ident\n   * @param {ImportDependencyMeta=} dependencyMeta the dependency meta\n   * @param {string | HashConstructor=} hashFunction the hash function to use\n   */\n  constructor(request, ident, dependencyMeta, hashFunction = \"md4\") {\n    if (ident === undefined) {\n      ident = Template.toIdentifier(request);\n      if (ident !== request) {\n        ident += `_${createHash(hashFunction).update(request).digest(\"hex\").slice(0, 8)}`;\n      }\n    }\n    const identifier = `__WEBPACK_EXTERNAL_MODULE_${ident}__`;\n    super(`import * as ${identifier} from ${JSON.stringify(request)}${dependencyMeta && dependencyMeta.attributes ? dependencyMeta.attributes._isLegacyAssert ? ` assert ${JSON.stringify(dependencyMeta.attributes, importAssertionReplacer)}` : ` with ${JSON.stringify(dependencyMeta.attributes)}` : \"\"};\\n`, InitFragment.STAGE_HARMONY_IMPORTS, 0, `external module import ${ident}`);\n    this._ident = ident;\n    this._request = request;\n    this._dependencyMeta = request;\n    this._identifier = identifier;\n  }\n  getNamespaceIdentifier() {\n    return this._identifier;\n  }\n}\nregister(ModuleExternalInitFragment, \"webpack/lib/ExternalModule\", \"ModuleExternalInitFragment\", {\n  serialize(obj, {\n    write\n  }) {\n    write(obj._request);\n    write(obj._ident);\n    write(obj._dependencyMeta);\n  },\n  deserialize({\n    read\n  }) {\n    return new ModuleExternalInitFragment(read(), read(), read());\n  }\n});\n\n/**\n * @param {string} input input\n * @param {ExportsInfo} exportsInfo the exports info\n * @param {RuntimeSpec=} runtime the runtime\n * @param {RuntimeTemplate=} runtimeTemplate the runtime template\n * @returns {string | undefined} the module remapping\n */\nconst generateModuleRemapping = (input, exportsInfo, runtime, runtimeTemplate) => {\n  if (exportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused) {\n    const properties = [];\n    for (const exportInfo of exportsInfo.orderedExports) {\n      const used = exportInfo.getUsedName(exportInfo.name, runtime);\n      if (!used) continue;\n      const nestedInfo = exportInfo.getNestedExportsInfo();\n      if (nestedInfo) {\n        const nestedExpr = generateModuleRemapping(`${input}${propertyAccess([exportInfo.name])}`, nestedInfo);\n        if (nestedExpr) {\n          properties.push(`[${JSON.stringify(used)}]: y(${nestedExpr})`);\n          continue;\n        }\n      }\n      properties.push(`[${JSON.stringify(used)}]: ${/** @type {RuntimeTemplate} */runtimeTemplate.returningFunction(`${input}${propertyAccess([exportInfo.name])}`)}`);\n    }\n    return `x({ ${properties.join(\", \")} })`;\n  }\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @param {ExportsInfo} exportsInfo exports info of this module\n * @param {RuntimeSpec} runtime the runtime\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @param {ImportDependencyMeta} dependencyMeta the dependency meta\n * @returns {SourceData} the generated source\n */\nconst getSourceForModuleExternal = (moduleAndSpecifiers, exportsInfo, runtime, runtimeTemplate, dependencyMeta) => {\n  if (!Array.isArray(moduleAndSpecifiers)) moduleAndSpecifiers = [moduleAndSpecifiers];\n  const initFragment = new ModuleExternalInitFragment(moduleAndSpecifiers[0], undefined, dependencyMeta, runtimeTemplate.outputOptions.hashFunction);\n  const baseAccess = `${initFragment.getNamespaceIdentifier()}${propertyAccess(moduleAndSpecifiers, 1)}`;\n  const moduleRemapping = generateModuleRemapping(baseAccess, exportsInfo, runtime, runtimeTemplate);\n  const expression = moduleRemapping || baseAccess;\n  return {\n    expression,\n    init: moduleRemapping ? `var x = ${runtimeTemplate.basicFunction(\"y\", `var x = {}; ${RuntimeGlobals.definePropertyGetters}(x, y); return x`)} \\nvar y = ${runtimeTemplate.returningFunction(runtimeTemplate.returningFunction(\"x\"), \"x\")}` : undefined,\n    runtimeRequirements: moduleRemapping ? RUNTIME_REQUIREMENTS_FOR_MODULE : undefined,\n    chunkInitFragments: [initFragment]\n  };\n};\n\n/**\n * @param {string|string[]} urlAndGlobal the script request\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nconst getSourceForScriptExternal = (urlAndGlobal, runtimeTemplate) => {\n  if (typeof urlAndGlobal === \"string\") {\n    urlAndGlobal = extractUrlAndGlobal(urlAndGlobal);\n  }\n  const url = urlAndGlobal[0];\n  const globalName = urlAndGlobal[1];\n  return {\n    init: \"var __webpack_error__ = new Error();\",\n    expression: `new Promise(${runtimeTemplate.basicFunction(\"resolve, reject\", [`if(typeof ${globalName} !== \"undefined\") return resolve();`, `${RuntimeGlobals.loadScript}(${JSON.stringify(url)}, ${runtimeTemplate.basicFunction(\"event\", [`if(typeof ${globalName} !== \"undefined\") return resolve();`, \"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\", \"var realSrc = event && event.target && event.target.src;\", \"__webpack_error__.message = 'Loading script failed.\\\\n(' + errorType + ': ' + realSrc + ')';\", \"__webpack_error__.name = 'ScriptExternalLoadError';\", \"__webpack_error__.type = errorType;\", \"__webpack_error__.request = realSrc;\", \"reject(__webpack_error__);\"])}, ${JSON.stringify(globalName)});`])}).then(${runtimeTemplate.returningFunction(`${globalName}${propertyAccess(urlAndGlobal, 2)}`)})`,\n    runtimeRequirements: RUNTIME_REQUIREMENTS_FOR_SCRIPT\n  };\n};\n\n/**\n * @param {string} variableName the variable name to check\n * @param {string} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {string} the generated source\n */\nconst checkExternalVariable = (variableName, request, runtimeTemplate) => `if(typeof ${variableName} === 'undefined') { ${runtimeTemplate.throwMissingModuleErrorBlock({\n  request\n})} }\\n`;\n\n/**\n * @param {string|number} id the module id\n * @param {boolean} optional true, if the module is optional\n * @param {string|string[]} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nconst getSourceForAmdOrUmdExternal = (id, optional, request, runtimeTemplate) => {\n  const externalVariable = `__WEBPACK_EXTERNAL_MODULE_${Template.toIdentifier(`${id}`)}__`;\n  return {\n    init: optional ? checkExternalVariable(externalVariable, Array.isArray(request) ? request.join(\".\") : request, runtimeTemplate) : undefined,\n    expression: externalVariable\n  };\n};\n\n/**\n * @param {boolean} optional true, if the module is optional\n * @param {string|string[]} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nconst getSourceForDefaultCase = (optional, request, runtimeTemplate) => {\n  if (!Array.isArray(request)) {\n    // make it an array as the look up works the same basically\n    request = [request];\n  }\n  const variableName = request[0];\n  const objectLookup = propertyAccess(request, 1);\n  return {\n    init: optional ? checkExternalVariable(variableName, request.join(\".\"), runtimeTemplate) : undefined,\n    expression: `${variableName}${objectLookup}`\n  };\n};\n\n/** @typedef {Record<string, string | string[]>} RequestRecord */\n\nclass ExternalModule extends Module {\n  /**\n   * @param {string | string[] | RequestRecord} request request\n   * @param {string} type type\n   * @param {string} userRequest user request\n   * @param {DependencyMeta=} dependencyMeta dependency meta\n   */\n  constructor(request, type, userRequest, dependencyMeta) {\n    super(JAVASCRIPT_MODULE_TYPE_DYNAMIC, null);\n\n    // Info from Factory\n    /** @type {string | string[] | Record<string, string | string[]>} */\n    this.request = request;\n    /** @type {string} */\n    this.externalType = type;\n    /** @type {string} */\n    this.userRequest = userRequest;\n    /** @type {DependencyMeta=} */\n    this.dependencyMeta = dependencyMeta;\n  }\n\n  /**\n   * @returns {SourceTypes} types available (do not mutate)\n   */\n  getSourceTypes() {\n    if (this.externalType === \"asset\" && this.dependencyMeta && /** @type {AssetDependencyMeta} */\n    this.dependencyMeta.sourceType === \"css-url\") {\n      return CSS_URL_TYPES;\n    } else if (this.externalType === \"css-import\") {\n      return CSS_IMPORT_TYPES;\n    }\n    return JS_TYPES;\n  }\n\n  /**\n   * @param {LibIdentOptions} options options\n   * @returns {string | null} an identifier for library inclusion\n   */\n  libIdent(options) {\n    return this.userRequest;\n  }\n\n  /**\n   * @param {Chunk} chunk the chunk which condition should be checked\n   * @param {Compilation} compilation the compilation\n   * @returns {boolean} true, if the chunk is ok for the module\n   */\n  chunkCondition(chunk, {\n    chunkGraph\n  }) {\n    return this.externalType === \"css-import\" ? true : chunkGraph.getNumberOfEntryModules(chunk) > 0;\n  }\n\n  /**\n   * @returns {string} a unique identifier of the module\n   */\n  identifier() {\n    return `external ${this._resolveExternalType(this.externalType)} ${JSON.stringify(this.request)}`;\n  }\n\n  /**\n   * @param {RequestShortener} requestShortener the request shortener\n   * @returns {string} a user readable identifier of the module\n   */\n  readableIdentifier(requestShortener) {\n    return `external ${JSON.stringify(this.request)}`;\n  }\n\n  /**\n   * @param {NeedBuildContext} context context info\n   * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n   * @returns {void}\n   */\n  needBuild(context, callback) {\n    return callback(null, !this.buildMeta);\n  }\n\n  /**\n   * @param {WebpackOptions} options webpack options\n   * @param {Compilation} compilation the compilation\n   * @param {ResolverWithOptions} resolver the resolver\n   * @param {InputFileSystem} fs the file system\n   * @param {function(WebpackError=): void} callback callback function\n   * @returns {void}\n   */\n  build(options, compilation, resolver, fs, callback) {\n    this.buildMeta = {\n      async: false,\n      exportsType: undefined\n    };\n    this.buildInfo = {\n      strict: true,\n      topLevelDeclarations: new Set(),\n      module: compilation.outputOptions.module\n    };\n    const {\n      request,\n      externalType\n    } = this._getRequestAndExternalType();\n    this.buildMeta.exportsType = \"dynamic\";\n    let canMangle = false;\n    this.clearDependenciesAndBlocks();\n    switch (externalType) {\n      case \"this\":\n        this.buildInfo.strict = false;\n        break;\n      case \"system\":\n        if (!Array.isArray(request) || request.length === 1) {\n          this.buildMeta.exportsType = \"namespace\";\n          canMangle = true;\n        }\n        break;\n      case \"module\":\n        if (this.buildInfo.module) {\n          if (!Array.isArray(request) || request.length === 1) {\n            this.buildMeta.exportsType = \"namespace\";\n            canMangle = true;\n          }\n        } else {\n          this.buildMeta.async = true;\n          EnvironmentNotSupportAsyncWarning.check(this, compilation.runtimeTemplate, \"external module\");\n          if (!Array.isArray(request) || request.length === 1) {\n            this.buildMeta.exportsType = \"namespace\";\n            canMangle = false;\n          }\n        }\n        break;\n      case \"script\":\n        this.buildMeta.async = true;\n        EnvironmentNotSupportAsyncWarning.check(this, compilation.runtimeTemplate, \"external script\");\n        break;\n      case \"promise\":\n        this.buildMeta.async = true;\n        EnvironmentNotSupportAsyncWarning.check(this, compilation.runtimeTemplate, \"external promise\");\n        break;\n      case \"import\":\n        this.buildMeta.async = true;\n        EnvironmentNotSupportAsyncWarning.check(this, compilation.runtimeTemplate, \"external import\");\n        if (!Array.isArray(request) || request.length === 1) {\n          this.buildMeta.exportsType = \"namespace\";\n          canMangle = false;\n        }\n        break;\n    }\n    this.addDependency(new StaticExportsDependency(true, canMangle));\n    callback();\n  }\n\n  /**\n   * restore unsafe cache data\n   * @param {object} unsafeCacheData data from getUnsafeCacheData\n   * @param {NormalModuleFactory} normalModuleFactory the normal module factory handling the unsafe caching\n   */\n  restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\n    this._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\n  }\n\n  /**\n   * @param {ConcatenationBailoutReasonContext} context context\n   * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n   */\n  getConcatenationBailoutReason({\n    moduleGraph\n  }) {\n    switch (this.externalType) {\n      case \"amd\":\n      case \"amd-require\":\n      case \"umd\":\n      case \"umd2\":\n      case \"system\":\n      case \"jsonp\":\n        return `${this.externalType} externals can't be concatenated`;\n    }\n    return undefined;\n  }\n  _getRequestAndExternalType() {\n    let {\n      request,\n      externalType\n    } = this;\n    if (typeof request === \"object\" && !Array.isArray(request)) request = request[externalType];\n    externalType = this._resolveExternalType(externalType);\n    return {\n      request,\n      externalType\n    };\n  }\n\n  /**\n   * Resolve the detailed external type from the raw external type.\n   * e.g. resolve \"module\" or \"import\" from \"module-import\" type\n   * @param {string} externalType raw external type\n   * @returns {string} resolved external type\n   */\n  _resolveExternalType(externalType) {\n    if (externalType === \"module-import\") {\n      if (this.dependencyMeta && /** @type {ImportDependencyMeta} */\n      this.dependencyMeta.externalType) {\n        return /** @type {ImportDependencyMeta} */this.dependencyMeta.externalType;\n      }\n      return \"module\";\n    } else if (externalType === \"asset\") {\n      if (this.dependencyMeta && /** @type {AssetDependencyMeta} */\n      this.dependencyMeta.sourceType) {\n        return /** @type {AssetDependencyMeta} */this.dependencyMeta.sourceType;\n      }\n      return \"asset\";\n    }\n    return externalType;\n  }\n\n  /**\n   * @private\n   * @param {string | string[]} request request\n   * @param {string} externalType the external type\n   * @param {RuntimeTemplate} runtimeTemplate the runtime template\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @param {ChunkGraph} chunkGraph the chunk graph\n   * @param {RuntimeSpec} runtime the runtime\n   * @param {DependencyMeta | undefined} dependencyMeta the dependency meta\n   * @returns {SourceData} the source data\n   */\n  _getSourceData(request, externalType, runtimeTemplate, moduleGraph, chunkGraph, runtime, dependencyMeta) {\n    switch (externalType) {\n      case \"this\":\n      case \"window\":\n      case \"self\":\n        return getSourceForGlobalVariableExternal(request, this.externalType);\n      case \"global\":\n        return getSourceForGlobalVariableExternal(request, runtimeTemplate.globalObject);\n      case \"commonjs\":\n      case \"commonjs2\":\n      case \"commonjs-module\":\n      case \"commonjs-static\":\n        return getSourceForCommonJsExternal(request);\n      case \"node-commonjs\":\n        return /** @type {BuildInfo} */this.buildInfo.module ? getSourceForCommonJsExternalInNodeModule(request, /** @type {string} */\n        runtimeTemplate.outputOptions.importMetaName, /** @type {boolean} */\n        runtimeTemplate.supportNodePrefixForCoreModules()) : getSourceForCommonJsExternal(request);\n      case \"amd\":\n      case \"amd-require\":\n      case \"umd\":\n      case \"umd2\":\n      case \"system\":\n      case \"jsonp\":\n        {\n          const id = chunkGraph.getModuleId(this);\n          return getSourceForAmdOrUmdExternal(id !== null ? id : this.identifier(), this.isOptional(moduleGraph), request, runtimeTemplate);\n        }\n      case \"import\":\n        return getSourceForImportExternal(request, runtimeTemplate, /** @type {ImportDependencyMeta} */dependencyMeta);\n      case \"script\":\n        return getSourceForScriptExternal(request, runtimeTemplate);\n      case \"module\":\n        {\n          if (!(/** @type {BuildInfo} */this.buildInfo.module)) {\n            if (!runtimeTemplate.supportsDynamicImport()) {\n              throw new Error(`The target environment doesn't support dynamic import() syntax so it's not possible to use external type 'module' within a script${runtimeTemplate.supportsEcmaScriptModuleSyntax() ? \"\\nDid you mean to build a EcmaScript Module ('output.module: true')?\" : \"\"}`);\n            }\n            return getSourceForImportExternal(request, runtimeTemplate, /** @type {ImportDependencyMeta} */dependencyMeta);\n          }\n          if (!runtimeTemplate.supportsEcmaScriptModuleSyntax()) {\n            throw new Error(\"The target environment doesn't support EcmaScriptModule syntax so it's not possible to use external type 'module'\");\n          }\n          return getSourceForModuleExternal(request, moduleGraph.getExportsInfo(this), runtime, runtimeTemplate, /** @type {ImportDependencyMeta} */dependencyMeta);\n        }\n      case \"var\":\n      case \"promise\":\n      case \"const\":\n      case \"let\":\n      case \"assign\":\n      default:\n        return getSourceForDefaultCase(this.isOptional(moduleGraph), request, runtimeTemplate);\n    }\n  }\n\n  /**\n   * @param {CodeGenerationContext} context context for code generation\n   * @returns {CodeGenerationResult} result\n   */\n  codeGeneration({\n    runtimeTemplate,\n    moduleGraph,\n    chunkGraph,\n    runtime,\n    concatenationScope\n  }) {\n    const {\n      request,\n      externalType\n    } = this._getRequestAndExternalType();\n    switch (externalType) {\n      case \"asset\":\n        {\n          const sources = new Map();\n          sources.set(\"javascript\", new RawSource(`module.exports = ${JSON.stringify(request)};`));\n          const data = new Map();\n          data.set(\"url\", {\n            javascript: request\n          });\n          return {\n            sources,\n            runtimeRequirements: RUNTIME_REQUIREMENTS,\n            data\n          };\n        }\n      case \"css-url\":\n        {\n          const sources = new Map();\n          const data = new Map();\n          data.set(\"url\", {\n            \"css-url\": request\n          });\n          return {\n            sources,\n            runtimeRequirements: RUNTIME_REQUIREMENTS,\n            data\n          };\n        }\n      case \"css-import\":\n        {\n          const sources = new Map();\n          const dependencyMeta = /** @type {CssImportDependencyMeta} */\n          this.dependencyMeta;\n          const layer = dependencyMeta.layer !== undefined ? ` layer(${dependencyMeta.layer})` : \"\";\n          const supports = dependencyMeta.supports ? ` supports(${dependencyMeta.supports})` : \"\";\n          const media = dependencyMeta.media ? ` ${dependencyMeta.media}` : \"\";\n          sources.set(\"css-import\", new RawSource(`@import url(${JSON.stringify(request)})${layer}${supports}${media};`));\n          return {\n            sources,\n            runtimeRequirements: EMPTY_RUNTIME_REQUIREMENTS\n          };\n        }\n      default:\n        {\n          const sourceData = this._getSourceData(request, externalType, runtimeTemplate, moduleGraph, chunkGraph, runtime, this.dependencyMeta);\n          let sourceString = sourceData.expression;\n          if (sourceData.iife) sourceString = `(function() { return ${sourceString}; }())`;\n          if (concatenationScope) {\n            sourceString = `${runtimeTemplate.supportsConst() ? \"const\" : \"var\"} ${ConcatenationScope.NAMESPACE_OBJECT_EXPORT} = ${sourceString};`;\n            concatenationScope.registerNamespaceExport(ConcatenationScope.NAMESPACE_OBJECT_EXPORT);\n          } else {\n            sourceString = `module.exports = ${sourceString};`;\n          }\n          if (sourceData.init) sourceString = `${sourceData.init}\\n${sourceString}`;\n          let data;\n          if (sourceData.chunkInitFragments) {\n            data = new Map();\n            data.set(\"chunkInitFragments\", sourceData.chunkInitFragments);\n          }\n          const sources = new Map();\n          if (this.useSourceMap || this.useSimpleSourceMap) {\n            sources.set(\"javascript\", new OriginalSource(sourceString, this.identifier()));\n          } else {\n            sources.set(\"javascript\", new RawSource(sourceString));\n          }\n          let runtimeRequirements = sourceData.runtimeRequirements;\n          if (!concatenationScope) {\n            if (!runtimeRequirements) {\n              runtimeRequirements = RUNTIME_REQUIREMENTS;\n            } else {\n              const set = new Set(runtimeRequirements);\n              set.add(RuntimeGlobals.module);\n              runtimeRequirements = set;\n            }\n          }\n          return {\n            sources,\n            runtimeRequirements: runtimeRequirements || EMPTY_RUNTIME_REQUIREMENTS,\n            data\n          };\n        }\n    }\n  }\n\n  /**\n   * @param {string=} type the source type for which the size should be estimated\n   * @returns {number} the estimated size of the module (must be non-zero)\n   */\n  size(type) {\n    return 42;\n  }\n\n  /**\n   * @param {Hash} hash the hash used to track dependencies\n   * @param {UpdateHashContext} context context\n   * @returns {void}\n   */\n  updateHash(hash, context) {\n    const {\n      chunkGraph\n    } = context;\n    hash.update(`${this._resolveExternalType(this.externalType)}${JSON.stringify(this.request)}${this.isOptional(chunkGraph.moduleGraph)}`);\n    super.updateHash(hash, context);\n  }\n\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.request);\n    write(this.externalType);\n    write(this.userRequest);\n    write(this.dependencyMeta);\n    super.serialize(context);\n  }\n\n  /**\n   * @param {ObjectDeserializerContext} context context\n   */\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.request = read();\n    this.externalType = read();\n    this.userRequest = read();\n    this.dependencyMeta = read();\n    super.deserialize(context);\n  }\n}\nmakeSerializable(ExternalModule, \"webpack/lib/ExternalModule\");\nmodule.exports = ExternalModule;","map":{"version":3,"names":["OriginalSource","RawSource","require","ConcatenationScope","EnvironmentNotSupportAsyncWarning","UsageState","InitFragment","Module","JS_TYPES","CSS_URL_TYPES","CSS_IMPORT_TYPES","JAVASCRIPT_MODULE_TYPE_DYNAMIC","RuntimeGlobals","Template","StaticExportsDependency","createHash","extractUrlAndGlobal","makeSerializable","propertyAccess","register","RUNTIME_REQUIREMENTS","Set","module","RUNTIME_REQUIREMENTS_FOR_SCRIPT","loadScript","RUNTIME_REQUIREMENTS_FOR_MODULE","definePropertyGetters","EMPTY_RUNTIME_REQUIREMENTS","getSourceForGlobalVariableExternal","variableName","type","Array","isArray","objectLookup","map","r","JSON","stringify","join","iife","expression","getSourceForCommonJsExternal","moduleAndSpecifiers","moduleName","getSourceForCommonJsExternalInNodeModule","importMetaName","needPrefix","chunkInitFragments","STAGE_HARMONY_IMPORTS","getSourceForImportExternal","runtimeTemplate","dependencyMeta","importName","outputOptions","importFunctionName","supportsDynamicImport","Error","attributes","_isLegacyAssert","importAssertionReplacer","length","returningFunction","key","value","ModuleExternalInitFragment","constructor","request","ident","hashFunction","undefined","toIdentifier","update","digest","slice","identifier","_ident","_request","_dependencyMeta","_identifier","getNamespaceIdentifier","serialize","obj","write","deserialize","read","generateModuleRemapping","input","exportsInfo","runtime","otherExportsInfo","getUsed","Unused","properties","exportInfo","orderedExports","used","getUsedName","name","nestedInfo","getNestedExportsInfo","nestedExpr","push","getSourceForModuleExternal","initFragment","baseAccess","moduleRemapping","init","basicFunction","runtimeRequirements","getSourceForScriptExternal","urlAndGlobal","url","globalName","checkExternalVariable","throwMissingModuleErrorBlock","getSourceForAmdOrUmdExternal","id","optional","externalVariable","getSourceForDefaultCase","ExternalModule","userRequest","externalType","getSourceTypes","sourceType","libIdent","options","chunkCondition","chunk","chunkGraph","getNumberOfEntryModules","_resolveExternalType","readableIdentifier","requestShortener","needBuild","context","callback","buildMeta","build","compilation","resolver","fs","async","exportsType","buildInfo","strict","topLevelDeclarations","_getRequestAndExternalType","canMangle","clearDependenciesAndBlocks","check","addDependency","restoreFromUnsafeCache","unsafeCacheData","normalModuleFactory","_restoreFromUnsafeCache","getConcatenationBailoutReason","moduleGraph","_getSourceData","globalObject","supportNodePrefixForCoreModules","getModuleId","isOptional","supportsEcmaScriptModuleSyntax","getExportsInfo","codeGeneration","concatenationScope","sources","Map","set","data","javascript","layer","supports","media","sourceData","sourceString","supportsConst","NAMESPACE_OBJECT_EXPORT","registerNamespaceExport","useSourceMap","useSimpleSourceMap","add","size","updateHash","hash","exports"],"sources":["/home/wickliff/Desktop/dev-waki/portfolio2/node_modules/webpack/lib/ExternalModule.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { OriginalSource, RawSource } = require(\"webpack-sources\");\nconst ConcatenationScope = require(\"./ConcatenationScope\");\nconst EnvironmentNotSupportAsyncWarning = require(\"./EnvironmentNotSupportAsyncWarning\");\nconst { UsageState } = require(\"./ExportsInfo\");\nconst InitFragment = require(\"./InitFragment\");\nconst Module = require(\"./Module\");\nconst {\n\tJS_TYPES,\n\tCSS_URL_TYPES,\n\tCSS_IMPORT_TYPES\n} = require(\"./ModuleSourceTypesConstants\");\nconst { JAVASCRIPT_MODULE_TYPE_DYNAMIC } = require(\"./ModuleTypeConstants\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst Template = require(\"./Template\");\nconst StaticExportsDependency = require(\"./dependencies/StaticExportsDependency\");\nconst createHash = require(\"./util/createHash\");\nconst extractUrlAndGlobal = require(\"./util/extractUrlAndGlobal\");\nconst makeSerializable = require(\"./util/makeSerializable\");\nconst propertyAccess = require(\"./util/propertyAccess\");\nconst { register } = require(\"./util/serialization\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"./ExportsInfo\")} ExportsInfo */\n/** @typedef {import(\"./Generator\").GenerateContext} GenerateContext */\n/** @typedef {import(\"./Generator\").SourceTypes} SourceTypes */\n/** @typedef {import(\"./Module\").BuildInfo} BuildInfo */\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"./Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n/** @typedef {import(\"./Module\").LibIdentOptions} LibIdentOptions */\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"./Module\").ReadOnlyRuntimeRequirements} ReadOnlyRuntimeRequirements */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"./NormalModuleFactory\")} NormalModuleFactory */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"./WebpackError\")} WebpackError */\n/** @typedef {import(\"./javascript/JavascriptModulesPlugin\").ChunkRenderContext} ChunkRenderContext */\n/** @typedef {import(\"./javascript/JavascriptParser\").ImportAttributes} ImportAttributes */\n/** @typedef {import(\"./serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"./serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"./util/Hash\")} Hash */\n/** @typedef {typeof import(\"./util/Hash\")} HashConstructor */\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/** @typedef {{ attributes?: ImportAttributes, externalType: \"import\" | \"module\" | undefined }} ImportDependencyMeta */\n/** @typedef {{ layer?: string, supports?: string, media?: string }} CssImportDependencyMeta */\n/** @typedef {{ sourceType: \"css-url\" }} AssetDependencyMeta */\n\n/** @typedef {ImportDependencyMeta | CssImportDependencyMeta | AssetDependencyMeta} DependencyMeta */\n\n/**\n * @typedef {object} SourceData\n * @property {boolean=} iife\n * @property {string=} init\n * @property {string} expression\n * @property {InitFragment<ChunkRenderContext>[]=} chunkInitFragments\n * @property {ReadOnlyRuntimeRequirements=} runtimeRequirements\n */\n\nconst RUNTIME_REQUIREMENTS = new Set([RuntimeGlobals.module]);\nconst RUNTIME_REQUIREMENTS_FOR_SCRIPT = new Set([RuntimeGlobals.loadScript]);\nconst RUNTIME_REQUIREMENTS_FOR_MODULE = new Set([\n\tRuntimeGlobals.definePropertyGetters\n]);\nconst EMPTY_RUNTIME_REQUIREMENTS = new Set([]);\n\n/**\n * @param {string|string[]} variableName the variable name or path\n * @param {string} type the module system\n * @returns {SourceData} the generated source\n */\nconst getSourceForGlobalVariableExternal = (variableName, type) => {\n\tif (!Array.isArray(variableName)) {\n\t\t// make it an array as the look up works the same basically\n\t\tvariableName = [variableName];\n\t}\n\n\t// needed for e.g. window[\"some\"][\"thing\"]\n\tconst objectLookup = variableName.map(r => `[${JSON.stringify(r)}]`).join(\"\");\n\treturn {\n\t\tiife: type === \"this\",\n\t\texpression: `${type}${objectLookup}`\n\t};\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @returns {SourceData} the generated source\n */\nconst getSourceForCommonJsExternal = moduleAndSpecifiers => {\n\tif (!Array.isArray(moduleAndSpecifiers)) {\n\t\treturn {\n\t\t\texpression: `require(${JSON.stringify(moduleAndSpecifiers)})`\n\t\t};\n\t}\n\tconst moduleName = moduleAndSpecifiers[0];\n\treturn {\n\t\texpression: `require(${JSON.stringify(moduleName)})${propertyAccess(\n\t\t\tmoduleAndSpecifiers,\n\t\t\t1\n\t\t)}`\n\t};\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @param {string} importMetaName import.meta name\n * @param {boolean} needPrefix need to use `node:` prefix for `module` import\n * @returns {SourceData} the generated source\n */\nconst getSourceForCommonJsExternalInNodeModule = (\n\tmoduleAndSpecifiers,\n\timportMetaName,\n\tneedPrefix\n) => {\n\tconst chunkInitFragments = [\n\t\tnew InitFragment(\n\t\t\t`import { createRequire as __WEBPACK_EXTERNAL_createRequire } from \"${\n\t\t\t\tneedPrefix ? \"node:\" : \"\"\n\t\t\t}module\";\\n`,\n\t\t\tInitFragment.STAGE_HARMONY_IMPORTS,\n\t\t\t0,\n\t\t\t\"external module node-commonjs\"\n\t\t)\n\t];\n\tif (!Array.isArray(moduleAndSpecifiers)) {\n\t\treturn {\n\t\t\tchunkInitFragments,\n\t\t\texpression: `__WEBPACK_EXTERNAL_createRequire(${importMetaName}.url)(${JSON.stringify(\n\t\t\t\tmoduleAndSpecifiers\n\t\t\t)})`\n\t\t};\n\t}\n\tconst moduleName = moduleAndSpecifiers[0];\n\treturn {\n\t\tchunkInitFragments,\n\t\texpression: `__WEBPACK_EXTERNAL_createRequire(${importMetaName}.url)(${JSON.stringify(\n\t\t\tmoduleName\n\t\t)})${propertyAccess(moduleAndSpecifiers, 1)}`\n\t};\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @param {ImportDependencyMeta=} dependencyMeta the dependency meta\n * @returns {SourceData} the generated source\n */\nconst getSourceForImportExternal = (\n\tmoduleAndSpecifiers,\n\truntimeTemplate,\n\tdependencyMeta\n) => {\n\tconst importName = runtimeTemplate.outputOptions.importFunctionName;\n\tif (\n\t\t!runtimeTemplate.supportsDynamicImport() &&\n\t\t(importName === \"import\" || importName === \"module-import\")\n\t) {\n\t\tthrow new Error(\n\t\t\t\"The target environment doesn't support 'import()' so it's not possible to use external type 'import'\"\n\t\t);\n\t}\n\tconst attributes =\n\t\tdependencyMeta && dependencyMeta.attributes\n\t\t\t? dependencyMeta.attributes._isLegacyAssert\n\t\t\t\t? `, { assert: ${JSON.stringify(\n\t\t\t\t\t\tdependencyMeta.attributes,\n\t\t\t\t\t\timportAssertionReplacer\n\t\t\t\t\t)} }`\n\t\t\t\t: `, { with: ${JSON.stringify(dependencyMeta.attributes)} }`\n\t\t\t: \"\";\n\tif (!Array.isArray(moduleAndSpecifiers)) {\n\t\treturn {\n\t\t\texpression: `${importName}(${JSON.stringify(\n\t\t\t\tmoduleAndSpecifiers\n\t\t\t)}${attributes});`\n\t\t};\n\t}\n\tif (moduleAndSpecifiers.length === 1) {\n\t\treturn {\n\t\t\texpression: `${importName}(${JSON.stringify(\n\t\t\t\tmoduleAndSpecifiers[0]\n\t\t\t)}${attributes});`\n\t\t};\n\t}\n\tconst moduleName = moduleAndSpecifiers[0];\n\treturn {\n\t\texpression: `${importName}(${JSON.stringify(\n\t\t\tmoduleName\n\t\t)}${attributes}).then(${runtimeTemplate.returningFunction(\n\t\t\t`module${propertyAccess(moduleAndSpecifiers, 1)}`,\n\t\t\t\"module\"\n\t\t)});`\n\t};\n};\n\n/**\n * @param {string} key key\n * @param {any | undefined} value value\n * @returns {undefined | string} replaced value\n */\nconst importAssertionReplacer = (key, value) => {\n\tif (key === \"_isLegacyAssert\") {\n\t\treturn;\n\t}\n\n\treturn value;\n};\n\n/**\n * @extends {InitFragment<ChunkRenderContext>}\n */\nclass ModuleExternalInitFragment extends InitFragment {\n\t/**\n\t * @param {string} request import source\n\t * @param {string=} ident recomputed ident\n\t * @param {ImportDependencyMeta=} dependencyMeta the dependency meta\n\t * @param {string | HashConstructor=} hashFunction the hash function to use\n\t */\n\tconstructor(request, ident, dependencyMeta, hashFunction = \"md4\") {\n\t\tif (ident === undefined) {\n\t\t\tident = Template.toIdentifier(request);\n\t\t\tif (ident !== request) {\n\t\t\t\tident += `_${createHash(hashFunction)\n\t\t\t\t\t.update(request)\n\t\t\t\t\t.digest(\"hex\")\n\t\t\t\t\t.slice(0, 8)}`;\n\t\t\t}\n\t\t}\n\t\tconst identifier = `__WEBPACK_EXTERNAL_MODULE_${ident}__`;\n\t\tsuper(\n\t\t\t`import * as ${identifier} from ${JSON.stringify(request)}${\n\t\t\t\tdependencyMeta && dependencyMeta.attributes\n\t\t\t\t\t? dependencyMeta.attributes._isLegacyAssert\n\t\t\t\t\t\t? ` assert ${JSON.stringify(\n\t\t\t\t\t\t\t\tdependencyMeta.attributes,\n\t\t\t\t\t\t\t\timportAssertionReplacer\n\t\t\t\t\t\t\t)}`\n\t\t\t\t\t\t: ` with ${JSON.stringify(dependencyMeta.attributes)}`\n\t\t\t\t\t: \"\"\n\t\t\t};\\n`,\n\t\t\tInitFragment.STAGE_HARMONY_IMPORTS,\n\t\t\t0,\n\t\t\t`external module import ${ident}`\n\t\t);\n\t\tthis._ident = ident;\n\t\tthis._request = request;\n\t\tthis._dependencyMeta = request;\n\t\tthis._identifier = identifier;\n\t}\n\n\tgetNamespaceIdentifier() {\n\t\treturn this._identifier;\n\t}\n}\n\nregister(\n\tModuleExternalInitFragment,\n\t\"webpack/lib/ExternalModule\",\n\t\"ModuleExternalInitFragment\",\n\t{\n\t\tserialize(obj, { write }) {\n\t\t\twrite(obj._request);\n\t\t\twrite(obj._ident);\n\t\t\twrite(obj._dependencyMeta);\n\t\t},\n\t\tdeserialize({ read }) {\n\t\t\treturn new ModuleExternalInitFragment(read(), read(), read());\n\t\t}\n\t}\n);\n\n/**\n * @param {string} input input\n * @param {ExportsInfo} exportsInfo the exports info\n * @param {RuntimeSpec=} runtime the runtime\n * @param {RuntimeTemplate=} runtimeTemplate the runtime template\n * @returns {string | undefined} the module remapping\n */\nconst generateModuleRemapping = (\n\tinput,\n\texportsInfo,\n\truntime,\n\truntimeTemplate\n) => {\n\tif (exportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused) {\n\t\tconst properties = [];\n\t\tfor (const exportInfo of exportsInfo.orderedExports) {\n\t\t\tconst used = exportInfo.getUsedName(exportInfo.name, runtime);\n\t\t\tif (!used) continue;\n\t\t\tconst nestedInfo = exportInfo.getNestedExportsInfo();\n\t\t\tif (nestedInfo) {\n\t\t\t\tconst nestedExpr = generateModuleRemapping(\n\t\t\t\t\t`${input}${propertyAccess([exportInfo.name])}`,\n\t\t\t\t\tnestedInfo\n\t\t\t\t);\n\t\t\t\tif (nestedExpr) {\n\t\t\t\t\tproperties.push(`[${JSON.stringify(used)}]: y(${nestedExpr})`);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tproperties.push(\n\t\t\t\t`[${JSON.stringify(used)}]: ${\n\t\t\t\t\t/** @type {RuntimeTemplate} */ (runtimeTemplate).returningFunction(\n\t\t\t\t\t\t`${input}${propertyAccess([exportInfo.name])}`\n\t\t\t\t\t)\n\t\t\t\t}`\n\t\t\t);\n\t\t}\n\t\treturn `x({ ${properties.join(\", \")} })`;\n\t}\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @param {ExportsInfo} exportsInfo exports info of this module\n * @param {RuntimeSpec} runtime the runtime\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @param {ImportDependencyMeta} dependencyMeta the dependency meta\n * @returns {SourceData} the generated source\n */\nconst getSourceForModuleExternal = (\n\tmoduleAndSpecifiers,\n\texportsInfo,\n\truntime,\n\truntimeTemplate,\n\tdependencyMeta\n) => {\n\tif (!Array.isArray(moduleAndSpecifiers))\n\t\tmoduleAndSpecifiers = [moduleAndSpecifiers];\n\tconst initFragment = new ModuleExternalInitFragment(\n\t\tmoduleAndSpecifiers[0],\n\t\tundefined,\n\t\tdependencyMeta,\n\t\truntimeTemplate.outputOptions.hashFunction\n\t);\n\tconst baseAccess = `${initFragment.getNamespaceIdentifier()}${propertyAccess(\n\t\tmoduleAndSpecifiers,\n\t\t1\n\t)}`;\n\tconst moduleRemapping = generateModuleRemapping(\n\t\tbaseAccess,\n\t\texportsInfo,\n\t\truntime,\n\t\truntimeTemplate\n\t);\n\tconst expression = moduleRemapping || baseAccess;\n\treturn {\n\t\texpression,\n\t\tinit: moduleRemapping\n\t\t\t? `var x = ${runtimeTemplate.basicFunction(\n\t\t\t\t\t\"y\",\n\t\t\t\t\t`var x = {}; ${RuntimeGlobals.definePropertyGetters}(x, y); return x`\n\t\t\t\t)} \\nvar y = ${runtimeTemplate.returningFunction(\n\t\t\t\t\truntimeTemplate.returningFunction(\"x\"),\n\t\t\t\t\t\"x\"\n\t\t\t\t)}`\n\t\t\t: undefined,\n\t\truntimeRequirements: moduleRemapping\n\t\t\t? RUNTIME_REQUIREMENTS_FOR_MODULE\n\t\t\t: undefined,\n\t\tchunkInitFragments: [initFragment]\n\t};\n};\n\n/**\n * @param {string|string[]} urlAndGlobal the script request\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nconst getSourceForScriptExternal = (urlAndGlobal, runtimeTemplate) => {\n\tif (typeof urlAndGlobal === \"string\") {\n\t\turlAndGlobal = extractUrlAndGlobal(urlAndGlobal);\n\t}\n\tconst url = urlAndGlobal[0];\n\tconst globalName = urlAndGlobal[1];\n\treturn {\n\t\tinit: \"var __webpack_error__ = new Error();\",\n\t\texpression: `new Promise(${runtimeTemplate.basicFunction(\n\t\t\t\"resolve, reject\",\n\t\t\t[\n\t\t\t\t`if(typeof ${globalName} !== \"undefined\") return resolve();`,\n\t\t\t\t`${RuntimeGlobals.loadScript}(${JSON.stringify(\n\t\t\t\t\turl\n\t\t\t\t)}, ${runtimeTemplate.basicFunction(\"event\", [\n\t\t\t\t\t`if(typeof ${globalName} !== \"undefined\") return resolve();`,\n\t\t\t\t\t\"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\",\n\t\t\t\t\t\"var realSrc = event && event.target && event.target.src;\",\n\t\t\t\t\t\"__webpack_error__.message = 'Loading script failed.\\\\n(' + errorType + ': ' + realSrc + ')';\",\n\t\t\t\t\t\"__webpack_error__.name = 'ScriptExternalLoadError';\",\n\t\t\t\t\t\"__webpack_error__.type = errorType;\",\n\t\t\t\t\t\"__webpack_error__.request = realSrc;\",\n\t\t\t\t\t\"reject(__webpack_error__);\"\n\t\t\t\t])}, ${JSON.stringify(globalName)});`\n\t\t\t]\n\t\t)}).then(${runtimeTemplate.returningFunction(\n\t\t\t`${globalName}${propertyAccess(urlAndGlobal, 2)}`\n\t\t)})`,\n\t\truntimeRequirements: RUNTIME_REQUIREMENTS_FOR_SCRIPT\n\t};\n};\n\n/**\n * @param {string} variableName the variable name to check\n * @param {string} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {string} the generated source\n */\nconst checkExternalVariable = (variableName, request, runtimeTemplate) =>\n\t`if(typeof ${variableName} === 'undefined') { ${runtimeTemplate.throwMissingModuleErrorBlock(\n\t\t{ request }\n\t)} }\\n`;\n\n/**\n * @param {string|number} id the module id\n * @param {boolean} optional true, if the module is optional\n * @param {string|string[]} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nconst getSourceForAmdOrUmdExternal = (\n\tid,\n\toptional,\n\trequest,\n\truntimeTemplate\n) => {\n\tconst externalVariable = `__WEBPACK_EXTERNAL_MODULE_${Template.toIdentifier(\n\t\t`${id}`\n\t)}__`;\n\treturn {\n\t\tinit: optional\n\t\t\t? checkExternalVariable(\n\t\t\t\t\texternalVariable,\n\t\t\t\t\tArray.isArray(request) ? request.join(\".\") : request,\n\t\t\t\t\truntimeTemplate\n\t\t\t\t)\n\t\t\t: undefined,\n\t\texpression: externalVariable\n\t};\n};\n\n/**\n * @param {boolean} optional true, if the module is optional\n * @param {string|string[]} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nconst getSourceForDefaultCase = (optional, request, runtimeTemplate) => {\n\tif (!Array.isArray(request)) {\n\t\t// make it an array as the look up works the same basically\n\t\trequest = [request];\n\t}\n\n\tconst variableName = request[0];\n\tconst objectLookup = propertyAccess(request, 1);\n\treturn {\n\t\tinit: optional\n\t\t\t? checkExternalVariable(variableName, request.join(\".\"), runtimeTemplate)\n\t\t\t: undefined,\n\t\texpression: `${variableName}${objectLookup}`\n\t};\n};\n\n/** @typedef {Record<string, string | string[]>} RequestRecord */\n\nclass ExternalModule extends Module {\n\t/**\n\t * @param {string | string[] | RequestRecord} request request\n\t * @param {string} type type\n\t * @param {string} userRequest user request\n\t * @param {DependencyMeta=} dependencyMeta dependency meta\n\t */\n\tconstructor(request, type, userRequest, dependencyMeta) {\n\t\tsuper(JAVASCRIPT_MODULE_TYPE_DYNAMIC, null);\n\n\t\t// Info from Factory\n\t\t/** @type {string | string[] | Record<string, string | string[]>} */\n\t\tthis.request = request;\n\t\t/** @type {string} */\n\t\tthis.externalType = type;\n\t\t/** @type {string} */\n\t\tthis.userRequest = userRequest;\n\t\t/** @type {DependencyMeta=} */\n\t\tthis.dependencyMeta = dependencyMeta;\n\t}\n\n\t/**\n\t * @returns {SourceTypes} types available (do not mutate)\n\t */\n\tgetSourceTypes() {\n\t\tif (\n\t\t\tthis.externalType === \"asset\" &&\n\t\t\tthis.dependencyMeta &&\n\t\t\t/** @type {AssetDependencyMeta} */\n\t\t\t(this.dependencyMeta).sourceType === \"css-url\"\n\t\t) {\n\t\t\treturn CSS_URL_TYPES;\n\t\t} else if (this.externalType === \"css-import\") {\n\t\t\treturn CSS_IMPORT_TYPES;\n\t\t}\n\n\t\treturn JS_TYPES;\n\t}\n\n\t/**\n\t * @param {LibIdentOptions} options options\n\t * @returns {string | null} an identifier for library inclusion\n\t */\n\tlibIdent(options) {\n\t\treturn this.userRequest;\n\t}\n\n\t/**\n\t * @param {Chunk} chunk the chunk which condition should be checked\n\t * @param {Compilation} compilation the compilation\n\t * @returns {boolean} true, if the chunk is ok for the module\n\t */\n\tchunkCondition(chunk, { chunkGraph }) {\n\t\treturn this.externalType === \"css-import\"\n\t\t\t? true\n\t\t\t: chunkGraph.getNumberOfEntryModules(chunk) > 0;\n\t}\n\n\t/**\n\t * @returns {string} a unique identifier of the module\n\t */\n\tidentifier() {\n\t\treturn `external ${this._resolveExternalType(this.externalType)} ${JSON.stringify(this.request)}`;\n\t}\n\n\t/**\n\t * @param {RequestShortener} requestShortener the request shortener\n\t * @returns {string} a user readable identifier of the module\n\t */\n\treadableIdentifier(requestShortener) {\n\t\treturn `external ${JSON.stringify(this.request)}`;\n\t}\n\n\t/**\n\t * @param {NeedBuildContext} context context info\n\t * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n\t * @returns {void}\n\t */\n\tneedBuild(context, callback) {\n\t\treturn callback(null, !this.buildMeta);\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {ResolverWithOptions} resolver the resolver\n\t * @param {InputFileSystem} fs the file system\n\t * @param {function(WebpackError=): void} callback callback function\n\t * @returns {void}\n\t */\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.buildMeta = {\n\t\t\tasync: false,\n\t\t\texportsType: undefined\n\t\t};\n\t\tthis.buildInfo = {\n\t\t\tstrict: true,\n\t\t\ttopLevelDeclarations: new Set(),\n\t\t\tmodule: compilation.outputOptions.module\n\t\t};\n\t\tconst { request, externalType } = this._getRequestAndExternalType();\n\t\tthis.buildMeta.exportsType = \"dynamic\";\n\t\tlet canMangle = false;\n\t\tthis.clearDependenciesAndBlocks();\n\t\tswitch (externalType) {\n\t\t\tcase \"this\":\n\t\t\t\tthis.buildInfo.strict = false;\n\t\t\t\tbreak;\n\t\t\tcase \"system\":\n\t\t\t\tif (!Array.isArray(request) || request.length === 1) {\n\t\t\t\t\tthis.buildMeta.exportsType = \"namespace\";\n\t\t\t\t\tcanMangle = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"module\":\n\t\t\t\tif (this.buildInfo.module) {\n\t\t\t\t\tif (!Array.isArray(request) || request.length === 1) {\n\t\t\t\t\t\tthis.buildMeta.exportsType = \"namespace\";\n\t\t\t\t\t\tcanMangle = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.buildMeta.async = true;\n\t\t\t\t\tEnvironmentNotSupportAsyncWarning.check(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\tcompilation.runtimeTemplate,\n\t\t\t\t\t\t\"external module\"\n\t\t\t\t\t);\n\t\t\t\t\tif (!Array.isArray(request) || request.length === 1) {\n\t\t\t\t\t\tthis.buildMeta.exportsType = \"namespace\";\n\t\t\t\t\t\tcanMangle = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"script\":\n\t\t\t\tthis.buildMeta.async = true;\n\t\t\t\tEnvironmentNotSupportAsyncWarning.check(\n\t\t\t\t\tthis,\n\t\t\t\t\tcompilation.runtimeTemplate,\n\t\t\t\t\t\"external script\"\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase \"promise\":\n\t\t\t\tthis.buildMeta.async = true;\n\t\t\t\tEnvironmentNotSupportAsyncWarning.check(\n\t\t\t\t\tthis,\n\t\t\t\t\tcompilation.runtimeTemplate,\n\t\t\t\t\t\"external promise\"\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase \"import\":\n\t\t\t\tthis.buildMeta.async = true;\n\t\t\t\tEnvironmentNotSupportAsyncWarning.check(\n\t\t\t\t\tthis,\n\t\t\t\t\tcompilation.runtimeTemplate,\n\t\t\t\t\t\"external import\"\n\t\t\t\t);\n\t\t\t\tif (!Array.isArray(request) || request.length === 1) {\n\t\t\t\t\tthis.buildMeta.exportsType = \"namespace\";\n\t\t\t\t\tcanMangle = false;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.addDependency(new StaticExportsDependency(true, canMangle));\n\t\tcallback();\n\t}\n\n\t/**\n\t * restore unsafe cache data\n\t * @param {object} unsafeCacheData data from getUnsafeCacheData\n\t * @param {NormalModuleFactory} normalModuleFactory the normal module factory handling the unsafe caching\n\t */\n\trestoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\n\t\tthis._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\n\t}\n\n\t/**\n\t * @param {ConcatenationBailoutReasonContext} context context\n\t * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n\t */\n\tgetConcatenationBailoutReason({ moduleGraph }) {\n\t\tswitch (this.externalType) {\n\t\t\tcase \"amd\":\n\t\t\tcase \"amd-require\":\n\t\t\tcase \"umd\":\n\t\t\tcase \"umd2\":\n\t\t\tcase \"system\":\n\t\t\tcase \"jsonp\":\n\t\t\t\treturn `${this.externalType} externals can't be concatenated`;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t_getRequestAndExternalType() {\n\t\tlet { request, externalType } = this;\n\t\tif (typeof request === \"object\" && !Array.isArray(request))\n\t\t\trequest = request[externalType];\n\t\texternalType = this._resolveExternalType(externalType);\n\t\treturn { request, externalType };\n\t}\n\n\t/**\n\t * Resolve the detailed external type from the raw external type.\n\t * e.g. resolve \"module\" or \"import\" from \"module-import\" type\n\t * @param {string} externalType raw external type\n\t * @returns {string} resolved external type\n\t */\n\t_resolveExternalType(externalType) {\n\t\tif (externalType === \"module-import\") {\n\t\t\tif (\n\t\t\t\tthis.dependencyMeta &&\n\t\t\t\t/** @type {ImportDependencyMeta} */\n\t\t\t\t(this.dependencyMeta).externalType\n\t\t\t) {\n\t\t\t\treturn /** @type {ImportDependencyMeta} */ (this.dependencyMeta)\n\t\t\t\t\t.externalType;\n\t\t\t}\n\t\t\treturn \"module\";\n\t\t} else if (externalType === \"asset\") {\n\t\t\tif (\n\t\t\t\tthis.dependencyMeta &&\n\t\t\t\t/** @type {AssetDependencyMeta} */\n\t\t\t\t(this.dependencyMeta).sourceType\n\t\t\t) {\n\t\t\t\treturn /** @type {AssetDependencyMeta} */ (this.dependencyMeta)\n\t\t\t\t\t.sourceType;\n\t\t\t}\n\n\t\t\treturn \"asset\";\n\t\t}\n\n\t\treturn externalType;\n\t}\n\n\t/**\n\t * @private\n\t * @param {string | string[]} request request\n\t * @param {string} externalType the external type\n\t * @param {RuntimeTemplate} runtimeTemplate the runtime template\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {ChunkGraph} chunkGraph the chunk graph\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @param {DependencyMeta | undefined} dependencyMeta the dependency meta\n\t * @returns {SourceData} the source data\n\t */\n\t_getSourceData(\n\t\trequest,\n\t\texternalType,\n\t\truntimeTemplate,\n\t\tmoduleGraph,\n\t\tchunkGraph,\n\t\truntime,\n\t\tdependencyMeta\n\t) {\n\t\tswitch (externalType) {\n\t\t\tcase \"this\":\n\t\t\tcase \"window\":\n\t\t\tcase \"self\":\n\t\t\t\treturn getSourceForGlobalVariableExternal(request, this.externalType);\n\t\t\tcase \"global\":\n\t\t\t\treturn getSourceForGlobalVariableExternal(\n\t\t\t\t\trequest,\n\t\t\t\t\truntimeTemplate.globalObject\n\t\t\t\t);\n\t\t\tcase \"commonjs\":\n\t\t\tcase \"commonjs2\":\n\t\t\tcase \"commonjs-module\":\n\t\t\tcase \"commonjs-static\":\n\t\t\t\treturn getSourceForCommonJsExternal(request);\n\t\t\tcase \"node-commonjs\":\n\t\t\t\treturn /** @type {BuildInfo} */ (this.buildInfo).module\n\t\t\t\t\t? getSourceForCommonJsExternalInNodeModule(\n\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\t/** @type {string} */\n\t\t\t\t\t\t\t(runtimeTemplate.outputOptions.importMetaName),\n\t\t\t\t\t\t\t/** @type {boolean} */\n\t\t\t\t\t\t\t(runtimeTemplate.supportNodePrefixForCoreModules())\n\t\t\t\t\t\t)\n\t\t\t\t\t: getSourceForCommonJsExternal(request);\n\t\t\tcase \"amd\":\n\t\t\tcase \"amd-require\":\n\t\t\tcase \"umd\":\n\t\t\tcase \"umd2\":\n\t\t\tcase \"system\":\n\t\t\tcase \"jsonp\": {\n\t\t\t\tconst id = chunkGraph.getModuleId(this);\n\t\t\t\treturn getSourceForAmdOrUmdExternal(\n\t\t\t\t\tid !== null ? id : this.identifier(),\n\t\t\t\t\tthis.isOptional(moduleGraph),\n\t\t\t\t\trequest,\n\t\t\t\t\truntimeTemplate\n\t\t\t\t);\n\t\t\t}\n\t\t\tcase \"import\":\n\t\t\t\treturn getSourceForImportExternal(\n\t\t\t\t\trequest,\n\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t/** @type {ImportDependencyMeta} */ (dependencyMeta)\n\t\t\t\t);\n\t\t\tcase \"script\":\n\t\t\t\treturn getSourceForScriptExternal(request, runtimeTemplate);\n\t\t\tcase \"module\": {\n\t\t\t\tif (!(/** @type {BuildInfo} */ (this.buildInfo).module)) {\n\t\t\t\t\tif (!runtimeTemplate.supportsDynamicImport()) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`The target environment doesn't support dynamic import() syntax so it's not possible to use external type 'module' within a script${\n\t\t\t\t\t\t\t\truntimeTemplate.supportsEcmaScriptModuleSyntax()\n\t\t\t\t\t\t\t\t\t? \"\\nDid you mean to build a EcmaScript Module ('output.module: true')?\"\n\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn getSourceForImportExternal(\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\t/** @type {ImportDependencyMeta} */ (dependencyMeta)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (!runtimeTemplate.supportsEcmaScriptModuleSyntax()) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\"The target environment doesn't support EcmaScriptModule syntax so it's not possible to use external type 'module'\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn getSourceForModuleExternal(\n\t\t\t\t\trequest,\n\t\t\t\t\tmoduleGraph.getExportsInfo(this),\n\t\t\t\t\truntime,\n\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t/** @type {ImportDependencyMeta} */ (dependencyMeta)\n\t\t\t\t);\n\t\t\t}\n\t\t\tcase \"var\":\n\t\t\tcase \"promise\":\n\t\t\tcase \"const\":\n\t\t\tcase \"let\":\n\t\t\tcase \"assign\":\n\t\t\tdefault:\n\t\t\t\treturn getSourceForDefaultCase(\n\t\t\t\t\tthis.isOptional(moduleGraph),\n\t\t\t\t\trequest,\n\t\t\t\t\truntimeTemplate\n\t\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @param {CodeGenerationContext} context context for code generation\n\t * @returns {CodeGenerationResult} result\n\t */\n\tcodeGeneration({\n\t\truntimeTemplate,\n\t\tmoduleGraph,\n\t\tchunkGraph,\n\t\truntime,\n\t\tconcatenationScope\n\t}) {\n\t\tconst { request, externalType } = this._getRequestAndExternalType();\n\t\tswitch (externalType) {\n\t\t\tcase \"asset\": {\n\t\t\t\tconst sources = new Map();\n\t\t\t\tsources.set(\n\t\t\t\t\t\"javascript\",\n\t\t\t\t\tnew RawSource(`module.exports = ${JSON.stringify(request)};`)\n\t\t\t\t);\n\t\t\t\tconst data = new Map();\n\t\t\t\tdata.set(\"url\", { javascript: request });\n\t\t\t\treturn { sources, runtimeRequirements: RUNTIME_REQUIREMENTS, data };\n\t\t\t}\n\t\t\tcase \"css-url\": {\n\t\t\t\tconst sources = new Map();\n\t\t\t\tconst data = new Map();\n\t\t\t\tdata.set(\"url\", { \"css-url\": request });\n\t\t\t\treturn { sources, runtimeRequirements: RUNTIME_REQUIREMENTS, data };\n\t\t\t}\n\t\t\tcase \"css-import\": {\n\t\t\t\tconst sources = new Map();\n\t\t\t\tconst dependencyMeta = /** @type {CssImportDependencyMeta} */ (\n\t\t\t\t\tthis.dependencyMeta\n\t\t\t\t);\n\t\t\t\tconst layer =\n\t\t\t\t\tdependencyMeta.layer !== undefined\n\t\t\t\t\t\t? ` layer(${dependencyMeta.layer})`\n\t\t\t\t\t\t: \"\";\n\t\t\t\tconst supports = dependencyMeta.supports\n\t\t\t\t\t? ` supports(${dependencyMeta.supports})`\n\t\t\t\t\t: \"\";\n\t\t\t\tconst media = dependencyMeta.media ? ` ${dependencyMeta.media}` : \"\";\n\t\t\t\tsources.set(\n\t\t\t\t\t\"css-import\",\n\t\t\t\t\tnew RawSource(\n\t\t\t\t\t\t`@import url(${JSON.stringify(\n\t\t\t\t\t\t\trequest\n\t\t\t\t\t\t)})${layer}${supports}${media};`\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\treturn {\n\t\t\t\t\tsources,\n\t\t\t\t\truntimeRequirements: EMPTY_RUNTIME_REQUIREMENTS\n\t\t\t\t};\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tconst sourceData = this._getSourceData(\n\t\t\t\t\trequest,\n\t\t\t\t\texternalType,\n\t\t\t\t\truntimeTemplate,\n\t\t\t\t\tmoduleGraph,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\truntime,\n\t\t\t\t\tthis.dependencyMeta\n\t\t\t\t);\n\n\t\t\t\tlet sourceString = sourceData.expression;\n\t\t\t\tif (sourceData.iife)\n\t\t\t\t\tsourceString = `(function() { return ${sourceString}; }())`;\n\t\t\t\tif (concatenationScope) {\n\t\t\t\t\tsourceString = `${\n\t\t\t\t\t\truntimeTemplate.supportsConst() ? \"const\" : \"var\"\n\t\t\t\t\t} ${ConcatenationScope.NAMESPACE_OBJECT_EXPORT} = ${sourceString};`;\n\t\t\t\t\tconcatenationScope.registerNamespaceExport(\n\t\t\t\t\t\tConcatenationScope.NAMESPACE_OBJECT_EXPORT\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tsourceString = `module.exports = ${sourceString};`;\n\t\t\t\t}\n\t\t\t\tif (sourceData.init)\n\t\t\t\t\tsourceString = `${sourceData.init}\\n${sourceString}`;\n\n\t\t\t\tlet data;\n\t\t\t\tif (sourceData.chunkInitFragments) {\n\t\t\t\t\tdata = new Map();\n\t\t\t\t\tdata.set(\"chunkInitFragments\", sourceData.chunkInitFragments);\n\t\t\t\t}\n\n\t\t\t\tconst sources = new Map();\n\t\t\t\tif (this.useSourceMap || this.useSimpleSourceMap) {\n\t\t\t\t\tsources.set(\n\t\t\t\t\t\t\"javascript\",\n\t\t\t\t\t\tnew OriginalSource(sourceString, this.identifier())\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tsources.set(\"javascript\", new RawSource(sourceString));\n\t\t\t\t}\n\n\t\t\t\tlet runtimeRequirements = sourceData.runtimeRequirements;\n\t\t\t\tif (!concatenationScope) {\n\t\t\t\t\tif (!runtimeRequirements) {\n\t\t\t\t\t\truntimeRequirements = RUNTIME_REQUIREMENTS;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst set = new Set(runtimeRequirements);\n\t\t\t\t\t\tset.add(RuntimeGlobals.module);\n\t\t\t\t\t\truntimeRequirements = set;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tsources,\n\t\t\t\t\truntimeRequirements:\n\t\t\t\t\t\truntimeRequirements || EMPTY_RUNTIME_REQUIREMENTS,\n\t\t\t\t\tdata\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {string=} type the source type for which the size should be estimated\n\t * @returns {number} the estimated size of the module (must be non-zero)\n\t */\n\tsize(type) {\n\t\treturn 42;\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @param {UpdateHashContext} context context\n\t * @returns {void}\n\t */\n\tupdateHash(hash, context) {\n\t\tconst { chunkGraph } = context;\n\t\thash.update(\n\t\t\t`${this._resolveExternalType(this.externalType)}${JSON.stringify(this.request)}${this.isOptional(\n\t\t\t\tchunkGraph.moduleGraph\n\t\t\t)}`\n\t\t);\n\t\tsuper.updateHash(hash, context);\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(context) {\n\t\tconst { write } = context;\n\n\t\twrite(this.request);\n\t\twrite(this.externalType);\n\t\twrite(this.userRequest);\n\t\twrite(this.dependencyMeta);\n\n\t\tsuper.serialize(context);\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t */\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\n\t\tthis.request = read();\n\t\tthis.externalType = read();\n\t\tthis.userRequest = read();\n\t\tthis.dependencyMeta = read();\n\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(ExternalModule, \"webpack/lib/ExternalModule\");\n\nmodule.exports = ExternalModule;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}