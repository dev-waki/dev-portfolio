{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst vm = require(\"vm\");\nconst CommentCompilationWarning = require(\"../CommentCompilationWarning\");\nconst ModuleDependencyWarning = require(\"../ModuleDependencyWarning\");\nconst {\n  CSS_MODULE_TYPE_AUTO\n} = require(\"../ModuleTypeConstants\");\nconst Parser = require(\"../Parser\");\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\nconst WebpackError = require(\"../WebpackError\");\nconst ConstDependency = require(\"../dependencies/ConstDependency\");\nconst CssExportDependency = require(\"../dependencies/CssExportDependency\");\nconst CssImportDependency = require(\"../dependencies/CssImportDependency\");\nconst CssLocalIdentifierDependency = require(\"../dependencies/CssLocalIdentifierDependency\");\nconst CssSelfLocalIdentifierDependency = require(\"../dependencies/CssSelfLocalIdentifierDependency\");\nconst CssUrlDependency = require(\"../dependencies/CssUrlDependency\");\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\nconst binarySearchBounds = require(\"../util/binarySearchBounds\");\nconst {\n  parseResource\n} = require(\"../util/identifier\");\nconst {\n  webpackCommentRegExp,\n  createMagicCommentContext\n} = require(\"../util/magicComment\");\nconst walkCssTokens = require(\"./walkCssTokens\");\n\n/** @typedef {import(\"../Module\").BuildInfo} BuildInfo */\n/** @typedef {import(\"../Module\").BuildMeta} BuildMeta */\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n/** @typedef {import(\"../Parser\").PreparsedAst} PreparsedAst */\n\n/** @typedef {[number, number]} Range */\n/** @typedef {{ line: number, column: number }} Position */\n/** @typedef {{ value: string, range: Range, loc: { start: Position, end: Position } }} Comment */\n\nconst CC_LEFT_CURLY = \"{\".charCodeAt(0);\nconst CC_RIGHT_CURLY = \"}\".charCodeAt(0);\nconst CC_COLON = \":\".charCodeAt(0);\nconst CC_SLASH = \"/\".charCodeAt(0);\nconst CC_SEMICOLON = \";\".charCodeAt(0);\nconst CC_LEFT_PARENTHESIS = \"(\".charCodeAt(0);\n\n// https://www.w3.org/TR/css-syntax-3/#newline\n// We don't have `preprocessing` stage, so we need specify all of them\nconst STRING_MULTILINE = /\\\\[\\n\\r\\f]/g;\n// https://www.w3.org/TR/css-syntax-3/#whitespace\nconst TRIM_WHITE_SPACES = /(^[ \\t\\n\\r\\f]*|[ \\t\\n\\r\\f]*$)/g;\nconst UNESCAPE = /\\\\([0-9a-fA-F]{1,6}[ \\t\\n\\r\\f]?|[\\s\\S])/g;\nconst IMAGE_SET_FUNCTION = /^(-\\w+-)?image-set$/i;\nconst OPTIONALLY_VENDOR_PREFIXED_KEYFRAMES_AT_RULE = /^@(-\\w+-)?keyframes$/;\nconst OPTIONALLY_VENDOR_PREFIXED_ANIMATION_PROPERTY = /^(-\\w+-)?animation(-name)?$/i;\nconst IS_MODULES = /\\.module(s)?\\.[^.]+$/i;\n\n/**\n * @param {string} str url string\n * @param {boolean} isString is url wrapped in quotes\n * @returns {string} normalized url\n */\nconst normalizeUrl = (str, isString) => {\n  // Remove extra spaces and newlines:\n  // `url(\"im\\\n  // g.png\")`\n  if (isString) {\n    str = str.replace(STRING_MULTILINE, \"\");\n  }\n  str = str\n  // Remove unnecessary spaces from `url(\"   img.png\t \")`\n  .replace(TRIM_WHITE_SPACES, \"\")\n  // Unescape\n  .replace(UNESCAPE, match => {\n    if (match.length > 2) {\n      return String.fromCharCode(Number.parseInt(match.slice(1).trim(), 16));\n    }\n    return match[1];\n  });\n  if (/^data:/i.test(str)) {\n    return str;\n  }\n  if (str.includes(\"%\")) {\n    // Convert `url('%2E/img.png')` -> `url('./img.png')`\n    try {\n      str = decodeURIComponent(str);\n    } catch (_err) {\n      // Ignore\n    }\n  }\n  return str;\n};\nclass LocConverter {\n  /**\n   * @param {string} input input\n   */\n  constructor(input) {\n    this._input = input;\n    this.line = 1;\n    this.column = 0;\n    this.pos = 0;\n  }\n\n  /**\n   * @param {number} pos position\n   * @returns {LocConverter} location converter\n   */\n  get(pos) {\n    if (this.pos !== pos) {\n      if (this.pos < pos) {\n        const str = this._input.slice(this.pos, pos);\n        let i = str.lastIndexOf(\"\\n\");\n        if (i === -1) {\n          this.column += str.length;\n        } else {\n          this.column = str.length - i - 1;\n          this.line++;\n          while (i > 0 && (i = str.lastIndexOf(\"\\n\", i - 1)) !== -1) this.line++;\n        }\n      } else {\n        let i = this._input.lastIndexOf(\"\\n\", this.pos);\n        while (i >= pos) {\n          this.line--;\n          i = i > 0 ? this._input.lastIndexOf(\"\\n\", i - 1) : -1;\n        }\n        this.column = pos - i;\n      }\n      this.pos = pos;\n    }\n    return this;\n  }\n}\nconst EMPTY_COMMENT_OPTIONS = {\n  options: null,\n  errors: null\n};\nconst CSS_MODE_TOP_LEVEL = 0;\nconst CSS_MODE_IN_BLOCK = 1;\nclass CssParser extends Parser {\n  /**\n   * @param {object} options options\n   * @param {(\"pure\" | \"global\" | \"local\" | \"auto\")=} options.defaultMode default mode\n   * @param {boolean=} options.namedExports is named exports\n   */\n  constructor({\n    defaultMode = \"pure\",\n    namedExports = true\n  } = {}) {\n    super();\n    this.defaultMode = defaultMode;\n    this.namedExports = namedExports;\n    /** @type {Comment[] | undefined} */\n    this.comments = undefined;\n    this.magicCommentContext = createMagicCommentContext();\n  }\n\n  /**\n   * @param {ParserState} state parser state\n   * @param {string} message warning message\n   * @param {LocConverter} locConverter location converter\n   * @param {number} start start offset\n   * @param {number} end end offset\n   */\n  _emitWarning(state, message, locConverter, start, end) {\n    const {\n      line: sl,\n      column: sc\n    } = locConverter.get(start);\n    const {\n      line: el,\n      column: ec\n    } = locConverter.get(end);\n    state.current.addWarning(new ModuleDependencyWarning(state.module, new WebpackError(message), {\n      start: {\n        line: sl,\n        column: sc\n      },\n      end: {\n        line: el,\n        column: ec\n      }\n    }));\n  }\n\n  /**\n   * @param {string | Buffer | PreparsedAst} source the source to parse\n   * @param {ParserState} state the parser state\n   * @returns {ParserState} the parser state\n   */\n  parse(source, state) {\n    if (Buffer.isBuffer(source)) {\n      source = source.toString(\"utf-8\");\n    } else if (typeof source === \"object\") {\n      throw new Error(\"webpackAst is unexpected for the CssParser\");\n    }\n    if (source[0] === \"\\uFEFF\") {\n      source = source.slice(1);\n    }\n    let mode = this.defaultMode;\n    const module = state.module;\n    if (mode === \"auto\" && module.type === CSS_MODULE_TYPE_AUTO && IS_MODULES.test(parseResource(module.matchResource || module.resource).path)) {\n      mode = \"local\";\n    }\n    const isModules = mode === \"global\" || mode === \"local\";\n    const locConverter = new LocConverter(source);\n\n    /** @type {number} */\n    let scope = CSS_MODE_TOP_LEVEL;\n    /** @type {boolean} */\n    let allowImportAtRule = true;\n    /** @type [string, number, number][] */\n    const balanced = [];\n    let lastTokenEndForComments = 0;\n\n    /** @type {boolean} */\n    let isNextRulePrelude = isModules;\n    /** @type {number} */\n    let blockNestingLevel = 0;\n    /** @type {\"local\" | \"global\" | undefined} */\n    let modeData;\n    /** @type {boolean} */\n    let inAnimationProperty = false;\n    /** @type {Set<string>} */\n    const declaredCssVariables = new Set();\n    /** @type {[number, number, boolean] | undefined} */\n    let lastIdentifier;\n\n    /**\n     * @param {string} input input\n     * @param {number} pos position\n     * @returns {boolean} true, when next is nested syntax\n     */\n    const isNextNestedSyntax = (input, pos) => {\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n      if (input[pos] === \"}\") {\n        return false;\n      }\n\n      // According spec only identifier can be used as a property name\n      const isIdentifier = walkCssTokens.isIdentStartCodePoint(input.charCodeAt(pos));\n      return !isIdentifier;\n    };\n    /**\n     * @returns {boolean} true, when in local scope\n     */\n    const isLocalMode = () => modeData === \"local\" || mode === \"local\" && modeData === undefined;\n\n    /**\n     * @param {string} input input\n     * @param {number} pos start position\n     * @param {(input: string, pos: number) => number} eater eater\n     * @returns {[number,string]} new position and text\n     */\n    const eatText = (input, pos, eater) => {\n      let text = \"\";\n      for (;;) {\n        if (input.charCodeAt(pos) === CC_SLASH) {\n          const newPos = walkCssTokens.eatComments(input, pos);\n          if (pos !== newPos) {\n            pos = newPos;\n            if (pos === input.length) break;\n          } else {\n            text += \"/\";\n            pos++;\n            if (pos === input.length) break;\n          }\n        }\n        const newPos = eater(input, pos);\n        if (pos !== newPos) {\n          text += input.slice(pos, newPos);\n          pos = newPos;\n        } else {\n          break;\n        }\n        if (pos === input.length) break;\n      }\n      return [pos, text.trimEnd()];\n    };\n    const eatExportName = walkCssTokens.eatUntil(\":};/\");\n    const eatExportValue = walkCssTokens.eatUntil(\"};/\");\n    /**\n     * @param {string} input input\n     * @param {number} pos start position\n     * @returns {number} position after parse\n     */\n    const parseExports = (input, pos) => {\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n      const cc = input.charCodeAt(pos);\n      if (cc !== CC_LEFT_CURLY) {\n        this._emitWarning(state, `Unexpected '${input[pos]}' at ${pos} during parsing of ':export' (expected '{')`, locConverter, pos, pos);\n        return pos;\n      }\n      pos++;\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n      for (;;) {\n        if (input.charCodeAt(pos) === CC_RIGHT_CURLY) break;\n        pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n        if (pos === input.length) return pos;\n        const start = pos;\n        let name;\n        [pos, name] = eatText(input, pos, eatExportName);\n        if (pos === input.length) return pos;\n        if (input.charCodeAt(pos) !== CC_COLON) {\n          this._emitWarning(state, `Unexpected '${input[pos]}' at ${pos} during parsing of export name in ':export' (expected ':')`, locConverter, start, pos);\n          return pos;\n        }\n        pos++;\n        if (pos === input.length) return pos;\n        pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n        if (pos === input.length) return pos;\n        let value;\n        [pos, value] = eatText(input, pos, eatExportValue);\n        if (pos === input.length) return pos;\n        const cc = input.charCodeAt(pos);\n        if (cc === CC_SEMICOLON) {\n          pos++;\n          if (pos === input.length) return pos;\n          pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n          if (pos === input.length) return pos;\n        } else if (cc !== CC_RIGHT_CURLY) {\n          this._emitWarning(state, `Unexpected '${input[pos]}' at ${pos} during parsing of export value in ':export' (expected ';' or '}')`, locConverter, start, pos);\n          return pos;\n        }\n        const dep = new CssExportDependency(name, value);\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(start);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(pos);\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n      }\n      pos++;\n      if (pos === input.length) return pos;\n      pos = walkCssTokens.eatWhiteLine(input, pos);\n      return pos;\n    };\n    const eatPropertyName = walkCssTokens.eatUntil(\":{};\");\n    /**\n     * @param {string} input input\n     * @param {number} pos name start position\n     * @param {number} end name end position\n     * @returns {number} position after handling\n     */\n    const processLocalDeclaration = (input, pos, end) => {\n      modeData = undefined;\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n      const propertyNameStart = pos;\n      const [propertyNameEnd, propertyName] = eatText(input, pos, eatPropertyName);\n      if (input.charCodeAt(propertyNameEnd) !== CC_COLON) return end;\n      pos = propertyNameEnd + 1;\n      if (propertyName.startsWith(\"--\")) {\n        // CSS Variable\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(propertyNameStart);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(propertyNameEnd);\n        const name = propertyName.slice(2);\n        const dep = new CssLocalIdentifierDependency(name, [propertyNameStart, propertyNameEnd], \"--\");\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n        declaredCssVariables.add(name);\n      } else if (OPTIONALLY_VENDOR_PREFIXED_ANIMATION_PROPERTY.test(propertyName)) {\n        inAnimationProperty = true;\n      }\n      return pos;\n    };\n    /**\n     * @param {string} input input\n     */\n    const processDeclarationValueDone = input => {\n      if (inAnimationProperty && lastIdentifier) {\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(lastIdentifier[0]);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(lastIdentifier[1]);\n        const name = lastIdentifier[2] ? input.slice(lastIdentifier[0], lastIdentifier[1]) : input.slice(lastIdentifier[0] + 1, lastIdentifier[1] - 1);\n        const dep = new CssSelfLocalIdentifierDependency(name, [lastIdentifier[0], lastIdentifier[1]]);\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n        lastIdentifier = undefined;\n      }\n    };\n    const eatUntilSemi = walkCssTokens.eatUntil(\";\");\n    const eatUntilLeftCurly = walkCssTokens.eatUntil(\"{\");\n\n    /**\n     * @param {string} input input\n     * @param {number} start start\n     * @param {number} end end\n     * @returns {number} end\n     */\n    const comment = (input, start, end) => {\n      if (!this.comments) this.comments = [];\n      const {\n        line: sl,\n        column: sc\n      } = locConverter.get(start);\n      const {\n        line: el,\n        column: ec\n      } = locConverter.get(end);\n\n      /** @type {Comment} */\n      const comment = {\n        value: input.slice(start + 2, end - 2),\n        range: [start, end],\n        loc: {\n          start: {\n            line: sl,\n            column: sc\n          },\n          end: {\n            line: el,\n            column: ec\n          }\n        }\n      };\n      this.comments.push(comment);\n      return end;\n    };\n    walkCssTokens(source, {\n      comment,\n      leftCurlyBracket: (input, start, end) => {\n        switch (scope) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              allowImportAtRule = false;\n              scope = CSS_MODE_IN_BLOCK;\n              if (isModules) {\n                blockNestingLevel = 1;\n                isNextRulePrelude = isNextNestedSyntax(input, end);\n              }\n              break;\n            }\n          case CSS_MODE_IN_BLOCK:\n            {\n              if (isModules) {\n                blockNestingLevel++;\n                isNextRulePrelude = isNextNestedSyntax(input, end);\n              }\n              break;\n            }\n        }\n        return end;\n      },\n      rightCurlyBracket: (input, start, end) => {\n        switch (scope) {\n          case CSS_MODE_IN_BLOCK:\n            {\n              if (--blockNestingLevel === 0) {\n                scope = CSS_MODE_TOP_LEVEL;\n                if (isModules) {\n                  isNextRulePrelude = true;\n                  modeData = undefined;\n                }\n              } else if (isModules) {\n                if (isLocalMode()) {\n                  processDeclarationValueDone(input);\n                  inAnimationProperty = false;\n                }\n                isNextRulePrelude = isNextNestedSyntax(input, end);\n              }\n              break;\n            }\n        }\n        return end;\n      },\n      url: (input, start, end, contentStart, contentEnd) => {\n        const {\n          options,\n          errors: commentErrors\n        } = this.parseCommentOptions([lastTokenEndForComments, end]);\n        if (commentErrors) {\n          for (const e of commentErrors) {\n            const {\n              comment\n            } = e;\n            state.module.addWarning(new CommentCompilationWarning(`Compilation error while processing magic comment(-s): /*${comment.value}*/: ${e.message}`, comment.loc));\n          }\n        }\n        if (options && options.webpackIgnore !== undefined) {\n          if (typeof options.webpackIgnore !== \"boolean\") {\n            const {\n              line: sl,\n              column: sc\n            } = locConverter.get(lastTokenEndForComments);\n            const {\n              line: el,\n              column: ec\n            } = locConverter.get(end);\n            state.module.addWarning(new UnsupportedFeatureWarning(`\\`webpackIgnore\\` expected a boolean, but received: ${options.webpackIgnore}.`, {\n              start: {\n                line: sl,\n                column: sc\n              },\n              end: {\n                line: el,\n                column: ec\n              }\n            }));\n          } else if (options.webpackIgnore) {\n            return end;\n          }\n        }\n        const value = normalizeUrl(input.slice(contentStart, contentEnd), false);\n        // Ignore `url()`, `url('')` and `url(\"\")`, they are valid by spec\n        if (value.length === 0) return end;\n        const dep = new CssUrlDependency(value, [start, end], \"url\");\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(start);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(end);\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n        module.addCodeGenerationDependency(dep);\n        return end;\n      },\n      string: (_input, start, end) => {\n        switch (scope) {\n          case CSS_MODE_IN_BLOCK:\n            {\n              if (inAnimationProperty && balanced.length === 0) {\n                lastIdentifier = [start, end, false];\n              }\n            }\n        }\n        return end;\n      },\n      atKeyword: (input, start, end) => {\n        const name = input.slice(start, end).toLowerCase();\n        switch (name) {\n          case \"@namespace\":\n            {\n              this._emitWarning(state, \"'@namespace' is not supported in bundled CSS\", locConverter, start, end);\n              return eatUntilSemi(input, start);\n            }\n          case \"@import\":\n            {\n              if (!allowImportAtRule) {\n                this._emitWarning(state, \"Any '@import' rules must precede all other rules\", locConverter, start, end);\n                return end;\n              }\n              const tokens = walkCssTokens.eatImportTokens(input, end, {\n                comment\n              });\n              if (!tokens[3]) return end;\n              const semi = tokens[3][1];\n              if (!tokens[0]) {\n                this._emitWarning(state, `Expected URL in '${input.slice(start, semi)}'`, locConverter, start, semi);\n                return end;\n              }\n              const urlToken = tokens[0];\n              const url = normalizeUrl(input.slice(urlToken[2], urlToken[3]), true);\n              const newline = walkCssTokens.eatWhiteLine(input, semi);\n              const {\n                options,\n                errors: commentErrors\n              } = this.parseCommentOptions([end, urlToken[1]]);\n              if (commentErrors) {\n                for (const e of commentErrors) {\n                  const {\n                    comment\n                  } = e;\n                  state.module.addWarning(new CommentCompilationWarning(`Compilation error while processing magic comment(-s): /*${comment.value}*/: ${e.message}`, comment.loc));\n                }\n              }\n              if (options && options.webpackIgnore !== undefined) {\n                if (typeof options.webpackIgnore !== \"boolean\") {\n                  const {\n                    line: sl,\n                    column: sc\n                  } = locConverter.get(start);\n                  const {\n                    line: el,\n                    column: ec\n                  } = locConverter.get(newline);\n                  state.module.addWarning(new UnsupportedFeatureWarning(`\\`webpackIgnore\\` expected a boolean, but received: ${options.webpackIgnore}.`, {\n                    start: {\n                      line: sl,\n                      column: sc\n                    },\n                    end: {\n                      line: el,\n                      column: ec\n                    }\n                  }));\n                } else if (options.webpackIgnore) {\n                  return newline;\n                }\n              }\n              if (url.length === 0) {\n                const {\n                  line: sl,\n                  column: sc\n                } = locConverter.get(start);\n                const {\n                  line: el,\n                  column: ec\n                } = locConverter.get(newline);\n                const dep = new ConstDependency(\"\", [start, newline]);\n                module.addPresentationalDependency(dep);\n                dep.setLoc(sl, sc, el, ec);\n                return newline;\n              }\n              let layer;\n              if (tokens[1]) {\n                layer = input.slice(tokens[1][0] + 6, tokens[1][1] - 1).trim();\n              }\n              let supports;\n              if (tokens[2]) {\n                supports = input.slice(tokens[2][0] + 9, tokens[2][1] - 1).trim();\n              }\n              const last = tokens[2] || tokens[1] || tokens[0];\n              const mediaStart = walkCssTokens.eatWhitespaceAndComments(input, last[1]);\n              let media;\n              if (mediaStart !== semi - 1) {\n                media = input.slice(mediaStart, semi - 1).trim();\n              }\n              const {\n                line: sl,\n                column: sc\n              } = locConverter.get(start);\n              const {\n                line: el,\n                column: ec\n              } = locConverter.get(newline);\n              const dep = new CssImportDependency(url, [start, newline], layer, supports && supports.length > 0 ? supports : undefined, media && media.length > 0 ? media : undefined);\n              dep.setLoc(sl, sc, el, ec);\n              module.addDependency(dep);\n              return newline;\n            }\n          default:\n            {\n              if (isModules) {\n                if (OPTIONALLY_VENDOR_PREFIXED_KEYFRAMES_AT_RULE.test(name)) {\n                  const ident = walkCssTokens.eatIdentSequenceOrString(input, end);\n                  if (!ident) return end;\n                  const name = ident[2] === true ? input.slice(ident[0], ident[1]) : input.slice(ident[0] + 1, ident[1] - 1);\n                  if (isLocalMode()) {\n                    const {\n                      line: sl,\n                      column: sc\n                    } = locConverter.get(ident[0]);\n                    const {\n                      line: el,\n                      column: ec\n                    } = locConverter.get(ident[1]);\n                    const dep = new CssLocalIdentifierDependency(name, [ident[0], ident[1]]);\n                    dep.setLoc(sl, sc, el, ec);\n                    module.addDependency(dep);\n                  }\n                  return ident[1];\n                } else if (name === \"@property\") {\n                  const ident = walkCssTokens.eatIdentSequence(input, end);\n                  if (!ident) return end;\n                  let name = input.slice(ident[0], ident[1]);\n                  if (!name.startsWith(\"--\")) return end;\n                  name = name.slice(2);\n                  declaredCssVariables.add(name);\n                  if (isLocalMode()) {\n                    const {\n                      line: sl,\n                      column: sc\n                    } = locConverter.get(ident[0]);\n                    const {\n                      line: el,\n                      column: ec\n                    } = locConverter.get(ident[1]);\n                    const dep = new CssLocalIdentifierDependency(name, [ident[0], ident[1]], \"--\");\n                    dep.setLoc(sl, sc, el, ec);\n                    module.addDependency(dep);\n                  }\n                  return ident[1];\n                } else if (isModules && name === \"@scope\") {\n                  modeData = isLocalMode() ? \"local\" : \"global\";\n                  isNextRulePrelude = true;\n                  return end;\n                }\n                isNextRulePrelude = false;\n              }\n            }\n        }\n        return end;\n      },\n      semicolon: (input, start, end) => {\n        if (isModules && scope === CSS_MODE_IN_BLOCK) {\n          if (isLocalMode()) {\n            processDeclarationValueDone(input);\n            inAnimationProperty = false;\n          }\n          isNextRulePrelude = isNextNestedSyntax(input, end);\n        }\n        return end;\n      },\n      identifier: (input, start, end) => {\n        switch (scope) {\n          case CSS_MODE_IN_BLOCK:\n            {\n              if (isLocalMode()) {\n                // Handle only top level values and not inside functions\n                if (inAnimationProperty && balanced.length === 0) {\n                  lastIdentifier = [start, end, true];\n                } else {\n                  return processLocalDeclaration(input, start, end);\n                }\n              }\n              break;\n            }\n        }\n        return end;\n      },\n      delim: (input, start, end) => {\n        if (isNextRulePrelude && isLocalMode()) {\n          const ident = walkCssTokens.skipCommentsAndEatIdentSequence(input, end);\n          if (!ident) return end;\n          const name = input.slice(ident[0], ident[1]);\n          const dep = new CssLocalIdentifierDependency(name, [ident[0], ident[1]]);\n          const {\n            line: sl,\n            column: sc\n          } = locConverter.get(ident[0]);\n          const {\n            line: el,\n            column: ec\n          } = locConverter.get(ident[1]);\n          dep.setLoc(sl, sc, el, ec);\n          module.addDependency(dep);\n          return ident[1];\n        }\n        return end;\n      },\n      hash: (input, start, end, isID) => {\n        if (isNextRulePrelude && isLocalMode() && isID) {\n          const valueStart = start + 1;\n          const name = input.slice(valueStart, end);\n          const dep = new CssLocalIdentifierDependency(name, [valueStart, end]);\n          const {\n            line: sl,\n            column: sc\n          } = locConverter.get(start);\n          const {\n            line: el,\n            column: ec\n          } = locConverter.get(end);\n          dep.setLoc(sl, sc, el, ec);\n          module.addDependency(dep);\n        }\n        return end;\n      },\n      colon: (input, start, end) => {\n        if (isModules) {\n          const ident = walkCssTokens.skipCommentsAndEatIdentSequence(input, end);\n          if (!ident) return end;\n          const name = input.slice(ident[0], ident[1]).toLowerCase();\n          switch (scope) {\n            case CSS_MODE_TOP_LEVEL:\n              {\n                if (name === \"export\") {\n                  const pos = parseExports(input, ident[1]);\n                  const dep = new ConstDependency(\"\", [start, pos]);\n                  module.addPresentationalDependency(dep);\n                  return pos;\n                }\n              }\n            // falls through\n            default:\n              {\n                if (isNextRulePrelude) {\n                  const isFn = input.charCodeAt(ident[1]) === CC_LEFT_PARENTHESIS;\n                  if (isFn && name === \"local\") {\n                    const end = ident[1] + 1;\n                    modeData = \"local\";\n                    const dep = new ConstDependency(\"\", [start, end]);\n                    module.addPresentationalDependency(dep);\n                    balanced.push([\":local\", start, end]);\n                    return end;\n                  } else if (name === \"local\") {\n                    modeData = \"local\";\n                    // Eat extra whitespace\n                    end = walkCssTokens.eatWhitespace(input, ident[1]);\n                    if (ident[1] === end) {\n                      this._emitWarning(state, `Missing whitespace after ':local' in '${input.slice(start, eatUntilLeftCurly(input, end) + 1)}'`, locConverter, start, end);\n                    }\n                    const dep = new ConstDependency(\"\", [start, end]);\n                    module.addPresentationalDependency(dep);\n                    return end;\n                  } else if (isFn && name === \"global\") {\n                    const end = ident[1] + 1;\n                    modeData = \"global\";\n                    const dep = new ConstDependency(\"\", [start, end]);\n                    module.addPresentationalDependency(dep);\n                    balanced.push([\":global\", start, end]);\n                    return end;\n                  } else if (name === \"global\") {\n                    modeData = \"global\";\n                    // Eat extra whitespace\n                    end = walkCssTokens.eatWhitespace(input, ident[1]);\n                    if (ident[1] === end) {\n                      this._emitWarning(state, `Missing whitespace after ':global' in '${input.slice(start, eatUntilLeftCurly(input, end) + 1)}'`, locConverter, start, end);\n                    }\n                    const dep = new ConstDependency(\"\", [start, end]);\n                    module.addPresentationalDependency(dep);\n                    return end;\n                  }\n                }\n              }\n          }\n        }\n        lastTokenEndForComments = end;\n        return end;\n      },\n      function: (input, start, end) => {\n        const name = input.slice(start, end - 1).replace(/\\\\/g, \"\").toLowerCase();\n        balanced.push([name, start, end]);\n        switch (name) {\n          case \"src\":\n          case \"url\":\n            {\n              const string = walkCssTokens.eatString(input, end);\n              if (!string) return end;\n              const {\n                options,\n                errors: commentErrors\n              } = this.parseCommentOptions([lastTokenEndForComments, end]);\n              if (commentErrors) {\n                for (const e of commentErrors) {\n                  const {\n                    comment\n                  } = e;\n                  state.module.addWarning(new CommentCompilationWarning(`Compilation error while processing magic comment(-s): /*${comment.value}*/: ${e.message}`, comment.loc));\n                }\n              }\n              if (options && options.webpackIgnore !== undefined) {\n                if (typeof options.webpackIgnore !== \"boolean\") {\n                  const {\n                    line: sl,\n                    column: sc\n                  } = locConverter.get(string[0]);\n                  const {\n                    line: el,\n                    column: ec\n                  } = locConverter.get(string[1]);\n                  state.module.addWarning(new UnsupportedFeatureWarning(`\\`webpackIgnore\\` expected a boolean, but received: ${options.webpackIgnore}.`, {\n                    start: {\n                      line: sl,\n                      column: sc\n                    },\n                    end: {\n                      line: el,\n                      column: ec\n                    }\n                  }));\n                } else if (options.webpackIgnore) {\n                  return end;\n                }\n              }\n              const value = normalizeUrl(input.slice(string[0] + 1, string[1] - 1), true);\n              // Ignore `url()`, `url('')` and `url(\"\")`, they are valid by spec\n              if (value.length === 0) return end;\n              const isUrl = name === \"url\" || name === \"src\";\n              const dep = new CssUrlDependency(value, [string[0], string[1]], isUrl ? \"string\" : \"url\");\n              const {\n                line: sl,\n                column: sc\n              } = locConverter.get(string[0]);\n              const {\n                line: el,\n                column: ec\n              } = locConverter.get(string[1]);\n              dep.setLoc(sl, sc, el, ec);\n              module.addDependency(dep);\n              module.addCodeGenerationDependency(dep);\n              return string[1];\n            }\n          default:\n            {\n              if (IMAGE_SET_FUNCTION.test(name)) {\n                lastTokenEndForComments = end;\n                const values = walkCssTokens.eatImageSetStrings(input, end, {\n                  comment\n                });\n                if (values.length === 0) return end;\n                for (const [index, string] of values.entries()) {\n                  const value = normalizeUrl(input.slice(string[0] + 1, string[1] - 1), true);\n                  if (value.length === 0) return end;\n                  const {\n                    options,\n                    errors: commentErrors\n                  } = this.parseCommentOptions([index === 0 ? start : values[index - 1][1], string[1]]);\n                  if (commentErrors) {\n                    for (const e of commentErrors) {\n                      const {\n                        comment\n                      } = e;\n                      state.module.addWarning(new CommentCompilationWarning(`Compilation error while processing magic comment(-s): /*${comment.value}*/: ${e.message}`, comment.loc));\n                    }\n                  }\n                  if (options && options.webpackIgnore !== undefined) {\n                    if (typeof options.webpackIgnore !== \"boolean\") {\n                      const {\n                        line: sl,\n                        column: sc\n                      } = locConverter.get(string[0]);\n                      const {\n                        line: el,\n                        column: ec\n                      } = locConverter.get(string[1]);\n                      state.module.addWarning(new UnsupportedFeatureWarning(`\\`webpackIgnore\\` expected a boolean, but received: ${options.webpackIgnore}.`, {\n                        start: {\n                          line: sl,\n                          column: sc\n                        },\n                        end: {\n                          line: el,\n                          column: ec\n                        }\n                      }));\n                    } else if (options.webpackIgnore) {\n                      continue;\n                    }\n                  }\n                  const dep = new CssUrlDependency(value, [string[0], string[1]], \"url\");\n                  const {\n                    line: sl,\n                    column: sc\n                  } = locConverter.get(string[0]);\n                  const {\n                    line: el,\n                    column: ec\n                  } = locConverter.get(string[1]);\n                  dep.setLoc(sl, sc, el, ec);\n                  module.addDependency(dep);\n                  module.addCodeGenerationDependency(dep);\n                }\n                // Can contain `url()` inside, so let's return end to allow parse them\n                return end;\n              } else if (isLocalMode()) {\n                // Don't rename animation name when we have `var()` function\n                if (inAnimationProperty && balanced.length === 1) {\n                  lastIdentifier = undefined;\n                }\n                if (name === \"var\") {\n                  const ident = walkCssTokens.eatIdentSequence(input, end);\n                  if (!ident) return end;\n                  const name = input.slice(ident[0], ident[1]);\n                  if (!name.startsWith(\"--\")) return end;\n                  const {\n                    line: sl,\n                    column: sc\n                  } = locConverter.get(ident[0]);\n                  const {\n                    line: el,\n                    column: ec\n                  } = locConverter.get(ident[1]);\n                  const dep = new CssSelfLocalIdentifierDependency(name.slice(2), [ident[0], ident[1]], \"--\", declaredCssVariables);\n                  dep.setLoc(sl, sc, el, ec);\n                  module.addDependency(dep);\n                  return ident[1];\n                }\n              }\n            }\n        }\n        return end;\n      },\n      leftParenthesis: (input, start, end) => {\n        balanced.push([\"(\", start, end]);\n        return end;\n      },\n      rightParenthesis: (input, start, end) => {\n        const popped = balanced.pop();\n        if (isModules && popped && (popped[0] === \":local\" || popped[0] === \":global\")) {\n          modeData = balanced[balanced.length - 1] ? (/** @type {\"local\" | \"global\"} */\n          balanced[balanced.length - 1][0]) : undefined;\n          const dep = new ConstDependency(\"\", [start, end]);\n          module.addPresentationalDependency(dep);\n        }\n        return end;\n      },\n      comma: (input, start, end) => {\n        if (isModules) {\n          // Reset stack for `:global .class :local .class-other` selector after\n          modeData = undefined;\n          if (scope === CSS_MODE_IN_BLOCK && isLocalMode()) {\n            processDeclarationValueDone(input);\n          }\n        }\n        lastTokenEndForComments = start;\n        return end;\n      }\n    });\n\n    /** @type {BuildInfo} */\n    module.buildInfo.strict = true;\n    /** @type {BuildMeta} */\n    module.buildMeta.exportsType = this.namedExports ? \"namespace\" : \"default\";\n    if (!this.namedExports) {\n      /** @type {BuildMeta} */\n      module.buildMeta.defaultObject = \"redirect\";\n    }\n    module.addDependency(new StaticExportsDependency([], true));\n    return state;\n  }\n\n  /**\n   * @param {Range} range range\n   * @returns {Comment[]} comments in the range\n   */\n  getComments(range) {\n    if (!this.comments) return [];\n    const [rangeStart, rangeEnd] = range;\n    /**\n     * @param {Comment} comment comment\n     * @param {number} needle needle\n     * @returns {number} compared\n     */\n    const compare = (comment, needle) => /** @type {Range} */comment.range[0] - needle;\n    const comments = /** @type {Comment[]} */this.comments;\n    let idx = binarySearchBounds.ge(comments, rangeStart, compare);\n    /** @type {Comment[]} */\n    const commentsInRange = [];\n    while (comments[idx] && /** @type {Range} */comments[idx].range[1] <= rangeEnd) {\n      commentsInRange.push(comments[idx]);\n      idx++;\n    }\n    return commentsInRange;\n  }\n\n  /**\n   * @param {Range} range range of the comment\n   * @returns {{ options: Record<string, any> | null, errors: (Error & { comment: Comment })[] | null }} result\n   */\n  parseCommentOptions(range) {\n    const comments = this.getComments(range);\n    if (comments.length === 0) {\n      return EMPTY_COMMENT_OPTIONS;\n    }\n    /** @type {Record<string, EXPECTED_ANY> } */\n    const options = {};\n    /** @type {(Error & { comment: Comment })[]} */\n    const errors = [];\n    for (const comment of comments) {\n      const {\n        value\n      } = comment;\n      if (value && webpackCommentRegExp.test(value)) {\n        // try compile only if webpack options comment is present\n        try {\n          for (let [key, val] of Object.entries(vm.runInContext(`(function(){return {${value}};})()`, this.magicCommentContext))) {\n            if (typeof val === \"object\" && val !== null) {\n              val = val.constructor.name === \"RegExp\" ? new RegExp(val) : JSON.parse(JSON.stringify(val));\n            }\n            options[key] = val;\n          }\n        } catch (err) {\n          const newErr = new Error(String(/** @type {Error} */err.message));\n          newErr.stack = String(/** @type {Error} */err.stack);\n          Object.assign(newErr, {\n            comment\n          });\n          errors.push(/** @type (Error & { comment: Comment }) */newErr);\n        }\n      }\n    }\n    return {\n      options,\n      errors\n    };\n  }\n}\nmodule.exports = CssParser;","map":{"version":3,"names":["vm","require","CommentCompilationWarning","ModuleDependencyWarning","CSS_MODULE_TYPE_AUTO","Parser","UnsupportedFeatureWarning","WebpackError","ConstDependency","CssExportDependency","CssImportDependency","CssLocalIdentifierDependency","CssSelfLocalIdentifierDependency","CssUrlDependency","StaticExportsDependency","binarySearchBounds","parseResource","webpackCommentRegExp","createMagicCommentContext","walkCssTokens","CC_LEFT_CURLY","charCodeAt","CC_RIGHT_CURLY","CC_COLON","CC_SLASH","CC_SEMICOLON","CC_LEFT_PARENTHESIS","STRING_MULTILINE","TRIM_WHITE_SPACES","UNESCAPE","IMAGE_SET_FUNCTION","OPTIONALLY_VENDOR_PREFIXED_KEYFRAMES_AT_RULE","OPTIONALLY_VENDOR_PREFIXED_ANIMATION_PROPERTY","IS_MODULES","normalizeUrl","str","isString","replace","match","length","String","fromCharCode","Number","parseInt","slice","trim","test","includes","decodeURIComponent","_err","LocConverter","constructor","input","_input","line","column","pos","get","i","lastIndexOf","EMPTY_COMMENT_OPTIONS","options","errors","CSS_MODE_TOP_LEVEL","CSS_MODE_IN_BLOCK","CssParser","defaultMode","namedExports","comments","undefined","magicCommentContext","_emitWarning","state","message","locConverter","start","end","sl","sc","el","ec","current","addWarning","module","parse","source","Buffer","isBuffer","toString","Error","mode","type","matchResource","resource","path","isModules","scope","allowImportAtRule","balanced","lastTokenEndForComments","isNextRulePrelude","blockNestingLevel","modeData","inAnimationProperty","declaredCssVariables","Set","lastIdentifier","isNextNestedSyntax","eatWhitespaceAndComments","isIdentifier","isIdentStartCodePoint","isLocalMode","eatText","eater","text","newPos","eatComments","trimEnd","eatExportName","eatUntil","eatExportValue","parseExports","cc","name","value","dep","setLoc","addDependency","eatWhiteLine","eatPropertyName","processLocalDeclaration","propertyNameStart","propertyNameEnd","propertyName","startsWith","add","processDeclarationValueDone","eatUntilSemi","eatUntilLeftCurly","comment","range","loc","push","leftCurlyBracket","rightCurlyBracket","url","contentStart","contentEnd","commentErrors","parseCommentOptions","e","webpackIgnore","addCodeGenerationDependency","string","atKeyword","toLowerCase","tokens","eatImportTokens","semi","urlToken","newline","addPresentationalDependency","layer","supports","last","mediaStart","media","ident","eatIdentSequenceOrString","eatIdentSequence","semicolon","identifier","delim","skipCommentsAndEatIdentSequence","hash","isID","valueStart","colon","isFn","eatWhitespace","function","eatString","isUrl","values","eatImageSetStrings","index","entries","leftParenthesis","rightParenthesis","popped","pop","comma","buildInfo","strict","buildMeta","exportsType","defaultObject","getComments","rangeStart","rangeEnd","compare","needle","idx","ge","commentsInRange","key","val","Object","runInContext","RegExp","JSON","stringify","err","newErr","stack","assign","exports"],"sources":["/home/wickliff/Desktop/dev-waki/portfolio2/node_modules/webpack/lib/css/CssParser.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst vm = require(\"vm\");\nconst CommentCompilationWarning = require(\"../CommentCompilationWarning\");\nconst ModuleDependencyWarning = require(\"../ModuleDependencyWarning\");\nconst { CSS_MODULE_TYPE_AUTO } = require(\"../ModuleTypeConstants\");\nconst Parser = require(\"../Parser\");\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\nconst WebpackError = require(\"../WebpackError\");\nconst ConstDependency = require(\"../dependencies/ConstDependency\");\nconst CssExportDependency = require(\"../dependencies/CssExportDependency\");\nconst CssImportDependency = require(\"../dependencies/CssImportDependency\");\nconst CssLocalIdentifierDependency = require(\"../dependencies/CssLocalIdentifierDependency\");\nconst CssSelfLocalIdentifierDependency = require(\"../dependencies/CssSelfLocalIdentifierDependency\");\nconst CssUrlDependency = require(\"../dependencies/CssUrlDependency\");\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\nconst binarySearchBounds = require(\"../util/binarySearchBounds\");\nconst { parseResource } = require(\"../util/identifier\");\nconst {\n\twebpackCommentRegExp,\n\tcreateMagicCommentContext\n} = require(\"../util/magicComment\");\nconst walkCssTokens = require(\"./walkCssTokens\");\n\n/** @typedef {import(\"../Module\").BuildInfo} BuildInfo */\n/** @typedef {import(\"../Module\").BuildMeta} BuildMeta */\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n/** @typedef {import(\"../Parser\").PreparsedAst} PreparsedAst */\n\n/** @typedef {[number, number]} Range */\n/** @typedef {{ line: number, column: number }} Position */\n/** @typedef {{ value: string, range: Range, loc: { start: Position, end: Position } }} Comment */\n\nconst CC_LEFT_CURLY = \"{\".charCodeAt(0);\nconst CC_RIGHT_CURLY = \"}\".charCodeAt(0);\nconst CC_COLON = \":\".charCodeAt(0);\nconst CC_SLASH = \"/\".charCodeAt(0);\nconst CC_SEMICOLON = \";\".charCodeAt(0);\nconst CC_LEFT_PARENTHESIS = \"(\".charCodeAt(0);\n\n// https://www.w3.org/TR/css-syntax-3/#newline\n// We don't have `preprocessing` stage, so we need specify all of them\nconst STRING_MULTILINE = /\\\\[\\n\\r\\f]/g;\n// https://www.w3.org/TR/css-syntax-3/#whitespace\nconst TRIM_WHITE_SPACES = /(^[ \\t\\n\\r\\f]*|[ \\t\\n\\r\\f]*$)/g;\nconst UNESCAPE = /\\\\([0-9a-fA-F]{1,6}[ \\t\\n\\r\\f]?|[\\s\\S])/g;\nconst IMAGE_SET_FUNCTION = /^(-\\w+-)?image-set$/i;\nconst OPTIONALLY_VENDOR_PREFIXED_KEYFRAMES_AT_RULE = /^@(-\\w+-)?keyframes$/;\nconst OPTIONALLY_VENDOR_PREFIXED_ANIMATION_PROPERTY =\n\t/^(-\\w+-)?animation(-name)?$/i;\nconst IS_MODULES = /\\.module(s)?\\.[^.]+$/i;\n\n/**\n * @param {string} str url string\n * @param {boolean} isString is url wrapped in quotes\n * @returns {string} normalized url\n */\nconst normalizeUrl = (str, isString) => {\n\t// Remove extra spaces and newlines:\n\t// `url(\"im\\\n\t// g.png\")`\n\tif (isString) {\n\t\tstr = str.replace(STRING_MULTILINE, \"\");\n\t}\n\n\tstr = str\n\t\t// Remove unnecessary spaces from `url(\"   img.png\t \")`\n\t\t.replace(TRIM_WHITE_SPACES, \"\")\n\t\t// Unescape\n\t\t.replace(UNESCAPE, match => {\n\t\t\tif (match.length > 2) {\n\t\t\t\treturn String.fromCharCode(Number.parseInt(match.slice(1).trim(), 16));\n\t\t\t}\n\t\t\treturn match[1];\n\t\t});\n\n\tif (/^data:/i.test(str)) {\n\t\treturn str;\n\t}\n\n\tif (str.includes(\"%\")) {\n\t\t// Convert `url('%2E/img.png')` -> `url('./img.png')`\n\t\ttry {\n\t\t\tstr = decodeURIComponent(str);\n\t\t} catch (_err) {\n\t\t\t// Ignore\n\t\t}\n\t}\n\n\treturn str;\n};\n\nclass LocConverter {\n\t/**\n\t * @param {string} input input\n\t */\n\tconstructor(input) {\n\t\tthis._input = input;\n\t\tthis.line = 1;\n\t\tthis.column = 0;\n\t\tthis.pos = 0;\n\t}\n\n\t/**\n\t * @param {number} pos position\n\t * @returns {LocConverter} location converter\n\t */\n\tget(pos) {\n\t\tif (this.pos !== pos) {\n\t\t\tif (this.pos < pos) {\n\t\t\t\tconst str = this._input.slice(this.pos, pos);\n\t\t\t\tlet i = str.lastIndexOf(\"\\n\");\n\t\t\t\tif (i === -1) {\n\t\t\t\t\tthis.column += str.length;\n\t\t\t\t} else {\n\t\t\t\t\tthis.column = str.length - i - 1;\n\t\t\t\t\tthis.line++;\n\t\t\t\t\twhile (i > 0 && (i = str.lastIndexOf(\"\\n\", i - 1)) !== -1)\n\t\t\t\t\t\tthis.line++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet i = this._input.lastIndexOf(\"\\n\", this.pos);\n\t\t\t\twhile (i >= pos) {\n\t\t\t\t\tthis.line--;\n\t\t\t\t\ti = i > 0 ? this._input.lastIndexOf(\"\\n\", i - 1) : -1;\n\t\t\t\t}\n\t\t\t\tthis.column = pos - i;\n\t\t\t}\n\t\t\tthis.pos = pos;\n\t\t}\n\t\treturn this;\n\t}\n}\n\nconst EMPTY_COMMENT_OPTIONS = {\n\toptions: null,\n\terrors: null\n};\n\nconst CSS_MODE_TOP_LEVEL = 0;\nconst CSS_MODE_IN_BLOCK = 1;\n\nclass CssParser extends Parser {\n\t/**\n\t * @param {object} options options\n\t * @param {(\"pure\" | \"global\" | \"local\" | \"auto\")=} options.defaultMode default mode\n\t * @param {boolean=} options.namedExports is named exports\n\t */\n\tconstructor({ defaultMode = \"pure\", namedExports = true } = {}) {\n\t\tsuper();\n\t\tthis.defaultMode = defaultMode;\n\t\tthis.namedExports = namedExports;\n\t\t/** @type {Comment[] | undefined} */\n\t\tthis.comments = undefined;\n\t\tthis.magicCommentContext = createMagicCommentContext();\n\t}\n\n\t/**\n\t * @param {ParserState} state parser state\n\t * @param {string} message warning message\n\t * @param {LocConverter} locConverter location converter\n\t * @param {number} start start offset\n\t * @param {number} end end offset\n\t */\n\t_emitWarning(state, message, locConverter, start, end) {\n\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\tconst { line: el, column: ec } = locConverter.get(end);\n\n\t\tstate.current.addWarning(\n\t\t\tnew ModuleDependencyWarning(state.module, new WebpackError(message), {\n\t\t\t\tstart: { line: sl, column: sc },\n\t\t\t\tend: { line: el, column: ec }\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t * @param {string | Buffer | PreparsedAst} source the source to parse\n\t * @param {ParserState} state the parser state\n\t * @returns {ParserState} the parser state\n\t */\n\tparse(source, state) {\n\t\tif (Buffer.isBuffer(source)) {\n\t\t\tsource = source.toString(\"utf-8\");\n\t\t} else if (typeof source === \"object\") {\n\t\t\tthrow new Error(\"webpackAst is unexpected for the CssParser\");\n\t\t}\n\t\tif (source[0] === \"\\uFEFF\") {\n\t\t\tsource = source.slice(1);\n\t\t}\n\n\t\tlet mode = this.defaultMode;\n\n\t\tconst module = state.module;\n\n\t\tif (\n\t\t\tmode === \"auto\" &&\n\t\t\tmodule.type === CSS_MODULE_TYPE_AUTO &&\n\t\t\tIS_MODULES.test(\n\t\t\t\tparseResource(module.matchResource || module.resource).path\n\t\t\t)\n\t\t) {\n\t\t\tmode = \"local\";\n\t\t}\n\n\t\tconst isModules = mode === \"global\" || mode === \"local\";\n\n\t\tconst locConverter = new LocConverter(source);\n\n\t\t/** @type {number} */\n\t\tlet scope = CSS_MODE_TOP_LEVEL;\n\t\t/** @type {boolean} */\n\t\tlet allowImportAtRule = true;\n\t\t/** @type [string, number, number][] */\n\t\tconst balanced = [];\n\t\tlet lastTokenEndForComments = 0;\n\n\t\t/** @type {boolean} */\n\t\tlet isNextRulePrelude = isModules;\n\t\t/** @type {number} */\n\t\tlet blockNestingLevel = 0;\n\t\t/** @type {\"local\" | \"global\" | undefined} */\n\t\tlet modeData;\n\t\t/** @type {boolean} */\n\t\tlet inAnimationProperty = false;\n\t\t/** @type {Set<string>} */\n\t\tconst declaredCssVariables = new Set();\n\t\t/** @type {[number, number, boolean] | undefined} */\n\t\tlet lastIdentifier;\n\n\t\t/**\n\t\t * @param {string} input input\n\t\t * @param {number} pos position\n\t\t * @returns {boolean} true, when next is nested syntax\n\t\t */\n\t\tconst isNextNestedSyntax = (input, pos) => {\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\n\t\t\tif (input[pos] === \"}\") {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// According spec only identifier can be used as a property name\n\t\t\tconst isIdentifier = walkCssTokens.isIdentStartCodePoint(\n\t\t\t\tinput.charCodeAt(pos)\n\t\t\t);\n\n\t\t\treturn !isIdentifier;\n\t\t};\n\t\t/**\n\t\t * @returns {boolean} true, when in local scope\n\t\t */\n\t\tconst isLocalMode = () =>\n\t\t\tmodeData === \"local\" || (mode === \"local\" && modeData === undefined);\n\n\t\t/**\n\t\t * @param {string} input input\n\t\t * @param {number} pos start position\n\t\t * @param {(input: string, pos: number) => number} eater eater\n\t\t * @returns {[number,string]} new position and text\n\t\t */\n\t\tconst eatText = (input, pos, eater) => {\n\t\t\tlet text = \"\";\n\t\t\tfor (;;) {\n\t\t\t\tif (input.charCodeAt(pos) === CC_SLASH) {\n\t\t\t\t\tconst newPos = walkCssTokens.eatComments(input, pos);\n\t\t\t\t\tif (pos !== newPos) {\n\t\t\t\t\t\tpos = newPos;\n\t\t\t\t\t\tif (pos === input.length) break;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext += \"/\";\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tif (pos === input.length) break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst newPos = eater(input, pos);\n\t\t\t\tif (pos !== newPos) {\n\t\t\t\t\ttext += input.slice(pos, newPos);\n\t\t\t\t\tpos = newPos;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (pos === input.length) break;\n\t\t\t}\n\t\t\treturn [pos, text.trimEnd()];\n\t\t};\n\t\tconst eatExportName = walkCssTokens.eatUntil(\":};/\");\n\t\tconst eatExportValue = walkCssTokens.eatUntil(\"};/\");\n\t\t/**\n\t\t * @param {string} input input\n\t\t * @param {number} pos start position\n\t\t * @returns {number} position after parse\n\t\t */\n\t\tconst parseExports = (input, pos) => {\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\tif (cc !== CC_LEFT_CURLY) {\n\t\t\t\tthis._emitWarning(\n\t\t\t\t\tstate,\n\t\t\t\t\t`Unexpected '${input[pos]}' at ${pos} during parsing of ':export' (expected '{')`,\n\t\t\t\t\tlocConverter,\n\t\t\t\t\tpos,\n\t\t\t\t\tpos\n\t\t\t\t);\n\t\t\t\treturn pos;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\tfor (;;) {\n\t\t\t\tif (input.charCodeAt(pos) === CC_RIGHT_CURLY) break;\n\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tconst start = pos;\n\t\t\t\tlet name;\n\t\t\t\t[pos, name] = eatText(input, pos, eatExportName);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tif (input.charCodeAt(pos) !== CC_COLON) {\n\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\t`Unexpected '${input[pos]}' at ${pos} during parsing of export name in ':export' (expected ':')`,\n\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\tstart,\n\t\t\t\t\t\tpos\n\t\t\t\t\t);\n\t\t\t\t\treturn pos;\n\t\t\t\t}\n\t\t\t\tpos++;\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tlet value;\n\t\t\t\t[pos, value] = eatText(input, pos, eatExportValue);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\t\tif (cc === CC_SEMICOLON) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t} else if (cc !== CC_RIGHT_CURLY) {\n\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\t`Unexpected '${input[pos]}' at ${pos} during parsing of export value in ':export' (expected ';' or '}')`,\n\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\tstart,\n\t\t\t\t\t\tpos\n\t\t\t\t\t);\n\t\t\t\t\treturn pos;\n\t\t\t\t}\n\t\t\t\tconst dep = new CssExportDependency(name, value);\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(pos);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t}\n\t\t\tpos++;\n\t\t\tif (pos === input.length) return pos;\n\t\t\tpos = walkCssTokens.eatWhiteLine(input, pos);\n\t\t\treturn pos;\n\t\t};\n\t\tconst eatPropertyName = walkCssTokens.eatUntil(\":{};\");\n\t\t/**\n\t\t * @param {string} input input\n\t\t * @param {number} pos name start position\n\t\t * @param {number} end name end position\n\t\t * @returns {number} position after handling\n\t\t */\n\t\tconst processLocalDeclaration = (input, pos, end) => {\n\t\t\tmodeData = undefined;\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\tconst propertyNameStart = pos;\n\t\t\tconst [propertyNameEnd, propertyName] = eatText(\n\t\t\t\tinput,\n\t\t\t\tpos,\n\t\t\t\teatPropertyName\n\t\t\t);\n\t\t\tif (input.charCodeAt(propertyNameEnd) !== CC_COLON) return end;\n\t\t\tpos = propertyNameEnd + 1;\n\t\t\tif (propertyName.startsWith(\"--\")) {\n\t\t\t\t// CSS Variable\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(propertyNameStart);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(propertyNameEnd);\n\t\t\t\tconst name = propertyName.slice(2);\n\t\t\t\tconst dep = new CssLocalIdentifierDependency(\n\t\t\t\t\tname,\n\t\t\t\t\t[propertyNameStart, propertyNameEnd],\n\t\t\t\t\t\"--\"\n\t\t\t\t);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t\tdeclaredCssVariables.add(name);\n\t\t\t} else if (\n\t\t\t\tOPTIONALLY_VENDOR_PREFIXED_ANIMATION_PROPERTY.test(propertyName)\n\t\t\t) {\n\t\t\t\tinAnimationProperty = true;\n\t\t\t}\n\t\t\treturn pos;\n\t\t};\n\t\t/**\n\t\t * @param {string} input input\n\t\t */\n\t\tconst processDeclarationValueDone = input => {\n\t\t\tif (inAnimationProperty && lastIdentifier) {\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(lastIdentifier[0]);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(lastIdentifier[1]);\n\t\t\t\tconst name = lastIdentifier[2]\n\t\t\t\t\t? input.slice(lastIdentifier[0], lastIdentifier[1])\n\t\t\t\t\t: input.slice(lastIdentifier[0] + 1, lastIdentifier[1] - 1);\n\t\t\t\tconst dep = new CssSelfLocalIdentifierDependency(name, [\n\t\t\t\t\tlastIdentifier[0],\n\t\t\t\t\tlastIdentifier[1]\n\t\t\t\t]);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t\tlastIdentifier = undefined;\n\t\t\t}\n\t\t};\n\n\t\tconst eatUntilSemi = walkCssTokens.eatUntil(\";\");\n\t\tconst eatUntilLeftCurly = walkCssTokens.eatUntil(\"{\");\n\n\t\t/**\n\t\t * @param {string} input input\n\t\t * @param {number} start start\n\t\t * @param {number} end end\n\t\t * @returns {number} end\n\t\t */\n\t\tconst comment = (input, start, end) => {\n\t\t\tif (!this.comments) this.comments = [];\n\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\n\t\t\t/** @type {Comment} */\n\t\t\tconst comment = {\n\t\t\t\tvalue: input.slice(start + 2, end - 2),\n\t\t\t\trange: [start, end],\n\t\t\t\tloc: {\n\t\t\t\t\tstart: { line: sl, column: sc },\n\t\t\t\t\tend: { line: el, column: ec }\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.comments.push(comment);\n\t\t\treturn end;\n\t\t};\n\n\t\twalkCssTokens(source, {\n\t\t\tcomment,\n\t\t\tleftCurlyBracket: (input, start, end) => {\n\t\t\t\tswitch (scope) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tallowImportAtRule = false;\n\t\t\t\t\t\tscope = CSS_MODE_IN_BLOCK;\n\n\t\t\t\t\t\tif (isModules) {\n\t\t\t\t\t\t\tblockNestingLevel = 1;\n\t\t\t\t\t\t\tisNextRulePrelude = isNextNestedSyntax(input, end);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_IN_BLOCK: {\n\t\t\t\t\t\tif (isModules) {\n\t\t\t\t\t\t\tblockNestingLevel++;\n\t\t\t\t\t\t\tisNextRulePrelude = isNextNestedSyntax(input, end);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\trightCurlyBracket: (input, start, end) => {\n\t\t\t\tswitch (scope) {\n\t\t\t\t\tcase CSS_MODE_IN_BLOCK: {\n\t\t\t\t\t\tif (--blockNestingLevel === 0) {\n\t\t\t\t\t\t\tscope = CSS_MODE_TOP_LEVEL;\n\n\t\t\t\t\t\t\tif (isModules) {\n\t\t\t\t\t\t\t\tisNextRulePrelude = true;\n\t\t\t\t\t\t\t\tmodeData = undefined;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (isModules) {\n\t\t\t\t\t\t\tif (isLocalMode()) {\n\t\t\t\t\t\t\t\tprocessDeclarationValueDone(input);\n\t\t\t\t\t\t\t\tinAnimationProperty = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tisNextRulePrelude = isNextNestedSyntax(input, end);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\turl: (input, start, end, contentStart, contentEnd) => {\n\t\t\t\tconst { options, errors: commentErrors } = this.parseCommentOptions([\n\t\t\t\t\tlastTokenEndForComments,\n\t\t\t\t\tend\n\t\t\t\t]);\n\t\t\t\tif (commentErrors) {\n\t\t\t\t\tfor (const e of commentErrors) {\n\t\t\t\t\t\tconst { comment } = e;\n\t\t\t\t\t\tstate.module.addWarning(\n\t\t\t\t\t\t\tnew CommentCompilationWarning(\n\t\t\t\t\t\t\t\t`Compilation error while processing magic comment(-s): /*${comment.value}*/: ${e.message}`,\n\t\t\t\t\t\t\t\tcomment.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (options && options.webpackIgnore !== undefined) {\n\t\t\t\t\tif (typeof options.webpackIgnore !== \"boolean\") {\n\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(\n\t\t\t\t\t\t\tlastTokenEndForComments\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\n\t\t\t\t\t\tstate.module.addWarning(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\t`\\`webpackIgnore\\` expected a boolean, but received: ${options.webpackIgnore}.`,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstart: { line: sl, column: sc },\n\t\t\t\t\t\t\t\t\tend: { line: el, column: ec }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (options.webpackIgnore) {\n\t\t\t\t\t\treturn end;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst value = normalizeUrl(\n\t\t\t\t\tinput.slice(contentStart, contentEnd),\n\t\t\t\t\tfalse\n\t\t\t\t);\n\t\t\t\t// Ignore `url()`, `url('')` and `url(\"\")`, they are valid by spec\n\t\t\t\tif (value.length === 0) return end;\n\t\t\t\tconst dep = new CssUrlDependency(value, [start, end], \"url\");\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t\tmodule.addCodeGenerationDependency(dep);\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tstring: (_input, start, end) => {\n\t\t\t\tswitch (scope) {\n\t\t\t\t\tcase CSS_MODE_IN_BLOCK: {\n\t\t\t\t\t\tif (inAnimationProperty && balanced.length === 0) {\n\t\t\t\t\t\t\tlastIdentifier = [start, end, false];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tatKeyword: (input, start, end) => {\n\t\t\t\tconst name = input.slice(start, end).toLowerCase();\n\n\t\t\t\tswitch (name) {\n\t\t\t\t\tcase \"@namespace\": {\n\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\"'@namespace' is not supported in bundled CSS\",\n\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn eatUntilSemi(input, start);\n\t\t\t\t\t}\n\t\t\t\t\tcase \"@import\": {\n\t\t\t\t\t\tif (!allowImportAtRule) {\n\t\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t\"Any '@import' rules must precede all other rules\",\n\t\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn end;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst tokens = walkCssTokens.eatImportTokens(input, end, {\n\t\t\t\t\t\t\tcomment\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (!tokens[3]) return end;\n\t\t\t\t\t\tconst semi = tokens[3][1];\n\t\t\t\t\t\tif (!tokens[0]) {\n\t\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t`Expected URL in '${input.slice(start, semi)}'`,\n\t\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\tsemi\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn end;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst urlToken = tokens[0];\n\t\t\t\t\t\tconst url = normalizeUrl(\n\t\t\t\t\t\t\tinput.slice(urlToken[2], urlToken[3]),\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst newline = walkCssTokens.eatWhiteLine(input, semi);\n\t\t\t\t\t\tconst { options, errors: commentErrors } = this.parseCommentOptions(\n\t\t\t\t\t\t\t[end, urlToken[1]]\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (commentErrors) {\n\t\t\t\t\t\t\tfor (const e of commentErrors) {\n\t\t\t\t\t\t\t\tconst { comment } = e;\n\t\t\t\t\t\t\t\tstate.module.addWarning(\n\t\t\t\t\t\t\t\t\tnew CommentCompilationWarning(\n\t\t\t\t\t\t\t\t\t\t`Compilation error while processing magic comment(-s): /*${comment.value}*/: ${e.message}`,\n\t\t\t\t\t\t\t\t\t\tcomment.loc\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options && options.webpackIgnore !== undefined) {\n\t\t\t\t\t\t\tif (typeof options.webpackIgnore !== \"boolean\") {\n\t\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(newline);\n\n\t\t\t\t\t\t\t\tstate.module.addWarning(\n\t\t\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\t\t\t`\\`webpackIgnore\\` expected a boolean, but received: ${options.webpackIgnore}.`,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tstart: { line: sl, column: sc },\n\t\t\t\t\t\t\t\t\t\t\tend: { line: el, column: ec }\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (options.webpackIgnore) {\n\t\t\t\t\t\t\t\treturn newline;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (url.length === 0) {\n\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(newline);\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, newline]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\n\t\t\t\t\t\t\treturn newline;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet layer;\n\n\t\t\t\t\t\tif (tokens[1]) {\n\t\t\t\t\t\t\tlayer = input.slice(tokens[1][0] + 6, tokens[1][1] - 1).trim();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet supports;\n\n\t\t\t\t\t\tif (tokens[2]) {\n\t\t\t\t\t\t\tsupports = input.slice(tokens[2][0] + 9, tokens[2][1] - 1).trim();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst last = tokens[2] || tokens[1] || tokens[0];\n\t\t\t\t\t\tconst mediaStart = walkCssTokens.eatWhitespaceAndComments(\n\t\t\t\t\t\t\tinput,\n\t\t\t\t\t\t\tlast[1]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tlet media;\n\n\t\t\t\t\t\tif (mediaStart !== semi - 1) {\n\t\t\t\t\t\t\tmedia = input.slice(mediaStart, semi - 1).trim();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(newline);\n\t\t\t\t\t\tconst dep = new CssImportDependency(\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t[start, newline],\n\t\t\t\t\t\t\tlayer,\n\t\t\t\t\t\t\tsupports && supports.length > 0 ? supports : undefined,\n\t\t\t\t\t\t\tmedia && media.length > 0 ? media : undefined\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\tmodule.addDependency(dep);\n\n\t\t\t\t\t\treturn newline;\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tif (isModules) {\n\t\t\t\t\t\t\tif (OPTIONALLY_VENDOR_PREFIXED_KEYFRAMES_AT_RULE.test(name)) {\n\t\t\t\t\t\t\t\tconst ident = walkCssTokens.eatIdentSequenceOrString(\n\t\t\t\t\t\t\t\t\tinput,\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (!ident) return end;\n\t\t\t\t\t\t\t\tconst name =\n\t\t\t\t\t\t\t\t\tident[2] === true\n\t\t\t\t\t\t\t\t\t\t? input.slice(ident[0], ident[1])\n\t\t\t\t\t\t\t\t\t\t: input.slice(ident[0] + 1, ident[1] - 1);\n\t\t\t\t\t\t\t\tif (isLocalMode()) {\n\t\t\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(ident[0]);\n\t\t\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(ident[1]);\n\t\t\t\t\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(name, [\n\t\t\t\t\t\t\t\t\t\tident[0],\n\t\t\t\t\t\t\t\t\t\tident[1]\n\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn ident[1];\n\t\t\t\t\t\t\t} else if (name === \"@property\") {\n\t\t\t\t\t\t\t\tconst ident = walkCssTokens.eatIdentSequence(input, end);\n\t\t\t\t\t\t\t\tif (!ident) return end;\n\t\t\t\t\t\t\t\tlet name = input.slice(ident[0], ident[1]);\n\t\t\t\t\t\t\t\tif (!name.startsWith(\"--\")) return end;\n\t\t\t\t\t\t\t\tname = name.slice(2);\n\t\t\t\t\t\t\t\tdeclaredCssVariables.add(name);\n\t\t\t\t\t\t\t\tif (isLocalMode()) {\n\t\t\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(ident[0]);\n\t\t\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(ident[1]);\n\t\t\t\t\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(\n\t\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\t\t[ident[0], ident[1]],\n\t\t\t\t\t\t\t\t\t\t\"--\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn ident[1];\n\t\t\t\t\t\t\t} else if (isModules && name === \"@scope\") {\n\t\t\t\t\t\t\t\tmodeData = isLocalMode() ? \"local\" : \"global\";\n\t\t\t\t\t\t\t\tisNextRulePrelude = true;\n\t\t\t\t\t\t\t\treturn end;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tisNextRulePrelude = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tsemicolon: (input, start, end) => {\n\t\t\t\tif (isModules && scope === CSS_MODE_IN_BLOCK) {\n\t\t\t\t\tif (isLocalMode()) {\n\t\t\t\t\t\tprocessDeclarationValueDone(input);\n\t\t\t\t\t\tinAnimationProperty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tisNextRulePrelude = isNextNestedSyntax(input, end);\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tidentifier: (input, start, end) => {\n\t\t\t\tswitch (scope) {\n\t\t\t\t\tcase CSS_MODE_IN_BLOCK: {\n\t\t\t\t\t\tif (isLocalMode()) {\n\t\t\t\t\t\t\t// Handle only top level values and not inside functions\n\t\t\t\t\t\t\tif (inAnimationProperty && balanced.length === 0) {\n\t\t\t\t\t\t\t\tlastIdentifier = [start, end, true];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn processLocalDeclaration(input, start, end);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tdelim: (input, start, end) => {\n\t\t\t\tif (isNextRulePrelude && isLocalMode()) {\n\t\t\t\t\tconst ident = walkCssTokens.skipCommentsAndEatIdentSequence(\n\t\t\t\t\t\tinput,\n\t\t\t\t\t\tend\n\t\t\t\t\t);\n\t\t\t\t\tif (!ident) return end;\n\t\t\t\t\tconst name = input.slice(ident[0], ident[1]);\n\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(name, [\n\t\t\t\t\t\tident[0],\n\t\t\t\t\t\tident[1]\n\t\t\t\t\t]);\n\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(ident[0]);\n\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(ident[1]);\n\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\treturn ident[1];\n\t\t\t\t}\n\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\thash: (input, start, end, isID) => {\n\t\t\t\tif (isNextRulePrelude && isLocalMode() && isID) {\n\t\t\t\t\tconst valueStart = start + 1;\n\t\t\t\t\tconst name = input.slice(valueStart, end);\n\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(name, [valueStart, end]);\n\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t}\n\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tcolon: (input, start, end) => {\n\t\t\t\tif (isModules) {\n\t\t\t\t\tconst ident = walkCssTokens.skipCommentsAndEatIdentSequence(\n\t\t\t\t\t\tinput,\n\t\t\t\t\t\tend\n\t\t\t\t\t);\n\t\t\t\t\tif (!ident) return end;\n\t\t\t\t\tconst name = input.slice(ident[0], ident[1]).toLowerCase();\n\n\t\t\t\t\tswitch (scope) {\n\t\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\t\tif (name === \"export\") {\n\t\t\t\t\t\t\t\tconst pos = parseExports(input, ident[1]);\n\t\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, pos]);\n\t\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t\t\treturn pos;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// falls through\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\tif (isNextRulePrelude) {\n\t\t\t\t\t\t\t\tconst isFn = input.charCodeAt(ident[1]) === CC_LEFT_PARENTHESIS;\n\n\t\t\t\t\t\t\t\tif (isFn && name === \"local\") {\n\t\t\t\t\t\t\t\t\tconst end = ident[1] + 1;\n\t\t\t\t\t\t\t\t\tmodeData = \"local\";\n\t\t\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t\t\t\tbalanced.push([\":local\", start, end]);\n\t\t\t\t\t\t\t\t\treturn end;\n\t\t\t\t\t\t\t\t} else if (name === \"local\") {\n\t\t\t\t\t\t\t\t\tmodeData = \"local\";\n\t\t\t\t\t\t\t\t\t// Eat extra whitespace\n\t\t\t\t\t\t\t\t\tend = walkCssTokens.eatWhitespace(input, ident[1]);\n\n\t\t\t\t\t\t\t\t\tif (ident[1] === end) {\n\t\t\t\t\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t\t\t\t`Missing whitespace after ':local' in '${input.slice(\n\t\t\t\t\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\t\t\t\t\teatUntilLeftCurly(input, end) + 1\n\t\t\t\t\t\t\t\t\t\t\t)}'`,\n\t\t\t\t\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t\t\t\treturn end;\n\t\t\t\t\t\t\t\t} else if (isFn && name === \"global\") {\n\t\t\t\t\t\t\t\t\tconst end = ident[1] + 1;\n\t\t\t\t\t\t\t\t\tmodeData = \"global\";\n\t\t\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t\t\t\tbalanced.push([\":global\", start, end]);\n\t\t\t\t\t\t\t\t\treturn end;\n\t\t\t\t\t\t\t\t} else if (name === \"global\") {\n\t\t\t\t\t\t\t\t\tmodeData = \"global\";\n\t\t\t\t\t\t\t\t\t// Eat extra whitespace\n\t\t\t\t\t\t\t\t\tend = walkCssTokens.eatWhitespace(input, ident[1]);\n\n\t\t\t\t\t\t\t\t\tif (ident[1] === end) {\n\t\t\t\t\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t\t\t\t`Missing whitespace after ':global' in '${input.slice(\n\t\t\t\t\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\t\t\t\t\teatUntilLeftCurly(input, end) + 1\n\t\t\t\t\t\t\t\t\t\t\t)}'`,\n\t\t\t\t\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t\t\t\treturn end;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlastTokenEndForComments = end;\n\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tfunction: (input, start, end) => {\n\t\t\t\tconst name = input\n\t\t\t\t\t.slice(start, end - 1)\n\t\t\t\t\t.replace(/\\\\/g, \"\")\n\t\t\t\t\t.toLowerCase();\n\n\t\t\t\tbalanced.push([name, start, end]);\n\n\t\t\t\tswitch (name) {\n\t\t\t\t\tcase \"src\":\n\t\t\t\t\tcase \"url\": {\n\t\t\t\t\t\tconst string = walkCssTokens.eatString(input, end);\n\t\t\t\t\t\tif (!string) return end;\n\t\t\t\t\t\tconst { options, errors: commentErrors } = this.parseCommentOptions(\n\t\t\t\t\t\t\t[lastTokenEndForComments, end]\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (commentErrors) {\n\t\t\t\t\t\t\tfor (const e of commentErrors) {\n\t\t\t\t\t\t\t\tconst { comment } = e;\n\t\t\t\t\t\t\t\tstate.module.addWarning(\n\t\t\t\t\t\t\t\t\tnew CommentCompilationWarning(\n\t\t\t\t\t\t\t\t\t\t`Compilation error while processing magic comment(-s): /*${comment.value}*/: ${e.message}`,\n\t\t\t\t\t\t\t\t\t\tcomment.loc\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options && options.webpackIgnore !== undefined) {\n\t\t\t\t\t\t\tif (typeof options.webpackIgnore !== \"boolean\") {\n\t\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(string[0]);\n\t\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(string[1]);\n\n\t\t\t\t\t\t\t\tstate.module.addWarning(\n\t\t\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\t\t\t`\\`webpackIgnore\\` expected a boolean, but received: ${options.webpackIgnore}.`,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tstart: { line: sl, column: sc },\n\t\t\t\t\t\t\t\t\t\t\tend: { line: el, column: ec }\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (options.webpackIgnore) {\n\t\t\t\t\t\t\t\treturn end;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst value = normalizeUrl(\n\t\t\t\t\t\t\tinput.slice(string[0] + 1, string[1] - 1),\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t\t// Ignore `url()`, `url('')` and `url(\"\")`, they are valid by spec\n\t\t\t\t\t\tif (value.length === 0) return end;\n\t\t\t\t\t\tconst isUrl = name === \"url\" || name === \"src\";\n\t\t\t\t\t\tconst dep = new CssUrlDependency(\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t[string[0], string[1]],\n\t\t\t\t\t\t\tisUrl ? \"string\" : \"url\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(string[0]);\n\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(string[1]);\n\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\tmodule.addCodeGenerationDependency(dep);\n\t\t\t\t\t\treturn string[1];\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tif (IMAGE_SET_FUNCTION.test(name)) {\n\t\t\t\t\t\t\tlastTokenEndForComments = end;\n\t\t\t\t\t\t\tconst values = walkCssTokens.eatImageSetStrings(input, end, {\n\t\t\t\t\t\t\t\tcomment\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (values.length === 0) return end;\n\t\t\t\t\t\t\tfor (const [index, string] of values.entries()) {\n\t\t\t\t\t\t\t\tconst value = normalizeUrl(\n\t\t\t\t\t\t\t\t\tinput.slice(string[0] + 1, string[1] - 1),\n\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (value.length === 0) return end;\n\t\t\t\t\t\t\t\tconst { options, errors: commentErrors } =\n\t\t\t\t\t\t\t\t\tthis.parseCommentOptions([\n\t\t\t\t\t\t\t\t\t\tindex === 0 ? start : values[index - 1][1],\n\t\t\t\t\t\t\t\t\t\tstring[1]\n\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\tif (commentErrors) {\n\t\t\t\t\t\t\t\t\tfor (const e of commentErrors) {\n\t\t\t\t\t\t\t\t\t\tconst { comment } = e;\n\t\t\t\t\t\t\t\t\t\tstate.module.addWarning(\n\t\t\t\t\t\t\t\t\t\t\tnew CommentCompilationWarning(\n\t\t\t\t\t\t\t\t\t\t\t\t`Compilation error while processing magic comment(-s): /*${comment.value}*/: ${e.message}`,\n\t\t\t\t\t\t\t\t\t\t\t\tcomment.loc\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (options && options.webpackIgnore !== undefined) {\n\t\t\t\t\t\t\t\t\tif (typeof options.webpackIgnore !== \"boolean\") {\n\t\t\t\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(\n\t\t\t\t\t\t\t\t\t\t\tstring[0]\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(\n\t\t\t\t\t\t\t\t\t\t\tstring[1]\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\tstate.module.addWarning(\n\t\t\t\t\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\t\t\t\t\t`\\`webpackIgnore\\` expected a boolean, but received: ${options.webpackIgnore}.`,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tstart: { line: sl, column: sc },\n\t\t\t\t\t\t\t\t\t\t\t\t\tend: { line: el, column: ec }\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else if (options.webpackIgnore) {\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst dep = new CssUrlDependency(\n\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t\t[string[0], string[1]],\n\t\t\t\t\t\t\t\t\t\"url\"\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(string[0]);\n\t\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(string[1]);\n\t\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\t\t\tmodule.addCodeGenerationDependency(dep);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Can contain `url()` inside, so let's return end to allow parse them\n\t\t\t\t\t\t\treturn end;\n\t\t\t\t\t\t} else if (isLocalMode()) {\n\t\t\t\t\t\t\t// Don't rename animation name when we have `var()` function\n\t\t\t\t\t\t\tif (inAnimationProperty && balanced.length === 1) {\n\t\t\t\t\t\t\t\tlastIdentifier = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (name === \"var\") {\n\t\t\t\t\t\t\t\tconst ident = walkCssTokens.eatIdentSequence(input, end);\n\t\t\t\t\t\t\t\tif (!ident) return end;\n\t\t\t\t\t\t\t\tconst name = input.slice(ident[0], ident[1]);\n\t\t\t\t\t\t\t\tif (!name.startsWith(\"--\")) return end;\n\t\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(ident[0]);\n\t\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(ident[1]);\n\t\t\t\t\t\t\t\tconst dep = new CssSelfLocalIdentifierDependency(\n\t\t\t\t\t\t\t\t\tname.slice(2),\n\t\t\t\t\t\t\t\t\t[ident[0], ident[1]],\n\t\t\t\t\t\t\t\t\t\"--\",\n\t\t\t\t\t\t\t\t\tdeclaredCssVariables\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\t\t\treturn ident[1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tleftParenthesis: (input, start, end) => {\n\t\t\t\tbalanced.push([\"(\", start, end]);\n\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\trightParenthesis: (input, start, end) => {\n\t\t\t\tconst popped = balanced.pop();\n\n\t\t\t\tif (\n\t\t\t\t\tisModules &&\n\t\t\t\t\tpopped &&\n\t\t\t\t\t(popped[0] === \":local\" || popped[0] === \":global\")\n\t\t\t\t) {\n\t\t\t\t\tmodeData = balanced[balanced.length - 1]\n\t\t\t\t\t\t? /** @type {\"local\" | \"global\"} */\n\t\t\t\t\t\t\t(balanced[balanced.length - 1][0])\n\t\t\t\t\t\t: undefined;\n\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t}\n\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tcomma: (input, start, end) => {\n\t\t\t\tif (isModules) {\n\t\t\t\t\t// Reset stack for `:global .class :local .class-other` selector after\n\t\t\t\t\tmodeData = undefined;\n\n\t\t\t\t\tif (scope === CSS_MODE_IN_BLOCK && isLocalMode()) {\n\t\t\t\t\t\tprocessDeclarationValueDone(input);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlastTokenEndForComments = start;\n\n\t\t\t\treturn end;\n\t\t\t}\n\t\t});\n\n\t\t/** @type {BuildInfo} */\n\t\t(module.buildInfo).strict = true;\n\t\t/** @type {BuildMeta} */\n\t\t(module.buildMeta).exportsType = this.namedExports\n\t\t\t? \"namespace\"\n\t\t\t: \"default\";\n\n\t\tif (!this.namedExports) {\n\t\t\t/** @type {BuildMeta} */\n\t\t\t(module.buildMeta).defaultObject = \"redirect\";\n\t\t}\n\n\t\tmodule.addDependency(new StaticExportsDependency([], true));\n\t\treturn state;\n\t}\n\n\t/**\n\t * @param {Range} range range\n\t * @returns {Comment[]} comments in the range\n\t */\n\tgetComments(range) {\n\t\tif (!this.comments) return [];\n\t\tconst [rangeStart, rangeEnd] = range;\n\t\t/**\n\t\t * @param {Comment} comment comment\n\t\t * @param {number} needle needle\n\t\t * @returns {number} compared\n\t\t */\n\t\tconst compare = (comment, needle) =>\n\t\t\t/** @type {Range} */ (comment.range)[0] - needle;\n\t\tconst comments = /** @type {Comment[]} */ (this.comments);\n\t\tlet idx = binarySearchBounds.ge(comments, rangeStart, compare);\n\t\t/** @type {Comment[]} */\n\t\tconst commentsInRange = [];\n\t\twhile (\n\t\t\tcomments[idx] &&\n\t\t\t/** @type {Range} */ (comments[idx].range)[1] <= rangeEnd\n\t\t) {\n\t\t\tcommentsInRange.push(comments[idx]);\n\t\t\tidx++;\n\t\t}\n\n\t\treturn commentsInRange;\n\t}\n\n\t/**\n\t * @param {Range} range range of the comment\n\t * @returns {{ options: Record<string, any> | null, errors: (Error & { comment: Comment })[] | null }} result\n\t */\n\tparseCommentOptions(range) {\n\t\tconst comments = this.getComments(range);\n\t\tif (comments.length === 0) {\n\t\t\treturn EMPTY_COMMENT_OPTIONS;\n\t\t}\n\t\t/** @type {Record<string, EXPECTED_ANY> } */\n\t\tconst options = {};\n\t\t/** @type {(Error & { comment: Comment })[]} */\n\t\tconst errors = [];\n\t\tfor (const comment of comments) {\n\t\t\tconst { value } = comment;\n\t\t\tif (value && webpackCommentRegExp.test(value)) {\n\t\t\t\t// try compile only if webpack options comment is present\n\t\t\t\ttry {\n\t\t\t\t\tfor (let [key, val] of Object.entries(\n\t\t\t\t\t\tvm.runInContext(\n\t\t\t\t\t\t\t`(function(){return {${value}};})()`,\n\t\t\t\t\t\t\tthis.magicCommentContext\n\t\t\t\t\t\t)\n\t\t\t\t\t)) {\n\t\t\t\t\t\tif (typeof val === \"object\" && val !== null) {\n\t\t\t\t\t\t\tval =\n\t\t\t\t\t\t\t\tval.constructor.name === \"RegExp\"\n\t\t\t\t\t\t\t\t\t? new RegExp(val)\n\t\t\t\t\t\t\t\t\t: JSON.parse(JSON.stringify(val));\n\t\t\t\t\t\t}\n\t\t\t\t\t\toptions[key] = val;\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconst newErr = new Error(String(/** @type {Error} */ (err).message));\n\t\t\t\t\tnewErr.stack = String(/** @type {Error} */ (err).stack);\n\t\t\t\t\tObject.assign(newErr, { comment });\n\t\t\t\t\terrors.push(/** @type (Error & { comment: Comment }) */ (newErr));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { options, errors };\n\t}\n}\n\nmodule.exports = CssParser;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}