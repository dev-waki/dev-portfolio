{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  SyncWaterfallHook,\n  SyncHook\n} = require(\"tapable\");\nconst {\n  ConcatSource,\n  PrefixSource,\n  ReplaceSource,\n  CachedSource\n} = require(\"webpack-sources\");\nconst Compilation = require(\"../Compilation\");\nconst CssModule = require(\"../CssModule\");\nconst {\n  tryRunOrWebpackError\n} = require(\"../HookWebpackError\");\nconst HotUpdateChunk = require(\"../HotUpdateChunk\");\nconst {\n  CSS_MODULE_TYPE,\n  CSS_MODULE_TYPE_GLOBAL,\n  CSS_MODULE_TYPE_MODULE,\n  CSS_MODULE_TYPE_AUTO\n} = require(\"../ModuleTypeConstants\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst SelfModuleFactory = require(\"../SelfModuleFactory\");\nconst WebpackError = require(\"../WebpackError\");\nconst CssExportDependency = require(\"../dependencies/CssExportDependency\");\nconst CssImportDependency = require(\"../dependencies/CssImportDependency\");\nconst CssLocalIdentifierDependency = require(\"../dependencies/CssLocalIdentifierDependency\");\nconst CssSelfLocalIdentifierDependency = require(\"../dependencies/CssSelfLocalIdentifierDependency\");\nconst CssUrlDependency = require(\"../dependencies/CssUrlDependency\");\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\nconst {\n  compareModulesByIdentifier\n} = require(\"../util/comparators\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst createHash = require(\"../util/createHash\");\nconst {\n  getUndoPath\n} = require(\"../util/identifier\");\nconst memoize = require(\"../util/memoize\");\nconst nonNumericOnlyHash = require(\"../util/nonNumericOnlyHash\");\nconst CssExportsGenerator = require(\"./CssExportsGenerator\");\nconst CssGenerator = require(\"./CssGenerator\");\nconst CssParser = require(\"./CssParser\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../../declarations/WebpackOptions\").OutputNormalized} OutputOptions */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../CodeGenerationResults\")} CodeGenerationResults */\n/** @typedef {import(\"../Compilation\").ChunkHashContext} ChunkHashContext */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../CssModule\").Inheritance} Inheritance */\n/** @typedef {import(\"../DependencyTemplate\").CssExportsData} CssExportsData */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../Template\").RuntimeTemplate} RuntimeTemplate */\n/** @typedef {import(\"../TemplatedPathPlugin\").TemplatePath} TemplatePath */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/createHash\").Algorithm} Algorithm */\n/** @typedef {import(\"../util/memoize\")} Memoize */\n\n/**\n * @typedef {object} RenderContext\n * @property {Chunk} chunk the chunk\n * @property {ChunkGraph} chunkGraph the chunk graph\n * @property {CodeGenerationResults} codeGenerationResults results of code generation\n * @property {RuntimeTemplate} runtimeTemplate the runtime template\n * @property {string} uniqueName the unique name\n * @property {boolean} cssHeadDataCompression need compress\n * @property {string} undoPath undo path to css file\n * @property {CssModule[]} modules modules\n */\n\n/**\n * @typedef {object} ChunkRenderContext\n * @property {Chunk} chunk the chunk\n * @property {ChunkGraph} chunkGraph the chunk graph\n * @property {CodeGenerationResults} codeGenerationResults results of code generation\n * @property {RuntimeTemplate} runtimeTemplate the runtime template\n * @property {string[]} metaData meta data for runtime\n * @property {string} undoPath undo path to css file\n */\n\n/**\n * @typedef {object} CompilationHooks\n * @property {SyncWaterfallHook<[Source, Module, ChunkRenderContext]>} renderModulePackage\n * @property {SyncHook<[Chunk, Hash, ChunkHashContext]>} chunkHash\n */\n\nconst getCssLoadingRuntimeModule = memoize(() => require(\"./CssLoadingRuntimeModule\"));\n\n/**\n * @param {string} name name\n * @returns {{oneOf: [{$ref: string}], definitions: *}} schema\n */\nconst getSchema = name => {\n  const {\n    definitions\n  } = require(\"../../schemas/WebpackOptions.json\");\n  return {\n    definitions,\n    oneOf: [{\n      $ref: `#/definitions/${name}`\n    }]\n  };\n};\nconst generatorValidationOptions = {\n  name: \"Css Modules Plugin\",\n  baseDataPath: \"generator\"\n};\nconst validateGeneratorOptions = {\n  css: createSchemaValidation(require(\"../../schemas/plugins/css/CssGeneratorOptions.check.js\"), () => getSchema(\"CssGeneratorOptions\"), generatorValidationOptions),\n  \"css/auto\": createSchemaValidation(require(\"../../schemas/plugins/css/CssAutoGeneratorOptions.check.js\"), () => getSchema(\"CssAutoGeneratorOptions\"), generatorValidationOptions),\n  \"css/module\": createSchemaValidation(require(\"../../schemas/plugins/css/CssModuleGeneratorOptions.check.js\"), () => getSchema(\"CssModuleGeneratorOptions\"), generatorValidationOptions),\n  \"css/global\": createSchemaValidation(require(\"../../schemas/plugins/css/CssGlobalGeneratorOptions.check.js\"), () => getSchema(\"CssGlobalGeneratorOptions\"), generatorValidationOptions)\n};\nconst parserValidationOptions = {\n  name: \"Css Modules Plugin\",\n  baseDataPath: \"parser\"\n};\nconst validateParserOptions = {\n  css: createSchemaValidation(require(\"../../schemas/plugins/css/CssParserOptions.check.js\"), () => getSchema(\"CssParserOptions\"), parserValidationOptions),\n  \"css/auto\": createSchemaValidation(require(\"../../schemas/plugins/css/CssAutoParserOptions.check.js\"), () => getSchema(\"CssAutoParserOptions\"), parserValidationOptions),\n  \"css/module\": createSchemaValidation(require(\"../../schemas/plugins/css/CssModuleParserOptions.check.js\"), () => getSchema(\"CssModuleParserOptions\"), parserValidationOptions),\n  \"css/global\": createSchemaValidation(require(\"../../schemas/plugins/css/CssGlobalParserOptions.check.js\"), () => getSchema(\"CssGlobalParserOptions\"), parserValidationOptions)\n};\n\n/** @type {WeakMap<Compilation, CompilationHooks>} */\nconst compilationHooksMap = new WeakMap();\n\n/**\n * @param {string} str string\n * @param {boolean=} omitOptionalUnderscore if true, optional underscore is not added\n * @returns {string} escaped string\n */\nconst escapeCss = (str, omitOptionalUnderscore) => {\n  const escaped = `${str}`.replace(\n  // cspell:word uffff\n  /[^a-zA-Z0-9_\\u0081-\\uFFFF-]/g, s => `\\\\${s}`);\n  return !omitOptionalUnderscore && /^(?!--)[0-9_-]/.test(escaped) ? `_${escaped}` : escaped;\n};\n\n/**\n * @param {string} str string\n * @returns {string} encoded string\n */\nconst lzwEncode = str => {\n  /** @type {Map<string, string>} */\n  const map = new Map();\n  let encoded = \"\";\n  let phrase = str[0];\n  let code = 256;\n  const maxCode = \"\\uFFFF\".charCodeAt(0);\n  for (let i = 1; i < str.length; i++) {\n    const c = str[i];\n    if (map.has(phrase + c)) {\n      phrase += c;\n    } else {\n      encoded += phrase.length > 1 ? map.get(phrase) : phrase;\n      map.set(phrase + c, String.fromCharCode(code));\n      phrase = c;\n      if (++code > maxCode) {\n        code = 256;\n        map.clear();\n      }\n    }\n  }\n  encoded += phrase.length > 1 ? map.get(phrase) : phrase;\n  return encoded;\n};\nconst PLUGIN_NAME = \"CssModulesPlugin\";\nclass CssModulesPlugin {\n  /**\n   * @param {Compilation} compilation the compilation\n   * @returns {CompilationHooks} the attached hooks\n   */\n  static getCompilationHooks(compilation) {\n    if (!(compilation instanceof Compilation)) {\n      throw new TypeError(\"The 'compilation' argument must be an instance of Compilation\");\n    }\n    let hooks = compilationHooksMap.get(compilation);\n    if (hooks === undefined) {\n      hooks = {\n        renderModulePackage: new SyncWaterfallHook([\"source\", \"module\", \"renderContext\"]),\n        chunkHash: new SyncHook([\"chunk\", \"hash\", \"context\"])\n      };\n      compilationHooksMap.set(compilation, hooks);\n    }\n    return hooks;\n  }\n  constructor() {\n    /** @type {WeakMap<Source, { undoPath: string, inheritance: Inheritance, source: CachedSource }>} */\n    this._moduleCache = new WeakMap();\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation, {\n      normalModuleFactory\n    }) => {\n      const hooks = CssModulesPlugin.getCompilationHooks(compilation);\n      const selfFactory = new SelfModuleFactory(compilation.moduleGraph);\n      compilation.dependencyFactories.set(CssUrlDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(CssUrlDependency, new CssUrlDependency.Template());\n      compilation.dependencyTemplates.set(CssLocalIdentifierDependency, new CssLocalIdentifierDependency.Template());\n      compilation.dependencyFactories.set(CssSelfLocalIdentifierDependency, selfFactory);\n      compilation.dependencyTemplates.set(CssSelfLocalIdentifierDependency, new CssSelfLocalIdentifierDependency.Template());\n      compilation.dependencyTemplates.set(CssExportDependency, new CssExportDependency.Template());\n      compilation.dependencyFactories.set(CssImportDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(CssImportDependency, new CssImportDependency.Template());\n      compilation.dependencyTemplates.set(StaticExportsDependency, new StaticExportsDependency.Template());\n      for (const type of [CSS_MODULE_TYPE, CSS_MODULE_TYPE_GLOBAL, CSS_MODULE_TYPE_MODULE, CSS_MODULE_TYPE_AUTO]) {\n        normalModuleFactory.hooks.createParser.for(type).tap(PLUGIN_NAME, parserOptions => {\n          validateParserOptions[type](parserOptions);\n          const {\n            namedExports\n          } = parserOptions;\n          switch (type) {\n            case CSS_MODULE_TYPE:\n              return new CssParser({\n                namedExports\n              });\n            case CSS_MODULE_TYPE_GLOBAL:\n              return new CssParser({\n                defaultMode: \"global\",\n                namedExports\n              });\n            case CSS_MODULE_TYPE_MODULE:\n              return new CssParser({\n                defaultMode: \"local\",\n                namedExports\n              });\n            case CSS_MODULE_TYPE_AUTO:\n              return new CssParser({\n                defaultMode: \"auto\",\n                namedExports\n              });\n          }\n        });\n        normalModuleFactory.hooks.createGenerator.for(type).tap(PLUGIN_NAME, generatorOptions => {\n          validateGeneratorOptions[type](generatorOptions);\n          return generatorOptions.exportsOnly ? new CssExportsGenerator(generatorOptions.exportsConvention, generatorOptions.localIdentName, generatorOptions.esModule) : new CssGenerator(generatorOptions.exportsConvention, generatorOptions.localIdentName, generatorOptions.esModule);\n        });\n        normalModuleFactory.hooks.createModuleClass.for(type).tap(PLUGIN_NAME, (createData, resolveData) => {\n          if (resolveData.dependencies.length > 0) {\n            // When CSS is imported from CSS there is only one dependency\n            const dependency = resolveData.dependencies[0];\n            if (dependency instanceof CssImportDependency) {\n              const parent = /** @type {CssModule} */\n              compilation.moduleGraph.getParentModule(dependency);\n              if (parent instanceof CssModule) {\n                /** @type {import(\"../CssModule\").Inheritance | undefined} */\n                let inheritance;\n                if (parent.cssLayer !== undefined || parent.supports || parent.media) {\n                  if (!inheritance) {\n                    inheritance = [];\n                  }\n                  inheritance.push([parent.cssLayer, parent.supports, parent.media]);\n                }\n                if (parent.inheritance) {\n                  if (!inheritance) {\n                    inheritance = [];\n                  }\n                  inheritance.push(...parent.inheritance);\n                }\n                return new CssModule({\n                  ...createData,\n                  cssLayer: dependency.layer,\n                  supports: dependency.supports,\n                  media: dependency.media,\n                  inheritance\n                });\n              }\n              return new CssModule({\n                ...createData,\n                cssLayer: dependency.layer,\n                supports: dependency.supports,\n                media: dependency.media\n              });\n            }\n          }\n          return new CssModule(createData);\n        });\n      }\n      const orderedCssModulesPerChunk = new WeakMap();\n      compilation.hooks.afterCodeGeneration.tap(\"CssModulesPlugin\", () => {\n        const {\n          chunkGraph\n        } = compilation;\n        for (const chunk of compilation.chunks) {\n          if (CssModulesPlugin.chunkHasCss(chunk, chunkGraph)) {\n            orderedCssModulesPerChunk.set(chunk, this.getOrderedChunkCssModules(chunk, chunkGraph, compilation));\n          }\n        }\n      });\n      compilation.hooks.chunkHash.tap(\"CssModulesPlugin\", (chunk, hash, context) => {\n        hooks.chunkHash.call(chunk, hash, context);\n      });\n      compilation.hooks.contentHash.tap(\"CssModulesPlugin\", chunk => {\n        const {\n          chunkGraph,\n          codeGenerationResults,\n          moduleGraph,\n          runtimeTemplate,\n          outputOptions: {\n            hashSalt,\n            hashDigest,\n            hashDigestLength,\n            hashFunction\n          }\n        } = compilation;\n        const hash = createHash(/** @type {Algorithm} */hashFunction);\n        if (hashSalt) hash.update(hashSalt);\n        hooks.chunkHash.call(chunk, hash, {\n          chunkGraph,\n          codeGenerationResults,\n          moduleGraph,\n          runtimeTemplate\n        });\n        const modules = orderedCssModulesPerChunk.get(chunk);\n        if (modules) {\n          for (const module of modules) {\n            hash.update(chunkGraph.getModuleHash(module, chunk.runtime));\n          }\n        }\n        const digest = /** @type {string} */hash.digest(hashDigest);\n        chunk.contentHash.css = nonNumericOnlyHash(digest, /** @type {number} */\n        hashDigestLength);\n      });\n      compilation.hooks.renderManifest.tap(PLUGIN_NAME, (result, options) => {\n        const {\n          chunkGraph\n        } = compilation;\n        const {\n          hash,\n          chunk,\n          codeGenerationResults,\n          runtimeTemplate\n        } = options;\n        if (chunk instanceof HotUpdateChunk) return result;\n\n        /** @type {CssModule[] | undefined} */\n        const modules = orderedCssModulesPerChunk.get(chunk);\n        if (modules !== undefined) {\n          const {\n            path: filename,\n            info\n          } = compilation.getPathWithInfo(CssModulesPlugin.getChunkFilenameTemplate(chunk, compilation.outputOptions), {\n            hash,\n            runtime: chunk.runtime,\n            chunk,\n            contentHashType: \"css\"\n          });\n          const undoPath = getUndoPath(filename, /** @type {string} */\n          compilation.outputOptions.path, false);\n          result.push({\n            render: () => this.renderChunk({\n              chunk,\n              chunkGraph,\n              codeGenerationResults,\n              uniqueName: compilation.outputOptions.uniqueName,\n              cssHeadDataCompression: compilation.outputOptions.cssHeadDataCompression,\n              undoPath,\n              modules,\n              runtimeTemplate\n            }, hooks),\n            filename,\n            info,\n            identifier: `css${chunk.id}`,\n            hash: chunk.contentHash.css\n          });\n        }\n        return result;\n      });\n      const globalChunkLoading = compilation.outputOptions.chunkLoading;\n      /**\n       * @param {Chunk} chunk the chunk\n       * @returns {boolean} true, when enabled\n       */\n      const isEnabledForChunk = chunk => {\n        const options = chunk.getEntryOptions();\n        const chunkLoading = options && options.chunkLoading !== undefined ? options.chunkLoading : globalChunkLoading;\n        return chunkLoading === \"jsonp\" || chunkLoading === \"import\";\n      };\n      const onceForChunkSet = new WeakSet();\n      /**\n       * @param {Chunk} chunk chunk to check\n       * @param {Set<string>} set runtime requirements\n       */\n      const handler = (chunk, set) => {\n        if (onceForChunkSet.has(chunk)) return;\n        onceForChunkSet.add(chunk);\n        if (!isEnabledForChunk(chunk)) return;\n        set.add(RuntimeGlobals.moduleFactoriesAddOnly);\n        set.add(RuntimeGlobals.makeNamespaceObject);\n        const CssLoadingRuntimeModule = getCssLoadingRuntimeModule();\n        compilation.addRuntimeModule(chunk, new CssLoadingRuntimeModule(set));\n      };\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.hasCssModules).tap(PLUGIN_NAME, handler);\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.ensureChunkHandlers).tap(PLUGIN_NAME, (chunk, set, {\n        chunkGraph\n      }) => {\n        if (!isEnabledForChunk(chunk)) return;\n        if (!chunkGraph.hasModuleInGraph(chunk, m => m.type === CSS_MODULE_TYPE || m.type === CSS_MODULE_TYPE_GLOBAL || m.type === CSS_MODULE_TYPE_MODULE || m.type === CSS_MODULE_TYPE_AUTO)) {\n          return;\n        }\n        set.add(RuntimeGlobals.hasOwnProperty);\n        set.add(RuntimeGlobals.publicPath);\n        set.add(RuntimeGlobals.getChunkCssFilename);\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.hmrDownloadUpdateHandlers).tap(PLUGIN_NAME, (chunk, set, {\n        chunkGraph\n      }) => {\n        if (!isEnabledForChunk(chunk)) return;\n        if (!chunkGraph.hasModuleInGraph(chunk, m => m.type === CSS_MODULE_TYPE || m.type === CSS_MODULE_TYPE_GLOBAL || m.type === CSS_MODULE_TYPE_MODULE || m.type === CSS_MODULE_TYPE_AUTO)) {\n          return;\n        }\n        set.add(RuntimeGlobals.publicPath);\n        set.add(RuntimeGlobals.getChunkCssFilename);\n        set.add(RuntimeGlobals.moduleFactoriesAddOnly);\n      });\n    });\n  }\n\n  /**\n   * @param {Chunk} chunk chunk\n   * @param {Iterable<Module>} modules unordered modules\n   * @param {Compilation} compilation compilation\n   * @returns {Module[]} ordered modules\n   */\n  getModulesInOrder(chunk, modules, compilation) {\n    if (!modules) return [];\n\n    /** @type {Module[]} */\n    const modulesList = [...modules];\n\n    // Get ordered list of modules per chunk group\n    // Lists are in reverse order to allow to use Array.pop()\n    const modulesByChunkGroup = Array.from(chunk.groupsIterable, chunkGroup => {\n      const sortedModules = modulesList.map(module => ({\n        module,\n        index: chunkGroup.getModulePostOrderIndex(module)\n      })).filter(item => item.index !== undefined).sort((a, b) => /** @type {number} */b.index - (/** @type {number} */a.index)).map(item => item.module);\n      return {\n        list: sortedModules,\n        set: new Set(sortedModules)\n      };\n    });\n    if (modulesByChunkGroup.length === 1) return modulesByChunkGroup[0].list.reverse();\n\n    /**\n     * @param {{ list: Module[] }} a a\n     * @param {{ list: Module[] }} b b\n     * @returns {-1 | 0 | 1} result\n     */\n    const compareModuleLists = ({\n      list: a\n    }, {\n      list: b\n    }) => {\n      if (a.length === 0) {\n        return b.length === 0 ? 0 : 1;\n      }\n      if (b.length === 0) return -1;\n      return compareModulesByIdentifier(a[a.length - 1], b[b.length - 1]);\n    };\n    modulesByChunkGroup.sort(compareModuleLists);\n\n    /** @type {Module[]} */\n    const finalModules = [];\n    for (;;) {\n      const failedModules = new Set();\n      const list = modulesByChunkGroup[0].list;\n      if (list.length === 0) {\n        // done, everything empty\n        break;\n      }\n      /** @type {Module} */\n      let selectedModule = list[list.length - 1];\n      let hasFailed;\n      outer: for (;;) {\n        for (const {\n          list,\n          set\n        } of modulesByChunkGroup) {\n          if (list.length === 0) continue;\n          const lastModule = list[list.length - 1];\n          if (lastModule === selectedModule) continue;\n          if (!set.has(selectedModule)) continue;\n          failedModules.add(selectedModule);\n          if (failedModules.has(lastModule)) {\n            // There is a conflict, try other alternatives\n            hasFailed = lastModule;\n            continue;\n          }\n          selectedModule = lastModule;\n          hasFailed = false;\n          continue outer; // restart\n        }\n        break;\n      }\n      if (hasFailed) {\n        // There is a not resolve-able conflict with the selectedModule\n        // TODO print better warning\n        compilation.warnings.push(new WebpackError(`chunk ${chunk.name || chunk.id}\\nConflicting order between ${/** @type {Module} */\n        hasFailed.readableIdentifier(compilation.requestShortener)} and ${selectedModule.readableIdentifier(compilation.requestShortener)}`));\n        selectedModule = /** @type {Module} */hasFailed;\n      }\n      // Insert the selected module into the final modules list\n      finalModules.push(selectedModule);\n      // Remove the selected module from all lists\n      for (const {\n        list,\n        set\n      } of modulesByChunkGroup) {\n        const lastModule = list[list.length - 1];\n        if (lastModule === selectedModule) list.pop();else if (hasFailed && set.has(selectedModule)) {\n          const idx = list.indexOf(selectedModule);\n          if (idx >= 0) list.splice(idx, 1);\n        }\n      }\n      modulesByChunkGroup.sort(compareModuleLists);\n    }\n    return finalModules;\n  }\n\n  /**\n   * @param {Chunk} chunk chunk\n   * @param {ChunkGraph} chunkGraph chunk graph\n   * @param {Compilation} compilation compilation\n   * @returns {Module[]} ordered css modules\n   */\n  getOrderedChunkCssModules(chunk, chunkGraph, compilation) {\n    return [...this.getModulesInOrder(chunk, /** @type {Iterable<Module>} */\n\n    chunkGraph.getOrderedChunkModulesIterableBySourceType(chunk, \"css-import\", compareModulesByIdentifier), compilation), ...this.getModulesInOrder(chunk, /** @type {Iterable<Module>} */\n\n    chunkGraph.getOrderedChunkModulesIterableBySourceType(chunk, \"css\", compareModulesByIdentifier), compilation)];\n  }\n\n  /**\n   * @param {CssModule}  module css module\n   * @param {ChunkRenderContext} renderContext options object\n   * @param {CompilationHooks} hooks hooks\n   * @returns {Source} css module source\n   */\n  renderModule(module, renderContext, hooks) {\n    const {\n      codeGenerationResults,\n      chunk,\n      undoPath,\n      chunkGraph,\n      metaData\n    } = renderContext;\n    const codeGenResult = codeGenerationResults.get(module, chunk.runtime);\n    const moduleSourceContent = /** @type {Source} */\n\n    codeGenResult.sources.get(\"css\") || codeGenResult.sources.get(\"css-import\");\n    const cacheEntry = this._moduleCache.get(moduleSourceContent);\n\n    /** @type {Inheritance} */\n    const inheritance = [[module.cssLayer, module.supports, module.media]];\n    if (module.inheritance) {\n      inheritance.push(...module.inheritance);\n    }\n    let source;\n    if (cacheEntry && cacheEntry.undoPath === undoPath && cacheEntry.inheritance.every(([layer, supports, media], i) => {\n      const item = inheritance[i];\n      if (Array.isArray(item)) {\n        return layer === item[0] && supports === item[1] && media === item[2];\n      }\n      return false;\n    })) {\n      source = cacheEntry.source;\n    } else {\n      const moduleSourceCode = /** @type {string} */\n      moduleSourceContent.source();\n      const publicPathAutoRegex = new RegExp(CssUrlDependency.PUBLIC_PATH_AUTO, \"g\");\n      /** @type {Source} */\n      let moduleSource = new ReplaceSource(moduleSourceContent);\n      let match;\n      while (match = publicPathAutoRegex.exec(moduleSourceCode)) {\n        /** @type {ReplaceSource} */moduleSource.replace(match.index, match.index += match[0].length - 1, undoPath);\n      }\n      for (let i = 0; i < inheritance.length; i++) {\n        const layer = inheritance[i][0];\n        const supports = inheritance[i][1];\n        const media = inheritance[i][2];\n        if (media) {\n          moduleSource = new ConcatSource(`@media ${media} {\\n`, new PrefixSource(\"\\t\", moduleSource), \"}\\n\");\n        }\n        if (supports) {\n          moduleSource = new ConcatSource(`@supports (${supports}) {\\n`, new PrefixSource(\"\\t\", moduleSource), \"}\\n\");\n        }\n\n        // Layer can be anonymous\n        if (layer !== undefined && layer !== null) {\n          moduleSource = new ConcatSource(`@layer${layer ? ` ${layer}` : \"\"} {\\n`, new PrefixSource(\"\\t\", moduleSource), \"}\\n\");\n        }\n      }\n      if (moduleSource) {\n        moduleSource = new ConcatSource(moduleSource, \"\\n\");\n      }\n      source = new CachedSource(moduleSource);\n      this._moduleCache.set(moduleSourceContent, {\n        inheritance,\n        undoPath,\n        source\n      });\n    }\n    /** @type {CssExportsData | undefined} */\n    const cssExportsData = codeGenResult.data && codeGenResult.data.get(\"css-exports\");\n    const exports = cssExportsData && cssExportsData.exports;\n    const esModule = cssExportsData && cssExportsData.esModule;\n    let moduleId = String(chunkGraph.getModuleId(module));\n\n    // When `optimization.moduleIds` is `named` the module id is a path, so we need to normalize it between platforms\n    if (typeof moduleId === \"string\") {\n      moduleId = moduleId.replace(/\\\\/g, \"/\");\n    }\n    metaData.push(`${exports ? Array.from(exports, ([n, v]) => `${escapeCss(n)}:${escapeCss(v)}/`).join(\"\") : \"\"}${esModule ? \"&\" : \"\"}${escapeCss(moduleId)}`);\n    return tryRunOrWebpackError(() => hooks.renderModulePackage.call(source, module, renderContext), \"CssModulesPlugin.getCompilationHooks().renderModulePackage\");\n  }\n\n  /**\n   * @param {RenderContext} renderContext the render context\n   * @param {CompilationHooks} hooks hooks\n   * @returns {Source} generated source\n   */\n  renderChunk({\n    uniqueName,\n    cssHeadDataCompression,\n    undoPath,\n    chunk,\n    chunkGraph,\n    codeGenerationResults,\n    modules,\n    runtimeTemplate\n  }, hooks) {\n    const source = new ConcatSource();\n    /** @type {string[]} */\n    const metaData = [];\n    for (const module of modules) {\n      try {\n        const moduleSource = this.renderModule(module, {\n          metaData,\n          undoPath,\n          chunk,\n          chunkGraph,\n          codeGenerationResults,\n          runtimeTemplate\n        }, hooks);\n        source.add(moduleSource);\n      } catch (err) {\n        /** @type {Error} */\n        err.message += `\\nduring rendering of css ${module.identifier()}`;\n        throw err;\n      }\n    }\n    const metaDataStr = metaData.join(\",\");\n    source.add(`head{--webpack-${escapeCss((uniqueName ? `${uniqueName}-` : \"\") + chunk.id, true)}:${cssHeadDataCompression ? lzwEncode(metaDataStr) : metaDataStr};}`);\n    chunk.rendered = true;\n    return source;\n  }\n\n  /**\n   * @param {Chunk} chunk chunk\n   * @param {OutputOptions} outputOptions output options\n   * @returns {TemplatePath} used filename template\n   */\n  static getChunkFilenameTemplate(chunk, outputOptions) {\n    if (chunk.cssFilenameTemplate) {\n      return chunk.cssFilenameTemplate;\n    } else if (chunk.canBeInitial()) {\n      return /** @type {TemplatePath} */outputOptions.cssFilename;\n    }\n    return /** @type {TemplatePath} */outputOptions.cssChunkFilename;\n  }\n\n  /**\n   * @param {Chunk} chunk chunk\n   * @param {ChunkGraph} chunkGraph chunk graph\n   * @returns {boolean} true, when the chunk has css\n   */\n  static chunkHasCss(chunk, chunkGraph) {\n    return Boolean(chunkGraph.getChunkModulesIterableBySourceType(chunk, \"css\")) || Boolean(chunkGraph.getChunkModulesIterableBySourceType(chunk, \"css-import\"));\n  }\n}\nmodule.exports = CssModulesPlugin;","map":{"version":3,"names":["SyncWaterfallHook","SyncHook","require","ConcatSource","PrefixSource","ReplaceSource","CachedSource","Compilation","CssModule","tryRunOrWebpackError","HotUpdateChunk","CSS_MODULE_TYPE","CSS_MODULE_TYPE_GLOBAL","CSS_MODULE_TYPE_MODULE","CSS_MODULE_TYPE_AUTO","RuntimeGlobals","SelfModuleFactory","WebpackError","CssExportDependency","CssImportDependency","CssLocalIdentifierDependency","CssSelfLocalIdentifierDependency","CssUrlDependency","StaticExportsDependency","compareModulesByIdentifier","createSchemaValidation","createHash","getUndoPath","memoize","nonNumericOnlyHash","CssExportsGenerator","CssGenerator","CssParser","getCssLoadingRuntimeModule","getSchema","name","definitions","oneOf","$ref","generatorValidationOptions","baseDataPath","validateGeneratorOptions","css","parserValidationOptions","validateParserOptions","compilationHooksMap","WeakMap","escapeCss","str","omitOptionalUnderscore","escaped","replace","s","test","lzwEncode","map","Map","encoded","phrase","code","maxCode","charCodeAt","i","length","c","has","get","set","String","fromCharCode","clear","PLUGIN_NAME","CssModulesPlugin","getCompilationHooks","compilation","TypeError","hooks","undefined","renderModulePackage","chunkHash","constructor","_moduleCache","apply","compiler","tap","normalModuleFactory","selfFactory","moduleGraph","dependencyFactories","dependencyTemplates","Template","type","createParser","for","parserOptions","namedExports","defaultMode","createGenerator","generatorOptions","exportsOnly","exportsConvention","localIdentName","esModule","createModuleClass","createData","resolveData","dependencies","dependency","parent","getParentModule","inheritance","cssLayer","supports","media","push","layer","orderedCssModulesPerChunk","afterCodeGeneration","chunkGraph","chunk","chunks","chunkHasCss","getOrderedChunkCssModules","hash","context","call","contentHash","codeGenerationResults","runtimeTemplate","outputOptions","hashSalt","hashDigest","hashDigestLength","hashFunction","update","modules","module","getModuleHash","runtime","digest","renderManifest","result","options","path","filename","info","getPathWithInfo","getChunkFilenameTemplate","contentHashType","undoPath","render","renderChunk","uniqueName","cssHeadDataCompression","identifier","id","globalChunkLoading","chunkLoading","isEnabledForChunk","getEntryOptions","onceForChunkSet","WeakSet","handler","add","moduleFactoriesAddOnly","makeNamespaceObject","CssLoadingRuntimeModule","addRuntimeModule","runtimeRequirementInTree","hasCssModules","ensureChunkHandlers","hasModuleInGraph","m","hasOwnProperty","publicPath","getChunkCssFilename","hmrDownloadUpdateHandlers","getModulesInOrder","modulesList","modulesByChunkGroup","Array","from","groupsIterable","chunkGroup","sortedModules","index","getModulePostOrderIndex","filter","item","sort","a","b","list","Set","reverse","compareModuleLists","finalModules","failedModules","selectedModule","hasFailed","outer","lastModule","warnings","readableIdentifier","requestShortener","pop","idx","indexOf","splice","getOrderedChunkModulesIterableBySourceType","renderModule","renderContext","metaData","codeGenResult","moduleSourceContent","sources","cacheEntry","source","every","isArray","moduleSourceCode","publicPathAutoRegex","RegExp","PUBLIC_PATH_AUTO","moduleSource","match","exec","cssExportsData","data","exports","moduleId","getModuleId","n","v","join","err","message","metaDataStr","rendered","cssFilenameTemplate","canBeInitial","cssFilename","cssChunkFilename","Boolean","getChunkModulesIterableBySourceType"],"sources":["/home/wickliff/Desktop/dev-waki/portfolio2/node_modules/webpack/lib/css/CssModulesPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { SyncWaterfallHook, SyncHook } = require(\"tapable\");\nconst {\n\tConcatSource,\n\tPrefixSource,\n\tReplaceSource,\n\tCachedSource\n} = require(\"webpack-sources\");\nconst Compilation = require(\"../Compilation\");\nconst CssModule = require(\"../CssModule\");\nconst { tryRunOrWebpackError } = require(\"../HookWebpackError\");\nconst HotUpdateChunk = require(\"../HotUpdateChunk\");\nconst {\n\tCSS_MODULE_TYPE,\n\tCSS_MODULE_TYPE_GLOBAL,\n\tCSS_MODULE_TYPE_MODULE,\n\tCSS_MODULE_TYPE_AUTO\n} = require(\"../ModuleTypeConstants\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst SelfModuleFactory = require(\"../SelfModuleFactory\");\nconst WebpackError = require(\"../WebpackError\");\nconst CssExportDependency = require(\"../dependencies/CssExportDependency\");\nconst CssImportDependency = require(\"../dependencies/CssImportDependency\");\nconst CssLocalIdentifierDependency = require(\"../dependencies/CssLocalIdentifierDependency\");\nconst CssSelfLocalIdentifierDependency = require(\"../dependencies/CssSelfLocalIdentifierDependency\");\nconst CssUrlDependency = require(\"../dependencies/CssUrlDependency\");\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\nconst { compareModulesByIdentifier } = require(\"../util/comparators\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst createHash = require(\"../util/createHash\");\nconst { getUndoPath } = require(\"../util/identifier\");\nconst memoize = require(\"../util/memoize\");\nconst nonNumericOnlyHash = require(\"../util/nonNumericOnlyHash\");\nconst CssExportsGenerator = require(\"./CssExportsGenerator\");\nconst CssGenerator = require(\"./CssGenerator\");\nconst CssParser = require(\"./CssParser\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../../declarations/WebpackOptions\").OutputNormalized} OutputOptions */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../CodeGenerationResults\")} CodeGenerationResults */\n/** @typedef {import(\"../Compilation\").ChunkHashContext} ChunkHashContext */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../CssModule\").Inheritance} Inheritance */\n/** @typedef {import(\"../DependencyTemplate\").CssExportsData} CssExportsData */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../Template\").RuntimeTemplate} RuntimeTemplate */\n/** @typedef {import(\"../TemplatedPathPlugin\").TemplatePath} TemplatePath */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/createHash\").Algorithm} Algorithm */\n/** @typedef {import(\"../util/memoize\")} Memoize */\n\n/**\n * @typedef {object} RenderContext\n * @property {Chunk} chunk the chunk\n * @property {ChunkGraph} chunkGraph the chunk graph\n * @property {CodeGenerationResults} codeGenerationResults results of code generation\n * @property {RuntimeTemplate} runtimeTemplate the runtime template\n * @property {string} uniqueName the unique name\n * @property {boolean} cssHeadDataCompression need compress\n * @property {string} undoPath undo path to css file\n * @property {CssModule[]} modules modules\n */\n\n/**\n * @typedef {object} ChunkRenderContext\n * @property {Chunk} chunk the chunk\n * @property {ChunkGraph} chunkGraph the chunk graph\n * @property {CodeGenerationResults} codeGenerationResults results of code generation\n * @property {RuntimeTemplate} runtimeTemplate the runtime template\n * @property {string[]} metaData meta data for runtime\n * @property {string} undoPath undo path to css file\n */\n\n/**\n * @typedef {object} CompilationHooks\n * @property {SyncWaterfallHook<[Source, Module, ChunkRenderContext]>} renderModulePackage\n * @property {SyncHook<[Chunk, Hash, ChunkHashContext]>} chunkHash\n */\n\nconst getCssLoadingRuntimeModule = memoize(() =>\n\trequire(\"./CssLoadingRuntimeModule\")\n);\n\n/**\n * @param {string} name name\n * @returns {{oneOf: [{$ref: string}], definitions: *}} schema\n */\nconst getSchema = name => {\n\tconst { definitions } = require(\"../../schemas/WebpackOptions.json\");\n\treturn {\n\t\tdefinitions,\n\t\toneOf: [{ $ref: `#/definitions/${name}` }]\n\t};\n};\n\nconst generatorValidationOptions = {\n\tname: \"Css Modules Plugin\",\n\tbaseDataPath: \"generator\"\n};\nconst validateGeneratorOptions = {\n\tcss: createSchemaValidation(\n\t\trequire(\"../../schemas/plugins/css/CssGeneratorOptions.check.js\"),\n\t\t() => getSchema(\"CssGeneratorOptions\"),\n\t\tgeneratorValidationOptions\n\t),\n\t\"css/auto\": createSchemaValidation(\n\t\trequire(\"../../schemas/plugins/css/CssAutoGeneratorOptions.check.js\"),\n\t\t() => getSchema(\"CssAutoGeneratorOptions\"),\n\t\tgeneratorValidationOptions\n\t),\n\t\"css/module\": createSchemaValidation(\n\t\trequire(\"../../schemas/plugins/css/CssModuleGeneratorOptions.check.js\"),\n\t\t() => getSchema(\"CssModuleGeneratorOptions\"),\n\t\tgeneratorValidationOptions\n\t),\n\t\"css/global\": createSchemaValidation(\n\t\trequire(\"../../schemas/plugins/css/CssGlobalGeneratorOptions.check.js\"),\n\t\t() => getSchema(\"CssGlobalGeneratorOptions\"),\n\t\tgeneratorValidationOptions\n\t)\n};\n\nconst parserValidationOptions = {\n\tname: \"Css Modules Plugin\",\n\tbaseDataPath: \"parser\"\n};\nconst validateParserOptions = {\n\tcss: createSchemaValidation(\n\t\trequire(\"../../schemas/plugins/css/CssParserOptions.check.js\"),\n\t\t() => getSchema(\"CssParserOptions\"),\n\t\tparserValidationOptions\n\t),\n\t\"css/auto\": createSchemaValidation(\n\t\trequire(\"../../schemas/plugins/css/CssAutoParserOptions.check.js\"),\n\t\t() => getSchema(\"CssAutoParserOptions\"),\n\t\tparserValidationOptions\n\t),\n\t\"css/module\": createSchemaValidation(\n\t\trequire(\"../../schemas/plugins/css/CssModuleParserOptions.check.js\"),\n\t\t() => getSchema(\"CssModuleParserOptions\"),\n\t\tparserValidationOptions\n\t),\n\t\"css/global\": createSchemaValidation(\n\t\trequire(\"../../schemas/plugins/css/CssGlobalParserOptions.check.js\"),\n\t\t() => getSchema(\"CssGlobalParserOptions\"),\n\t\tparserValidationOptions\n\t)\n};\n\n/** @type {WeakMap<Compilation, CompilationHooks>} */\nconst compilationHooksMap = new WeakMap();\n\n/**\n * @param {string} str string\n * @param {boolean=} omitOptionalUnderscore if true, optional underscore is not added\n * @returns {string} escaped string\n */\nconst escapeCss = (str, omitOptionalUnderscore) => {\n\tconst escaped = `${str}`.replace(\n\t\t// cspell:word uffff\n\t\t/[^a-zA-Z0-9_\\u0081-\\uFFFF-]/g,\n\t\ts => `\\\\${s}`\n\t);\n\treturn !omitOptionalUnderscore && /^(?!--)[0-9_-]/.test(escaped)\n\t\t? `_${escaped}`\n\t\t: escaped;\n};\n\n/**\n * @param {string} str string\n * @returns {string} encoded string\n */\nconst lzwEncode = str => {\n\t/** @type {Map<string, string>} */\n\tconst map = new Map();\n\tlet encoded = \"\";\n\tlet phrase = str[0];\n\tlet code = 256;\n\tconst maxCode = \"\\uFFFF\".charCodeAt(0);\n\tfor (let i = 1; i < str.length; i++) {\n\t\tconst c = str[i];\n\t\tif (map.has(phrase + c)) {\n\t\t\tphrase += c;\n\t\t} else {\n\t\t\tencoded += phrase.length > 1 ? map.get(phrase) : phrase;\n\t\t\tmap.set(phrase + c, String.fromCharCode(code));\n\t\t\tphrase = c;\n\t\t\tif (++code > maxCode) {\n\t\t\t\tcode = 256;\n\t\t\t\tmap.clear();\n\t\t\t}\n\t\t}\n\t}\n\tencoded += phrase.length > 1 ? map.get(phrase) : phrase;\n\treturn encoded;\n};\n\nconst PLUGIN_NAME = \"CssModulesPlugin\";\n\nclass CssModulesPlugin {\n\t/**\n\t * @param {Compilation} compilation the compilation\n\t * @returns {CompilationHooks} the attached hooks\n\t */\n\tstatic getCompilationHooks(compilation) {\n\t\tif (!(compilation instanceof Compilation)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t\"The 'compilation' argument must be an instance of Compilation\"\n\t\t\t);\n\t\t}\n\t\tlet hooks = compilationHooksMap.get(compilation);\n\t\tif (hooks === undefined) {\n\t\t\thooks = {\n\t\t\t\trenderModulePackage: new SyncWaterfallHook([\n\t\t\t\t\t\"source\",\n\t\t\t\t\t\"module\",\n\t\t\t\t\t\"renderContext\"\n\t\t\t\t]),\n\t\t\t\tchunkHash: new SyncHook([\"chunk\", \"hash\", \"context\"])\n\t\t\t};\n\t\t\tcompilationHooksMap.set(compilation, hooks);\n\t\t}\n\t\treturn hooks;\n\t}\n\n\tconstructor() {\n\t\t/** @type {WeakMap<Source, { undoPath: string, inheritance: Inheritance, source: CachedSource }>} */\n\t\tthis._moduleCache = new WeakMap();\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\tPLUGIN_NAME,\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst hooks = CssModulesPlugin.getCompilationHooks(compilation);\n\t\t\t\tconst selfFactory = new SelfModuleFactory(compilation.moduleGraph);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tCssUrlDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tCssUrlDependency,\n\t\t\t\t\tnew CssUrlDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tCssLocalIdentifierDependency,\n\t\t\t\t\tnew CssLocalIdentifierDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tCssSelfLocalIdentifierDependency,\n\t\t\t\t\tselfFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tCssSelfLocalIdentifierDependency,\n\t\t\t\t\tnew CssSelfLocalIdentifierDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tCssExportDependency,\n\t\t\t\t\tnew CssExportDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tCssImportDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tCssImportDependency,\n\t\t\t\t\tnew CssImportDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tStaticExportsDependency,\n\t\t\t\t\tnew StaticExportsDependency.Template()\n\t\t\t\t);\n\t\t\t\tfor (const type of [\n\t\t\t\t\tCSS_MODULE_TYPE,\n\t\t\t\t\tCSS_MODULE_TYPE_GLOBAL,\n\t\t\t\t\tCSS_MODULE_TYPE_MODULE,\n\t\t\t\t\tCSS_MODULE_TYPE_AUTO\n\t\t\t\t]) {\n\t\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t\t.for(type)\n\t\t\t\t\t\t.tap(PLUGIN_NAME, parserOptions => {\n\t\t\t\t\t\t\tvalidateParserOptions[type](parserOptions);\n\t\t\t\t\t\t\tconst { namedExports } = parserOptions;\n\n\t\t\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\t\t\tcase CSS_MODULE_TYPE:\n\t\t\t\t\t\t\t\t\treturn new CssParser({\n\t\t\t\t\t\t\t\t\t\tnamedExports\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tcase CSS_MODULE_TYPE_GLOBAL:\n\t\t\t\t\t\t\t\t\treturn new CssParser({\n\t\t\t\t\t\t\t\t\t\tdefaultMode: \"global\",\n\t\t\t\t\t\t\t\t\t\tnamedExports\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tcase CSS_MODULE_TYPE_MODULE:\n\t\t\t\t\t\t\t\t\treturn new CssParser({\n\t\t\t\t\t\t\t\t\t\tdefaultMode: \"local\",\n\t\t\t\t\t\t\t\t\t\tnamedExports\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tcase CSS_MODULE_TYPE_AUTO:\n\t\t\t\t\t\t\t\t\treturn new CssParser({\n\t\t\t\t\t\t\t\t\t\tdefaultMode: \"auto\",\n\t\t\t\t\t\t\t\t\t\tnamedExports\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t\t.for(type)\n\t\t\t\t\t\t.tap(PLUGIN_NAME, generatorOptions => {\n\t\t\t\t\t\t\tvalidateGeneratorOptions[type](generatorOptions);\n\n\t\t\t\t\t\t\treturn generatorOptions.exportsOnly\n\t\t\t\t\t\t\t\t? new CssExportsGenerator(\n\t\t\t\t\t\t\t\t\t\tgeneratorOptions.exportsConvention,\n\t\t\t\t\t\t\t\t\t\tgeneratorOptions.localIdentName,\n\t\t\t\t\t\t\t\t\t\tgeneratorOptions.esModule\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: new CssGenerator(\n\t\t\t\t\t\t\t\t\t\tgeneratorOptions.exportsConvention,\n\t\t\t\t\t\t\t\t\t\tgeneratorOptions.localIdentName,\n\t\t\t\t\t\t\t\t\t\tgeneratorOptions.esModule\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\tnormalModuleFactory.hooks.createModuleClass\n\t\t\t\t\t\t.for(type)\n\t\t\t\t\t\t.tap(PLUGIN_NAME, (createData, resolveData) => {\n\t\t\t\t\t\t\tif (resolveData.dependencies.length > 0) {\n\t\t\t\t\t\t\t\t// When CSS is imported from CSS there is only one dependency\n\t\t\t\t\t\t\t\tconst dependency = resolveData.dependencies[0];\n\n\t\t\t\t\t\t\t\tif (dependency instanceof CssImportDependency) {\n\t\t\t\t\t\t\t\t\tconst parent =\n\t\t\t\t\t\t\t\t\t\t/** @type {CssModule} */\n\t\t\t\t\t\t\t\t\t\t(compilation.moduleGraph.getParentModule(dependency));\n\n\t\t\t\t\t\t\t\t\tif (parent instanceof CssModule) {\n\t\t\t\t\t\t\t\t\t\t/** @type {import(\"../CssModule\").Inheritance | undefined} */\n\t\t\t\t\t\t\t\t\t\tlet inheritance;\n\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\tparent.cssLayer !== undefined ||\n\t\t\t\t\t\t\t\t\t\t\tparent.supports ||\n\t\t\t\t\t\t\t\t\t\t\tparent.media\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tif (!inheritance) {\n\t\t\t\t\t\t\t\t\t\t\t\tinheritance = [];\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tinheritance.push([\n\t\t\t\t\t\t\t\t\t\t\t\tparent.cssLayer,\n\t\t\t\t\t\t\t\t\t\t\t\tparent.supports,\n\t\t\t\t\t\t\t\t\t\t\t\tparent.media\n\t\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (parent.inheritance) {\n\t\t\t\t\t\t\t\t\t\t\tif (!inheritance) {\n\t\t\t\t\t\t\t\t\t\t\t\tinheritance = [];\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tinheritance.push(...parent.inheritance);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\treturn new CssModule({\n\t\t\t\t\t\t\t\t\t\t\t...createData,\n\t\t\t\t\t\t\t\t\t\t\tcssLayer: dependency.layer,\n\t\t\t\t\t\t\t\t\t\t\tsupports: dependency.supports,\n\t\t\t\t\t\t\t\t\t\t\tmedia: dependency.media,\n\t\t\t\t\t\t\t\t\t\t\tinheritance\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn new CssModule({\n\t\t\t\t\t\t\t\t\t\t...createData,\n\t\t\t\t\t\t\t\t\t\tcssLayer: dependency.layer,\n\t\t\t\t\t\t\t\t\t\tsupports: dependency.supports,\n\t\t\t\t\t\t\t\t\t\tmedia: dependency.media\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn new CssModule(createData);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tconst orderedCssModulesPerChunk = new WeakMap();\n\t\t\t\tcompilation.hooks.afterCodeGeneration.tap(\"CssModulesPlugin\", () => {\n\t\t\t\t\tconst { chunkGraph } = compilation;\n\t\t\t\t\tfor (const chunk of compilation.chunks) {\n\t\t\t\t\t\tif (CssModulesPlugin.chunkHasCss(chunk, chunkGraph)) {\n\t\t\t\t\t\t\torderedCssModulesPerChunk.set(\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tthis.getOrderedChunkCssModules(chunk, chunkGraph, compilation)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tcompilation.hooks.chunkHash.tap(\n\t\t\t\t\t\"CssModulesPlugin\",\n\t\t\t\t\t(chunk, hash, context) => {\n\t\t\t\t\t\thooks.chunkHash.call(chunk, hash, context);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.contentHash.tap(\"CssModulesPlugin\", chunk => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\tcodeGenerationResults,\n\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\toutputOptions: {\n\t\t\t\t\t\t\thashSalt,\n\t\t\t\t\t\t\thashDigest,\n\t\t\t\t\t\t\thashDigestLength,\n\t\t\t\t\t\t\thashFunction\n\t\t\t\t\t\t}\n\t\t\t\t\t} = compilation;\n\t\t\t\t\tconst hash = createHash(/** @type {Algorithm} */ (hashFunction));\n\t\t\t\t\tif (hashSalt) hash.update(hashSalt);\n\t\t\t\t\thooks.chunkHash.call(chunk, hash, {\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\tcodeGenerationResults,\n\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\truntimeTemplate\n\t\t\t\t\t});\n\t\t\t\t\tconst modules = orderedCssModulesPerChunk.get(chunk);\n\t\t\t\t\tif (modules) {\n\t\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t\thash.update(chunkGraph.getModuleHash(module, chunk.runtime));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst digest = /** @type {string} */ (hash.digest(hashDigest));\n\t\t\t\t\tchunk.contentHash.css = nonNumericOnlyHash(\n\t\t\t\t\t\tdigest,\n\t\t\t\t\t\t/** @type {number} */\n\t\t\t\t\t\t(hashDigestLength)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tcompilation.hooks.renderManifest.tap(PLUGIN_NAME, (result, options) => {\n\t\t\t\t\tconst { chunkGraph } = compilation;\n\t\t\t\t\tconst { hash, chunk, codeGenerationResults, runtimeTemplate } =\n\t\t\t\t\t\toptions;\n\n\t\t\t\t\tif (chunk instanceof HotUpdateChunk) return result;\n\n\t\t\t\t\t/** @type {CssModule[] | undefined} */\n\t\t\t\t\tconst modules = orderedCssModulesPerChunk.get(chunk);\n\t\t\t\t\tif (modules !== undefined) {\n\t\t\t\t\t\tconst { path: filename, info } = compilation.getPathWithInfo(\n\t\t\t\t\t\t\tCssModulesPlugin.getChunkFilenameTemplate(\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tcompilation.outputOptions\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\thash,\n\t\t\t\t\t\t\t\truntime: chunk.runtime,\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tcontentHashType: \"css\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst undoPath = getUndoPath(\n\t\t\t\t\t\t\tfilename,\n\t\t\t\t\t\t\t/** @type {string} */\n\t\t\t\t\t\t\t(compilation.outputOptions.path),\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\trender: () =>\n\t\t\t\t\t\t\t\tthis.renderChunk(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\t\t\t\t\tcodeGenerationResults,\n\t\t\t\t\t\t\t\t\t\tuniqueName: compilation.outputOptions.uniqueName,\n\t\t\t\t\t\t\t\t\t\tcssHeadDataCompression:\n\t\t\t\t\t\t\t\t\t\t\tcompilation.outputOptions.cssHeadDataCompression,\n\t\t\t\t\t\t\t\t\t\tundoPath,\n\t\t\t\t\t\t\t\t\t\tmodules,\n\t\t\t\t\t\t\t\t\t\truntimeTemplate\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\thooks\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tfilename,\n\t\t\t\t\t\t\tinfo,\n\t\t\t\t\t\t\tidentifier: `css${chunk.id}`,\n\t\t\t\t\t\t\thash: chunk.contentHash.css\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t});\n\t\t\t\tconst globalChunkLoading = compilation.outputOptions.chunkLoading;\n\t\t\t\t/**\n\t\t\t\t * @param {Chunk} chunk the chunk\n\t\t\t\t * @returns {boolean} true, when enabled\n\t\t\t\t */\n\t\t\t\tconst isEnabledForChunk = chunk => {\n\t\t\t\t\tconst options = chunk.getEntryOptions();\n\t\t\t\t\tconst chunkLoading =\n\t\t\t\t\t\toptions && options.chunkLoading !== undefined\n\t\t\t\t\t\t\t? options.chunkLoading\n\t\t\t\t\t\t\t: globalChunkLoading;\n\t\t\t\t\treturn chunkLoading === \"jsonp\" || chunkLoading === \"import\";\n\t\t\t\t};\n\t\t\t\tconst onceForChunkSet = new WeakSet();\n\t\t\t\t/**\n\t\t\t\t * @param {Chunk} chunk chunk to check\n\t\t\t\t * @param {Set<string>} set runtime requirements\n\t\t\t\t */\n\t\t\t\tconst handler = (chunk, set) => {\n\t\t\t\t\tif (onceForChunkSet.has(chunk)) return;\n\t\t\t\t\tonceForChunkSet.add(chunk);\n\t\t\t\t\tif (!isEnabledForChunk(chunk)) return;\n\n\t\t\t\t\tset.add(RuntimeGlobals.moduleFactoriesAddOnly);\n\t\t\t\t\tset.add(RuntimeGlobals.makeNamespaceObject);\n\n\t\t\t\t\tconst CssLoadingRuntimeModule = getCssLoadingRuntimeModule();\n\t\t\t\t\tcompilation.addRuntimeModule(chunk, new CssLoadingRuntimeModule(set));\n\t\t\t\t};\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.hasCssModules)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.ensureChunkHandlers)\n\t\t\t\t\t.tap(PLUGIN_NAME, (chunk, set, { chunkGraph }) => {\n\t\t\t\t\t\tif (!isEnabledForChunk(chunk)) return;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!chunkGraph.hasModuleInGraph(\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tm =>\n\t\t\t\t\t\t\t\t\tm.type === CSS_MODULE_TYPE ||\n\t\t\t\t\t\t\t\t\tm.type === CSS_MODULE_TYPE_GLOBAL ||\n\t\t\t\t\t\t\t\t\tm.type === CSS_MODULE_TYPE_MODULE ||\n\t\t\t\t\t\t\t\t\tm.type === CSS_MODULE_TYPE_AUTO\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tset.add(RuntimeGlobals.hasOwnProperty);\n\t\t\t\t\t\tset.add(RuntimeGlobals.publicPath);\n\t\t\t\t\t\tset.add(RuntimeGlobals.getChunkCssFilename);\n\t\t\t\t\t});\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.hmrDownloadUpdateHandlers)\n\t\t\t\t\t.tap(PLUGIN_NAME, (chunk, set, { chunkGraph }) => {\n\t\t\t\t\t\tif (!isEnabledForChunk(chunk)) return;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!chunkGraph.hasModuleInGraph(\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tm =>\n\t\t\t\t\t\t\t\t\tm.type === CSS_MODULE_TYPE ||\n\t\t\t\t\t\t\t\t\tm.type === CSS_MODULE_TYPE_GLOBAL ||\n\t\t\t\t\t\t\t\t\tm.type === CSS_MODULE_TYPE_MODULE ||\n\t\t\t\t\t\t\t\t\tm.type === CSS_MODULE_TYPE_AUTO\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tset.add(RuntimeGlobals.publicPath);\n\t\t\t\t\t\tset.add(RuntimeGlobals.getChunkCssFilename);\n\t\t\t\t\t\tset.add(RuntimeGlobals.moduleFactoriesAddOnly);\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {Chunk} chunk chunk\n\t * @param {Iterable<Module>} modules unordered modules\n\t * @param {Compilation} compilation compilation\n\t * @returns {Module[]} ordered modules\n\t */\n\tgetModulesInOrder(chunk, modules, compilation) {\n\t\tif (!modules) return [];\n\n\t\t/** @type {Module[]} */\n\t\tconst modulesList = [...modules];\n\n\t\t// Get ordered list of modules per chunk group\n\t\t// Lists are in reverse order to allow to use Array.pop()\n\t\tconst modulesByChunkGroup = Array.from(chunk.groupsIterable, chunkGroup => {\n\t\t\tconst sortedModules = modulesList\n\t\t\t\t.map(module => ({\n\t\t\t\t\tmodule,\n\t\t\t\t\tindex: chunkGroup.getModulePostOrderIndex(module)\n\t\t\t\t}))\n\t\t\t\t.filter(item => item.index !== undefined)\n\t\t\t\t.sort(\n\t\t\t\t\t(a, b) =>\n\t\t\t\t\t\t/** @type {number} */ (b.index) - /** @type {number} */ (a.index)\n\t\t\t\t)\n\t\t\t\t.map(item => item.module);\n\n\t\t\treturn { list: sortedModules, set: new Set(sortedModules) };\n\t\t});\n\n\t\tif (modulesByChunkGroup.length === 1)\n\t\t\treturn modulesByChunkGroup[0].list.reverse();\n\n\t\t/**\n\t\t * @param {{ list: Module[] }} a a\n\t\t * @param {{ list: Module[] }} b b\n\t\t * @returns {-1 | 0 | 1} result\n\t\t */\n\t\tconst compareModuleLists = ({ list: a }, { list: b }) => {\n\t\t\tif (a.length === 0) {\n\t\t\t\treturn b.length === 0 ? 0 : 1;\n\t\t\t}\n\t\t\tif (b.length === 0) return -1;\n\t\t\treturn compareModulesByIdentifier(a[a.length - 1], b[b.length - 1]);\n\t\t};\n\n\t\tmodulesByChunkGroup.sort(compareModuleLists);\n\n\t\t/** @type {Module[]} */\n\t\tconst finalModules = [];\n\n\t\tfor (;;) {\n\t\t\tconst failedModules = new Set();\n\t\t\tconst list = modulesByChunkGroup[0].list;\n\t\t\tif (list.length === 0) {\n\t\t\t\t// done, everything empty\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/** @type {Module} */\n\t\t\tlet selectedModule = list[list.length - 1];\n\t\t\tlet hasFailed;\n\t\t\touter: for (;;) {\n\t\t\t\tfor (const { list, set } of modulesByChunkGroup) {\n\t\t\t\t\tif (list.length === 0) continue;\n\t\t\t\t\tconst lastModule = list[list.length - 1];\n\t\t\t\t\tif (lastModule === selectedModule) continue;\n\t\t\t\t\tif (!set.has(selectedModule)) continue;\n\t\t\t\t\tfailedModules.add(selectedModule);\n\t\t\t\t\tif (failedModules.has(lastModule)) {\n\t\t\t\t\t\t// There is a conflict, try other alternatives\n\t\t\t\t\t\thasFailed = lastModule;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tselectedModule = lastModule;\n\t\t\t\t\thasFailed = false;\n\t\t\t\t\tcontinue outer; // restart\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (hasFailed) {\n\t\t\t\t// There is a not resolve-able conflict with the selectedModule\n\t\t\t\t// TODO print better warning\n\t\t\t\tcompilation.warnings.push(\n\t\t\t\t\tnew WebpackError(\n\t\t\t\t\t\t`chunk ${chunk.name || chunk.id}\\nConflicting order between ${\n\t\t\t\t\t\t\t/** @type {Module} */\n\t\t\t\t\t\t\t(hasFailed).readableIdentifier(compilation.requestShortener)\n\t\t\t\t\t\t} and ${selectedModule.readableIdentifier(\n\t\t\t\t\t\t\tcompilation.requestShortener\n\t\t\t\t\t\t)}`\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tselectedModule = /** @type {Module} */ (hasFailed);\n\t\t\t}\n\t\t\t// Insert the selected module into the final modules list\n\t\t\tfinalModules.push(selectedModule);\n\t\t\t// Remove the selected module from all lists\n\t\t\tfor (const { list, set } of modulesByChunkGroup) {\n\t\t\t\tconst lastModule = list[list.length - 1];\n\t\t\t\tif (lastModule === selectedModule) list.pop();\n\t\t\t\telse if (hasFailed && set.has(selectedModule)) {\n\t\t\t\t\tconst idx = list.indexOf(selectedModule);\n\t\t\t\t\tif (idx >= 0) list.splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tmodulesByChunkGroup.sort(compareModuleLists);\n\t\t}\n\t\treturn finalModules;\n\t}\n\n\t/**\n\t * @param {Chunk} chunk chunk\n\t * @param {ChunkGraph} chunkGraph chunk graph\n\t * @param {Compilation} compilation compilation\n\t * @returns {Module[]} ordered css modules\n\t */\n\tgetOrderedChunkCssModules(chunk, chunkGraph, compilation) {\n\t\treturn [\n\t\t\t...this.getModulesInOrder(\n\t\t\t\tchunk,\n\t\t\t\t/** @type {Iterable<Module>} */\n\t\t\t\t(\n\t\t\t\t\tchunkGraph.getOrderedChunkModulesIterableBySourceType(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\"css-import\",\n\t\t\t\t\t\tcompareModulesByIdentifier\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tcompilation\n\t\t\t),\n\t\t\t...this.getModulesInOrder(\n\t\t\t\tchunk,\n\t\t\t\t/** @type {Iterable<Module>} */\n\t\t\t\t(\n\t\t\t\t\tchunkGraph.getOrderedChunkModulesIterableBySourceType(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\"css\",\n\t\t\t\t\t\tcompareModulesByIdentifier\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tcompilation\n\t\t\t)\n\t\t];\n\t}\n\n\t/**\n\t * @param {CssModule}  module css module\n\t * @param {ChunkRenderContext} renderContext options object\n\t * @param {CompilationHooks} hooks hooks\n\t * @returns {Source} css module source\n\t */\n\trenderModule(module, renderContext, hooks) {\n\t\tconst { codeGenerationResults, chunk, undoPath, chunkGraph, metaData } =\n\t\t\trenderContext;\n\t\tconst codeGenResult = codeGenerationResults.get(module, chunk.runtime);\n\t\tconst moduleSourceContent =\n\t\t\t/** @type {Source} */\n\t\t\t(\n\t\t\t\tcodeGenResult.sources.get(\"css\") ||\n\t\t\t\t\tcodeGenResult.sources.get(\"css-import\")\n\t\t\t);\n\n\t\tconst cacheEntry = this._moduleCache.get(moduleSourceContent);\n\n\t\t/** @type {Inheritance} */\n\t\tconst inheritance = [[module.cssLayer, module.supports, module.media]];\n\t\tif (module.inheritance) {\n\t\t\tinheritance.push(...module.inheritance);\n\t\t}\n\n\t\tlet source;\n\t\tif (\n\t\t\tcacheEntry &&\n\t\t\tcacheEntry.undoPath === undoPath &&\n\t\t\tcacheEntry.inheritance.every(([layer, supports, media], i) => {\n\t\t\t\tconst item = inheritance[i];\n\t\t\t\tif (Array.isArray(item)) {\n\t\t\t\t\treturn layer === item[0] && supports === item[1] && media === item[2];\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t})\n\t\t) {\n\t\t\tsource = cacheEntry.source;\n\t\t} else {\n\t\t\tconst moduleSourceCode = /** @type {string} */ (\n\t\t\t\tmoduleSourceContent.source()\n\t\t\t);\n\t\t\tconst publicPathAutoRegex = new RegExp(\n\t\t\t\tCssUrlDependency.PUBLIC_PATH_AUTO,\n\t\t\t\t\"g\"\n\t\t\t);\n\t\t\t/** @type {Source} */\n\t\t\tlet moduleSource = new ReplaceSource(moduleSourceContent);\n\t\t\tlet match;\n\t\t\twhile ((match = publicPathAutoRegex.exec(moduleSourceCode))) {\n\t\t\t\t/** @type {ReplaceSource} */ (moduleSource).replace(\n\t\t\t\t\tmatch.index,\n\t\t\t\t\t(match.index += match[0].length - 1),\n\t\t\t\t\tundoPath\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < inheritance.length; i++) {\n\t\t\t\tconst layer = inheritance[i][0];\n\t\t\t\tconst supports = inheritance[i][1];\n\t\t\t\tconst media = inheritance[i][2];\n\n\t\t\t\tif (media) {\n\t\t\t\t\tmoduleSource = new ConcatSource(\n\t\t\t\t\t\t`@media ${media} {\\n`,\n\t\t\t\t\t\tnew PrefixSource(\"\\t\", moduleSource),\n\t\t\t\t\t\t\"}\\n\"\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (supports) {\n\t\t\t\t\tmoduleSource = new ConcatSource(\n\t\t\t\t\t\t`@supports (${supports}) {\\n`,\n\t\t\t\t\t\tnew PrefixSource(\"\\t\", moduleSource),\n\t\t\t\t\t\t\"}\\n\"\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Layer can be anonymous\n\t\t\t\tif (layer !== undefined && layer !== null) {\n\t\t\t\t\tmoduleSource = new ConcatSource(\n\t\t\t\t\t\t`@layer${layer ? ` ${layer}` : \"\"} {\\n`,\n\t\t\t\t\t\tnew PrefixSource(\"\\t\", moduleSource),\n\t\t\t\t\t\t\"}\\n\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (moduleSource) {\n\t\t\t\tmoduleSource = new ConcatSource(moduleSource, \"\\n\");\n\t\t\t}\n\n\t\t\tsource = new CachedSource(moduleSource);\n\t\t\tthis._moduleCache.set(moduleSourceContent, {\n\t\t\t\tinheritance,\n\t\t\t\tundoPath,\n\t\t\t\tsource\n\t\t\t});\n\t\t}\n\t\t/** @type {CssExportsData | undefined} */\n\t\tconst cssExportsData =\n\t\t\tcodeGenResult.data && codeGenResult.data.get(\"css-exports\");\n\t\tconst exports = cssExportsData && cssExportsData.exports;\n\t\tconst esModule = cssExportsData && cssExportsData.esModule;\n\t\tlet moduleId = String(chunkGraph.getModuleId(module));\n\n\t\t// When `optimization.moduleIds` is `named` the module id is a path, so we need to normalize it between platforms\n\t\tif (typeof moduleId === \"string\") {\n\t\t\tmoduleId = moduleId.replace(/\\\\/g, \"/\");\n\t\t}\n\n\t\tmetaData.push(\n\t\t\t`${\n\t\t\t\texports\n\t\t\t\t\t? Array.from(\n\t\t\t\t\t\t\texports,\n\t\t\t\t\t\t\t([n, v]) => `${escapeCss(n)}:${escapeCss(v)}/`\n\t\t\t\t\t\t).join(\"\")\n\t\t\t\t\t: \"\"\n\t\t\t}${esModule ? \"&\" : \"\"}${escapeCss(moduleId)}`\n\t\t);\n\t\treturn tryRunOrWebpackError(\n\t\t\t() => hooks.renderModulePackage.call(source, module, renderContext),\n\t\t\t\"CssModulesPlugin.getCompilationHooks().renderModulePackage\"\n\t\t);\n\t}\n\n\t/**\n\t * @param {RenderContext} renderContext the render context\n\t * @param {CompilationHooks} hooks hooks\n\t * @returns {Source} generated source\n\t */\n\trenderChunk(\n\t\t{\n\t\t\tuniqueName,\n\t\t\tcssHeadDataCompression,\n\t\t\tundoPath,\n\t\t\tchunk,\n\t\t\tchunkGraph,\n\t\t\tcodeGenerationResults,\n\t\t\tmodules,\n\t\t\truntimeTemplate\n\t\t},\n\t\thooks\n\t) {\n\t\tconst source = new ConcatSource();\n\t\t/** @type {string[]} */\n\t\tconst metaData = [];\n\t\tfor (const module of modules) {\n\t\t\ttry {\n\t\t\t\tconst moduleSource = this.renderModule(\n\t\t\t\t\tmodule,\n\t\t\t\t\t{\n\t\t\t\t\t\tmetaData,\n\t\t\t\t\t\tundoPath,\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\tcodeGenerationResults,\n\t\t\t\t\t\truntimeTemplate\n\t\t\t\t\t},\n\t\t\t\t\thooks\n\t\t\t\t);\n\t\t\t\tsource.add(moduleSource);\n\t\t\t} catch (err) {\n\t\t\t\t/** @type {Error} */\n\t\t\t\t(err).message += `\\nduring rendering of css ${module.identifier()}`;\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t\tconst metaDataStr = metaData.join(\",\");\n\t\tsource.add(\n\t\t\t`head{--webpack-${escapeCss(\n\t\t\t\t(uniqueName ? `${uniqueName}-` : \"\") + chunk.id,\n\t\t\t\ttrue\n\t\t\t)}:${cssHeadDataCompression ? lzwEncode(metaDataStr) : metaDataStr};}`\n\t\t);\n\t\tchunk.rendered = true;\n\t\treturn source;\n\t}\n\n\t/**\n\t * @param {Chunk} chunk chunk\n\t * @param {OutputOptions} outputOptions output options\n\t * @returns {TemplatePath} used filename template\n\t */\n\tstatic getChunkFilenameTemplate(chunk, outputOptions) {\n\t\tif (chunk.cssFilenameTemplate) {\n\t\t\treturn chunk.cssFilenameTemplate;\n\t\t} else if (chunk.canBeInitial()) {\n\t\t\treturn /** @type {TemplatePath} */ (outputOptions.cssFilename);\n\t\t}\n\t\treturn /** @type {TemplatePath} */ (outputOptions.cssChunkFilename);\n\t}\n\n\t/**\n\t * @param {Chunk} chunk chunk\n\t * @param {ChunkGraph} chunkGraph chunk graph\n\t * @returns {boolean} true, when the chunk has css\n\t */\n\tstatic chunkHasCss(chunk, chunkGraph) {\n\t\treturn (\n\t\t\tBoolean(chunkGraph.getChunkModulesIterableBySourceType(chunk, \"css\")) ||\n\t\t\tBoolean(\n\t\t\t\tchunkGraph.getChunkModulesIterableBySourceType(chunk, \"css-import\")\n\t\t\t)\n\t\t);\n\t}\n}\n\nmodule.exports = CssModulesPlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}