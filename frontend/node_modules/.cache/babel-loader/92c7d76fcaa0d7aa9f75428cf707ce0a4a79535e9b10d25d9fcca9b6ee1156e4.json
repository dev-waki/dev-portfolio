{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Template = require(\"../Template\");\n\n/** @typedef {import(\"eslint-scope\").Scope} Scope */\n/** @typedef {import(\"eslint-scope\").Reference} Reference */\n/** @typedef {import(\"eslint-scope\").Variable} Variable */\n/** @typedef {import(\"estree\").Node} Node */\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n/** @typedef {import(\"../javascript/JavascriptParser\").Program} Program */\n/** @typedef {Set<string>} UsedNames */\n\nconst DEFAULT_EXPORT = \"__WEBPACK_DEFAULT_EXPORT__\";\nconst NAMESPACE_OBJECT_EXPORT = \"__WEBPACK_NAMESPACE_OBJECT__\";\n\n/**\n * @param {Variable} variable variable\n * @returns {Reference[]} references\n */\nconst getAllReferences = variable => {\n  let set = variable.references;\n  // Look for inner scope variables too (like in class Foo { t() { Foo } })\n  const identifiers = new Set(variable.identifiers);\n  for (const scope of variable.scope.childScopes) {\n    for (const innerVar of scope.variables) {\n      if (innerVar.identifiers.some(id => identifiers.has(id))) {\n        set = set.concat(innerVar.references);\n        break;\n      }\n    }\n  }\n  return set;\n};\n\n/**\n * @param {Node | Node[]} ast ast\n * @param {Node} node node\n * @returns {undefined | Node[]} result\n */\nconst getPathInAst = (ast, node) => {\n  if (ast === node) {\n    return [];\n  }\n  const nr = /** @type {Range} */node.range;\n\n  /**\n   * @param {Node} n node\n   * @returns {Node[] | undefined} result\n   */\n  const enterNode = n => {\n    if (!n) return;\n    const r = n.range;\n    if (r && r[0] <= nr[0] && r[1] >= nr[1]) {\n      const path = getPathInAst(n, node);\n      if (path) {\n        path.push(n);\n        return path;\n      }\n    }\n  };\n  if (Array.isArray(ast)) {\n    for (let i = 0; i < ast.length; i++) {\n      const enterResult = enterNode(ast[i]);\n      if (enterResult !== undefined) return enterResult;\n    }\n  } else if (ast && typeof ast === \"object\") {\n    const keys = /** @type {Array<keyof Node>} */\n    Object.keys(ast);\n    for (let i = 0; i < keys.length; i++) {\n      // We are making the faster check in `enterNode` using `n.range`\n      const value = ast[(/** @type {Exclude<keyof Node, \"range\" | \"loc\" | \"leadingComments\" | \"trailingComments\">} */\n      keys[i])];\n      if (Array.isArray(value)) {\n        const pathResult = getPathInAst(value, node);\n        if (pathResult !== undefined) return pathResult;\n      } else if (value && typeof value === \"object\") {\n        const enterResult = enterNode(value);\n        if (enterResult !== undefined) return enterResult;\n      }\n    }\n  }\n};\n\n/**\n * @param {string} oldName old name\n * @param {UsedNames} usedNamed1 used named 1\n * @param {UsedNames} usedNamed2 used named 2\n * @param {string} extraInfo extra info\n * @returns {string} found new name\n */\nfunction findNewName(oldName, usedNamed1, usedNamed2, extraInfo) {\n  let name = oldName;\n  if (name === DEFAULT_EXPORT) {\n    name = \"\";\n  }\n  if (name === NAMESPACE_OBJECT_EXPORT) {\n    name = \"namespaceObject\";\n  }\n\n  // Remove uncool stuff\n  extraInfo = extraInfo.replace(/\\.+\\/|(\\/index)?\\.([a-zA-Z0-9]{1,4})($|\\s|\\?)|\\s*\\+\\s*\\d+\\s*modules/g, \"\");\n  const splittedInfo = extraInfo.split(\"/\");\n  while (splittedInfo.length) {\n    name = splittedInfo.pop() + (name ? `_${name}` : \"\");\n    const nameIdent = Template.toIdentifier(name);\n    if (!usedNamed1.has(nameIdent) && (!usedNamed2 || !usedNamed2.has(nameIdent))) return nameIdent;\n  }\n  let i = 0;\n  let nameWithNumber = Template.toIdentifier(`${name}_${i}`);\n  while (usedNamed1.has(nameWithNumber) ||\n  // eslint-disable-next-line no-unmodified-loop-condition\n  usedNamed2 && usedNamed2.has(nameWithNumber)) {\n    i++;\n    nameWithNumber = Template.toIdentifier(`${name}_${i}`);\n  }\n  return nameWithNumber;\n}\n\n/**\n * @param {Scope | null} s scope\n * @param {UsedNames} nameSet name set\n * @param {TODO} scopeSet1 scope set 1\n * @param {TODO} scopeSet2 scope set 2\n */\nconst addScopeSymbols = (s, nameSet, scopeSet1, scopeSet2) => {\n  let scope = s;\n  while (scope) {\n    if (scopeSet1.has(scope)) break;\n    if (scopeSet2.has(scope)) break;\n    scopeSet1.add(scope);\n    for (const variable of scope.variables) {\n      nameSet.add(variable.name);\n    }\n    scope = scope.upper;\n  }\n};\nconst RESERVED_NAMES = new Set([\n// internal names (should always be renamed)\nDEFAULT_EXPORT, NAMESPACE_OBJECT_EXPORT,\n// keywords\n\"abstract,arguments,async,await,boolean,break,byte,case,catch,char,class,const,continue\", \"debugger,default,delete,do,double,else,enum,eval,export,extends,false,final,finally,float\", \"for,function,goto,if,implements,import,in,instanceof,int,interface,let,long,native,new,null\", \"package,private,protected,public,return,short,static,super,switch,synchronized,this,throw\", \"throws,transient,true,try,typeof,var,void,volatile,while,with,yield\",\n// commonjs/amd\n\"module,__dirname,__filename,exports,require,define\",\n// js globals\n\"Array,Date,eval,function,hasOwnProperty,Infinity,isFinite,isNaN,isPrototypeOf,length,Math\", \"NaN,name,Number,Object,prototype,String,Symbol,toString,undefined,valueOf\",\n// browser globals\n\"alert,all,anchor,anchors,area,assign,blur,button,checkbox,clearInterval,clearTimeout\", \"clientInformation,close,closed,confirm,constructor,crypto,decodeURI,decodeURIComponent\", \"defaultStatus,document,element,elements,embed,embeds,encodeURI,encodeURIComponent,escape\", \"event,fileUpload,focus,form,forms,frame,innerHeight,innerWidth,layer,layers,link,location\", \"mimeTypes,navigate,navigator,frames,frameRate,hidden,history,image,images,offscreenBuffering\", \"open,opener,option,outerHeight,outerWidth,packages,pageXOffset,pageYOffset,parent,parseFloat\", \"parseInt,password,pkcs11,plugin,prompt,propertyIsEnum,radio,reset,screenX,screenY,scroll\", \"secure,select,self,setInterval,setTimeout,status,submit,taint,text,textarea,top,unescape\", \"untaint,window\",\n// window events\n\"onblur,onclick,onerror,onfocus,onkeydown,onkeypress,onkeyup,onmouseover,onload,onmouseup,onmousedown,onsubmit\"].join(\",\").split(\",\"));\n\n/**\n * @param {Map<string, { usedNames: UsedNames, alreadyCheckedScopes: Set<TODO> }>} usedNamesInScopeInfo used names in scope info\n * @param {string} module module identifier\n * @param {string} id export id\n * @returns {{ usedNames: UsedNames, alreadyCheckedScopes: Set<TODO> }} info\n */\nconst getUsedNamesInScopeInfo = (usedNamesInScopeInfo, module, id) => {\n  const key = `${module}-${id}`;\n  let info = usedNamesInScopeInfo.get(key);\n  if (info === undefined) {\n    info = {\n      usedNames: new Set(),\n      alreadyCheckedScopes: new Set()\n    };\n    usedNamesInScopeInfo.set(key, info);\n  }\n  return info;\n};\nmodule.exports = {\n  getUsedNamesInScopeInfo,\n  findNewName,\n  getAllReferences,\n  getPathInAst,\n  NAMESPACE_OBJECT_EXPORT,\n  DEFAULT_EXPORT,\n  RESERVED_NAMES,\n  addScopeSymbols\n};","map":{"version":3,"names":["Template","require","DEFAULT_EXPORT","NAMESPACE_OBJECT_EXPORT","getAllReferences","variable","set","references","identifiers","Set","scope","childScopes","innerVar","variables","some","id","has","concat","getPathInAst","ast","node","nr","range","enterNode","n","r","path","push","Array","isArray","i","length","enterResult","undefined","keys","Object","value","pathResult","findNewName","oldName","usedNamed1","usedNamed2","extraInfo","name","replace","splittedInfo","split","pop","nameIdent","toIdentifier","nameWithNumber","addScopeSymbols","s","nameSet","scopeSet1","scopeSet2","add","upper","RESERVED_NAMES","join","getUsedNamesInScopeInfo","usedNamesInScopeInfo","module","key","info","get","usedNames","alreadyCheckedScopes","exports"],"sources":["/home/wickliff/Desktop/dev-waki/portfolio2/node_modules/webpack/lib/util/concatenate.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Template = require(\"../Template\");\n\n/** @typedef {import(\"eslint-scope\").Scope} Scope */\n/** @typedef {import(\"eslint-scope\").Reference} Reference */\n/** @typedef {import(\"eslint-scope\").Variable} Variable */\n/** @typedef {import(\"estree\").Node} Node */\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n/** @typedef {import(\"../javascript/JavascriptParser\").Program} Program */\n/** @typedef {Set<string>} UsedNames */\n\nconst DEFAULT_EXPORT = \"__WEBPACK_DEFAULT_EXPORT__\";\nconst NAMESPACE_OBJECT_EXPORT = \"__WEBPACK_NAMESPACE_OBJECT__\";\n\n/**\n * @param {Variable} variable variable\n * @returns {Reference[]} references\n */\nconst getAllReferences = variable => {\n\tlet set = variable.references;\n\t// Look for inner scope variables too (like in class Foo { t() { Foo } })\n\tconst identifiers = new Set(variable.identifiers);\n\tfor (const scope of variable.scope.childScopes) {\n\t\tfor (const innerVar of scope.variables) {\n\t\t\tif (innerVar.identifiers.some(id => identifiers.has(id))) {\n\t\t\t\tset = set.concat(innerVar.references);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn set;\n};\n\n/**\n * @param {Node | Node[]} ast ast\n * @param {Node} node node\n * @returns {undefined | Node[]} result\n */\nconst getPathInAst = (ast, node) => {\n\tif (ast === node) {\n\t\treturn [];\n\t}\n\n\tconst nr = /** @type {Range} */ (node.range);\n\n\t/**\n\t * @param {Node} n node\n\t * @returns {Node[] | undefined} result\n\t */\n\tconst enterNode = n => {\n\t\tif (!n) return;\n\t\tconst r = n.range;\n\t\tif (r && r[0] <= nr[0] && r[1] >= nr[1]) {\n\t\t\tconst path = getPathInAst(n, node);\n\t\t\tif (path) {\n\t\t\t\tpath.push(n);\n\t\t\t\treturn path;\n\t\t\t}\n\t\t}\n\t};\n\n\tif (Array.isArray(ast)) {\n\t\tfor (let i = 0; i < ast.length; i++) {\n\t\t\tconst enterResult = enterNode(ast[i]);\n\t\t\tif (enterResult !== undefined) return enterResult;\n\t\t}\n\t} else if (ast && typeof ast === \"object\") {\n\t\tconst keys =\n\t\t\t/** @type {Array<keyof Node>} */\n\t\t\t(Object.keys(ast));\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t// We are making the faster check in `enterNode` using `n.range`\n\t\t\tconst value =\n\t\t\t\tast[\n\t\t\t\t\t/** @type {Exclude<keyof Node, \"range\" | \"loc\" | \"leadingComments\" | \"trailingComments\">} */\n\t\t\t\t\t(keys[i])\n\t\t\t\t];\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tconst pathResult = getPathInAst(value, node);\n\t\t\t\tif (pathResult !== undefined) return pathResult;\n\t\t\t} else if (value && typeof value === \"object\") {\n\t\t\t\tconst enterResult = enterNode(value);\n\t\t\t\tif (enterResult !== undefined) return enterResult;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * @param {string} oldName old name\n * @param {UsedNames} usedNamed1 used named 1\n * @param {UsedNames} usedNamed2 used named 2\n * @param {string} extraInfo extra info\n * @returns {string} found new name\n */\nfunction findNewName(oldName, usedNamed1, usedNamed2, extraInfo) {\n\tlet name = oldName;\n\n\tif (name === DEFAULT_EXPORT) {\n\t\tname = \"\";\n\t}\n\tif (name === NAMESPACE_OBJECT_EXPORT) {\n\t\tname = \"namespaceObject\";\n\t}\n\n\t// Remove uncool stuff\n\textraInfo = extraInfo.replace(\n\t\t/\\.+\\/|(\\/index)?\\.([a-zA-Z0-9]{1,4})($|\\s|\\?)|\\s*\\+\\s*\\d+\\s*modules/g,\n\t\t\"\"\n\t);\n\n\tconst splittedInfo = extraInfo.split(\"/\");\n\twhile (splittedInfo.length) {\n\t\tname = splittedInfo.pop() + (name ? `_${name}` : \"\");\n\t\tconst nameIdent = Template.toIdentifier(name);\n\t\tif (\n\t\t\t!usedNamed1.has(nameIdent) &&\n\t\t\t(!usedNamed2 || !usedNamed2.has(nameIdent))\n\t\t)\n\t\t\treturn nameIdent;\n\t}\n\n\tlet i = 0;\n\tlet nameWithNumber = Template.toIdentifier(`${name}_${i}`);\n\twhile (\n\t\tusedNamed1.has(nameWithNumber) ||\n\t\t// eslint-disable-next-line no-unmodified-loop-condition\n\t\t(usedNamed2 && usedNamed2.has(nameWithNumber))\n\t) {\n\t\ti++;\n\t\tnameWithNumber = Template.toIdentifier(`${name}_${i}`);\n\t}\n\treturn nameWithNumber;\n}\n\n/**\n * @param {Scope | null} s scope\n * @param {UsedNames} nameSet name set\n * @param {TODO} scopeSet1 scope set 1\n * @param {TODO} scopeSet2 scope set 2\n */\nconst addScopeSymbols = (s, nameSet, scopeSet1, scopeSet2) => {\n\tlet scope = s;\n\twhile (scope) {\n\t\tif (scopeSet1.has(scope)) break;\n\t\tif (scopeSet2.has(scope)) break;\n\t\tscopeSet1.add(scope);\n\t\tfor (const variable of scope.variables) {\n\t\t\tnameSet.add(variable.name);\n\t\t}\n\t\tscope = scope.upper;\n\t}\n};\n\nconst RESERVED_NAMES = new Set(\n\t[\n\t\t// internal names (should always be renamed)\n\t\tDEFAULT_EXPORT,\n\t\tNAMESPACE_OBJECT_EXPORT,\n\n\t\t// keywords\n\t\t\"abstract,arguments,async,await,boolean,break,byte,case,catch,char,class,const,continue\",\n\t\t\"debugger,default,delete,do,double,else,enum,eval,export,extends,false,final,finally,float\",\n\t\t\"for,function,goto,if,implements,import,in,instanceof,int,interface,let,long,native,new,null\",\n\t\t\"package,private,protected,public,return,short,static,super,switch,synchronized,this,throw\",\n\t\t\"throws,transient,true,try,typeof,var,void,volatile,while,with,yield\",\n\n\t\t// commonjs/amd\n\t\t\"module,__dirname,__filename,exports,require,define\",\n\n\t\t// js globals\n\t\t\"Array,Date,eval,function,hasOwnProperty,Infinity,isFinite,isNaN,isPrototypeOf,length,Math\",\n\t\t\"NaN,name,Number,Object,prototype,String,Symbol,toString,undefined,valueOf\",\n\n\t\t// browser globals\n\t\t\"alert,all,anchor,anchors,area,assign,blur,button,checkbox,clearInterval,clearTimeout\",\n\t\t\"clientInformation,close,closed,confirm,constructor,crypto,decodeURI,decodeURIComponent\",\n\t\t\"defaultStatus,document,element,elements,embed,embeds,encodeURI,encodeURIComponent,escape\",\n\t\t\"event,fileUpload,focus,form,forms,frame,innerHeight,innerWidth,layer,layers,link,location\",\n\t\t\"mimeTypes,navigate,navigator,frames,frameRate,hidden,history,image,images,offscreenBuffering\",\n\t\t\"open,opener,option,outerHeight,outerWidth,packages,pageXOffset,pageYOffset,parent,parseFloat\",\n\t\t\"parseInt,password,pkcs11,plugin,prompt,propertyIsEnum,radio,reset,screenX,screenY,scroll\",\n\t\t\"secure,select,self,setInterval,setTimeout,status,submit,taint,text,textarea,top,unescape\",\n\t\t\"untaint,window\",\n\n\t\t// window events\n\t\t\"onblur,onclick,onerror,onfocus,onkeydown,onkeypress,onkeyup,onmouseover,onload,onmouseup,onmousedown,onsubmit\"\n\t]\n\t\t.join(\",\")\n\t\t.split(\",\")\n);\n\n/**\n * @param {Map<string, { usedNames: UsedNames, alreadyCheckedScopes: Set<TODO> }>} usedNamesInScopeInfo used names in scope info\n * @param {string} module module identifier\n * @param {string} id export id\n * @returns {{ usedNames: UsedNames, alreadyCheckedScopes: Set<TODO> }} info\n */\nconst getUsedNamesInScopeInfo = (usedNamesInScopeInfo, module, id) => {\n\tconst key = `${module}-${id}`;\n\tlet info = usedNamesInScopeInfo.get(key);\n\tif (info === undefined) {\n\t\tinfo = {\n\t\t\tusedNames: new Set(),\n\t\t\talreadyCheckedScopes: new Set()\n\t\t};\n\t\tusedNamesInScopeInfo.set(key, info);\n\t}\n\treturn info;\n};\n\nmodule.exports = {\n\tgetUsedNamesInScopeInfo,\n\tfindNewName,\n\tgetAllReferences,\n\tgetPathInAst,\n\tNAMESPACE_OBJECT_EXPORT,\n\tDEFAULT_EXPORT,\n\tRESERVED_NAMES,\n\taddScopeSymbols\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}