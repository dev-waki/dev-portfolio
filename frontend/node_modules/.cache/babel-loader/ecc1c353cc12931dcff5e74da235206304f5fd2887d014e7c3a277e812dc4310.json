{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  RawSource\n} = require(\"webpack-sources\");\nconst {\n  UsageState\n} = require(\"../ExportsInfo\");\nconst Generator = require(\"../Generator\");\nconst InitFragment = require(\"../InitFragment\");\nconst {\n  WEBASSEMBLY_TYPES\n} = require(\"../ModuleSourceTypesConstants\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\nconst ModuleDependency = require(\"../dependencies/ModuleDependency\");\nconst WebAssemblyExportImportedDependency = require(\"../dependencies/WebAssemblyExportImportedDependency\");\nconst WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"../Generator\").GenerateContext} GenerateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../Module\").SourceTypes} SourceTypes */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n\nclass WebAssemblyJavascriptGenerator extends Generator {\n  /**\n   * @param {NormalModule} module fresh module\n   * @returns {SourceTypes} available types (do not mutate)\n   */\n  getTypes(module) {\n    return WEBASSEMBLY_TYPES;\n  }\n\n  /**\n   * @param {NormalModule} module the module\n   * @param {string=} type source type\n   * @returns {number} estimate size of the module\n   */\n  getSize(module, type) {\n    return 95 + module.dependencies.length * 5;\n  }\n\n  /**\n   * @param {NormalModule} module module for which the code should be generated\n   * @param {GenerateContext} generateContext context for generate\n   * @returns {Source | null} generated code\n   */\n  generate(module, generateContext) {\n    const {\n      runtimeTemplate,\n      moduleGraph,\n      chunkGraph,\n      runtimeRequirements,\n      runtime\n    } = generateContext;\n    /** @type {InitFragment<InitFragment<string>>[]} */\n    const initFragments = [];\n    const exportsInfo = moduleGraph.getExportsInfo(module);\n    let needExportsCopy = false;\n    const importedModules = new Map();\n    const initParams = [];\n    let index = 0;\n    for (const dep of module.dependencies) {\n      const moduleDep = dep && dep instanceof ModuleDependency ? dep : undefined;\n      if (moduleGraph.getModule(dep)) {\n        let importData = importedModules.get(moduleGraph.getModule(dep));\n        if (importData === undefined) {\n          importedModules.set(moduleGraph.getModule(dep), importData = {\n            importVar: `m${index}`,\n            index,\n            request: moduleDep && moduleDep.userRequest || undefined,\n            names: new Set(),\n            reexports: []\n          });\n          index++;\n        }\n        if (dep instanceof WebAssemblyImportDependency) {\n          importData.names.add(dep.name);\n          if (dep.description.type === \"GlobalType\") {\n            const exportName = dep.name;\n            const importedModule = moduleGraph.getModule(dep);\n            if (importedModule) {\n              const usedName = moduleGraph.getExportsInfo(importedModule).getUsedName(exportName, runtime);\n              if (usedName) {\n                initParams.push(runtimeTemplate.exportFromImport({\n                  moduleGraph,\n                  module: importedModule,\n                  request: dep.request,\n                  importVar: importData.importVar,\n                  originModule: module,\n                  exportName: dep.name,\n                  asiSafe: true,\n                  isCall: false,\n                  callContext: null,\n                  defaultInterop: true,\n                  initFragments,\n                  runtime,\n                  runtimeRequirements\n                }));\n              }\n            }\n          }\n        }\n        if (dep instanceof WebAssemblyExportImportedDependency) {\n          importData.names.add(dep.name);\n          const usedName = moduleGraph.getExportsInfo(module).getUsedName(dep.exportName, runtime);\n          if (usedName) {\n            runtimeRequirements.add(RuntimeGlobals.exports);\n            const exportProp = `${module.exportsArgument}[${JSON.stringify(usedName)}]`;\n            const defineStatement = Template.asString([`${exportProp} = ${runtimeTemplate.exportFromImport({\n              moduleGraph,\n              module: (/** @type {Module} */moduleGraph.getModule(dep)),\n              request: dep.request,\n              importVar: importData.importVar,\n              originModule: module,\n              exportName: dep.name,\n              asiSafe: true,\n              isCall: false,\n              callContext: null,\n              defaultInterop: true,\n              initFragments,\n              runtime,\n              runtimeRequirements\n            })};`, `if(WebAssembly.Global) ${exportProp} = ` + `new WebAssembly.Global({ value: ${JSON.stringify(dep.valueType)} }, ${exportProp});`]);\n            importData.reexports.push(defineStatement);\n            needExportsCopy = true;\n          }\n        }\n      }\n    }\n    const importsCode = Template.asString(Array.from(importedModules, ([module, {\n      importVar,\n      request,\n      reexports\n    }]) => {\n      const importStatement = runtimeTemplate.importStatement({\n        module,\n        chunkGraph,\n        request,\n        importVar,\n        originModule: module,\n        runtimeRequirements\n      });\n      return importStatement[0] + importStatement[1] + reexports.join(\"\\n\");\n    }));\n    const copyAllExports = exportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused && !needExportsCopy;\n\n    // need these globals\n    runtimeRequirements.add(RuntimeGlobals.module);\n    runtimeRequirements.add(RuntimeGlobals.moduleId);\n    runtimeRequirements.add(RuntimeGlobals.wasmInstances);\n    if (exportsInfo.otherExportsInfo.getUsed(runtime) !== UsageState.Unused) {\n      runtimeRequirements.add(RuntimeGlobals.makeNamespaceObject);\n      runtimeRequirements.add(RuntimeGlobals.exports);\n    }\n    if (!copyAllExports) {\n      runtimeRequirements.add(RuntimeGlobals.exports);\n    }\n\n    // create source\n    const source = new RawSource(['\"use strict\";', \"// Instantiate WebAssembly module\", `var wasmExports = ${RuntimeGlobals.wasmInstances}[${module.moduleArgument}.id];`, exportsInfo.otherExportsInfo.getUsed(runtime) !== UsageState.Unused ? `${RuntimeGlobals.makeNamespaceObject}(${module.exportsArgument});` : \"\",\n    // this must be before import for circular dependencies\n    \"// export exports from WebAssembly module\", copyAllExports ? `${module.moduleArgument}.exports = wasmExports;` : \"for(var name in wasmExports) \" + \"if(name) \" + `${module.exportsArgument}[name] = wasmExports[name];`, \"// exec imports from WebAssembly module (for esm order)\", importsCode, \"\", \"// exec wasm module\", `wasmExports[\"\"](${initParams.join(\", \")})`].join(\"\\n\"));\n    return InitFragment.addToSource(source, initFragments, generateContext);\n  }\n}\nmodule.exports = WebAssemblyJavascriptGenerator;","map":{"version":3,"names":["RawSource","require","UsageState","Generator","InitFragment","WEBASSEMBLY_TYPES","RuntimeGlobals","Template","ModuleDependency","WebAssemblyExportImportedDependency","WebAssemblyImportDependency","WebAssemblyJavascriptGenerator","getTypes","module","getSize","type","dependencies","length","generate","generateContext","runtimeTemplate","moduleGraph","chunkGraph","runtimeRequirements","runtime","initFragments","exportsInfo","getExportsInfo","needExportsCopy","importedModules","Map","initParams","index","dep","moduleDep","undefined","getModule","importData","get","set","importVar","request","userRequest","names","Set","reexports","add","name","description","exportName","importedModule","usedName","getUsedName","push","exportFromImport","originModule","asiSafe","isCall","callContext","defaultInterop","exports","exportProp","exportsArgument","JSON","stringify","defineStatement","asString","valueType","importsCode","Array","from","importStatement","join","copyAllExports","otherExportsInfo","getUsed","Unused","moduleId","wasmInstances","makeNamespaceObject","source","moduleArgument","addToSource"],"sources":["/home/wickliff/Desktop/dev-waki/portfolio2/node_modules/webpack/lib/wasm-sync/WebAssemblyJavascriptGenerator.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { RawSource } = require(\"webpack-sources\");\nconst { UsageState } = require(\"../ExportsInfo\");\nconst Generator = require(\"../Generator\");\nconst InitFragment = require(\"../InitFragment\");\nconst { WEBASSEMBLY_TYPES } = require(\"../ModuleSourceTypesConstants\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\nconst ModuleDependency = require(\"../dependencies/ModuleDependency\");\nconst WebAssemblyExportImportedDependency = require(\"../dependencies/WebAssemblyExportImportedDependency\");\nconst WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"../Generator\").GenerateContext} GenerateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../Module\").SourceTypes} SourceTypes */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n\nclass WebAssemblyJavascriptGenerator extends Generator {\n\t/**\n\t * @param {NormalModule} module fresh module\n\t * @returns {SourceTypes} available types (do not mutate)\n\t */\n\tgetTypes(module) {\n\t\treturn WEBASSEMBLY_TYPES;\n\t}\n\n\t/**\n\t * @param {NormalModule} module the module\n\t * @param {string=} type source type\n\t * @returns {number} estimate size of the module\n\t */\n\tgetSize(module, type) {\n\t\treturn 95 + module.dependencies.length * 5;\n\t}\n\n\t/**\n\t * @param {NormalModule} module module for which the code should be generated\n\t * @param {GenerateContext} generateContext context for generate\n\t * @returns {Source | null} generated code\n\t */\n\tgenerate(module, generateContext) {\n\t\tconst {\n\t\t\truntimeTemplate,\n\t\t\tmoduleGraph,\n\t\t\tchunkGraph,\n\t\t\truntimeRequirements,\n\t\t\truntime\n\t\t} = generateContext;\n\t\t/** @type {InitFragment<InitFragment<string>>[]} */\n\t\tconst initFragments = [];\n\n\t\tconst exportsInfo = moduleGraph.getExportsInfo(module);\n\n\t\tlet needExportsCopy = false;\n\t\tconst importedModules = new Map();\n\t\tconst initParams = [];\n\t\tlet index = 0;\n\t\tfor (const dep of module.dependencies) {\n\t\t\tconst moduleDep =\n\t\t\t\tdep && dep instanceof ModuleDependency ? dep : undefined;\n\t\t\tif (moduleGraph.getModule(dep)) {\n\t\t\t\tlet importData = importedModules.get(moduleGraph.getModule(dep));\n\t\t\t\tif (importData === undefined) {\n\t\t\t\t\timportedModules.set(\n\t\t\t\t\t\tmoduleGraph.getModule(dep),\n\t\t\t\t\t\t(importData = {\n\t\t\t\t\t\t\timportVar: `m${index}`,\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\trequest: (moduleDep && moduleDep.userRequest) || undefined,\n\t\t\t\t\t\t\tnames: new Set(),\n\t\t\t\t\t\t\treexports: []\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t\tif (dep instanceof WebAssemblyImportDependency) {\n\t\t\t\t\timportData.names.add(dep.name);\n\t\t\t\t\tif (dep.description.type === \"GlobalType\") {\n\t\t\t\t\t\tconst exportName = dep.name;\n\t\t\t\t\t\tconst importedModule = moduleGraph.getModule(dep);\n\n\t\t\t\t\t\tif (importedModule) {\n\t\t\t\t\t\t\tconst usedName = moduleGraph\n\t\t\t\t\t\t\t\t.getExportsInfo(importedModule)\n\t\t\t\t\t\t\t\t.getUsedName(exportName, runtime);\n\t\t\t\t\t\t\tif (usedName) {\n\t\t\t\t\t\t\t\tinitParams.push(\n\t\t\t\t\t\t\t\t\truntimeTemplate.exportFromImport({\n\t\t\t\t\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\t\t\t\t\tmodule: importedModule,\n\t\t\t\t\t\t\t\t\t\trequest: dep.request,\n\t\t\t\t\t\t\t\t\t\timportVar: importData.importVar,\n\t\t\t\t\t\t\t\t\t\toriginModule: module,\n\t\t\t\t\t\t\t\t\t\texportName: dep.name,\n\t\t\t\t\t\t\t\t\t\tasiSafe: true,\n\t\t\t\t\t\t\t\t\t\tisCall: false,\n\t\t\t\t\t\t\t\t\t\tcallContext: null,\n\t\t\t\t\t\t\t\t\t\tdefaultInterop: true,\n\t\t\t\t\t\t\t\t\t\tinitFragments,\n\t\t\t\t\t\t\t\t\t\truntime,\n\t\t\t\t\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (dep instanceof WebAssemblyExportImportedDependency) {\n\t\t\t\t\timportData.names.add(dep.name);\n\t\t\t\t\tconst usedName = moduleGraph\n\t\t\t\t\t\t.getExportsInfo(module)\n\t\t\t\t\t\t.getUsedName(dep.exportName, runtime);\n\t\t\t\t\tif (usedName) {\n\t\t\t\t\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\t\t\t\t\tconst exportProp = `${module.exportsArgument}[${JSON.stringify(\n\t\t\t\t\t\t\tusedName\n\t\t\t\t\t\t)}]`;\n\t\t\t\t\t\tconst defineStatement = Template.asString([\n\t\t\t\t\t\t\t`${exportProp} = ${runtimeTemplate.exportFromImport({\n\t\t\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\t\t\tmodule: /** @type {Module} */ (moduleGraph.getModule(dep)),\n\t\t\t\t\t\t\t\trequest: dep.request,\n\t\t\t\t\t\t\t\timportVar: importData.importVar,\n\t\t\t\t\t\t\t\toriginModule: module,\n\t\t\t\t\t\t\t\texportName: dep.name,\n\t\t\t\t\t\t\t\tasiSafe: true,\n\t\t\t\t\t\t\t\tisCall: false,\n\t\t\t\t\t\t\t\tcallContext: null,\n\t\t\t\t\t\t\t\tdefaultInterop: true,\n\t\t\t\t\t\t\t\tinitFragments,\n\t\t\t\t\t\t\t\truntime,\n\t\t\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t\t\t})};`,\n\t\t\t\t\t\t\t`if(WebAssembly.Global) ${exportProp} = ` +\n\t\t\t\t\t\t\t\t`new WebAssembly.Global({ value: ${JSON.stringify(\n\t\t\t\t\t\t\t\t\tdep.valueType\n\t\t\t\t\t\t\t\t)} }, ${exportProp});`\n\t\t\t\t\t\t]);\n\t\t\t\t\t\timportData.reexports.push(defineStatement);\n\t\t\t\t\t\tneedExportsCopy = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst importsCode = Template.asString(\n\t\t\tArray.from(\n\t\t\t\timportedModules,\n\t\t\t\t([module, { importVar, request, reexports }]) => {\n\t\t\t\t\tconst importStatement = runtimeTemplate.importStatement({\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\timportVar,\n\t\t\t\t\t\toriginModule: module,\n\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t});\n\t\t\t\t\treturn importStatement[0] + importStatement[1] + reexports.join(\"\\n\");\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\n\t\tconst copyAllExports =\n\t\t\texportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused &&\n\t\t\t!needExportsCopy;\n\n\t\t// need these globals\n\t\truntimeRequirements.add(RuntimeGlobals.module);\n\t\truntimeRequirements.add(RuntimeGlobals.moduleId);\n\t\truntimeRequirements.add(RuntimeGlobals.wasmInstances);\n\t\tif (exportsInfo.otherExportsInfo.getUsed(runtime) !== UsageState.Unused) {\n\t\t\truntimeRequirements.add(RuntimeGlobals.makeNamespaceObject);\n\t\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\t}\n\t\tif (!copyAllExports) {\n\t\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\t}\n\n\t\t// create source\n\t\tconst source = new RawSource(\n\t\t\t[\n\t\t\t\t'\"use strict\";',\n\t\t\t\t\"// Instantiate WebAssembly module\",\n\t\t\t\t`var wasmExports = ${RuntimeGlobals.wasmInstances}[${module.moduleArgument}.id];`,\n\n\t\t\t\texportsInfo.otherExportsInfo.getUsed(runtime) !== UsageState.Unused\n\t\t\t\t\t? `${RuntimeGlobals.makeNamespaceObject}(${module.exportsArgument});`\n\t\t\t\t\t: \"\",\n\n\t\t\t\t// this must be before import for circular dependencies\n\t\t\t\t\"// export exports from WebAssembly module\",\n\t\t\t\tcopyAllExports\n\t\t\t\t\t? `${module.moduleArgument}.exports = wasmExports;`\n\t\t\t\t\t: \"for(var name in wasmExports) \" +\n\t\t\t\t\t\t\"if(name) \" +\n\t\t\t\t\t\t`${module.exportsArgument}[name] = wasmExports[name];`,\n\t\t\t\t\"// exec imports from WebAssembly module (for esm order)\",\n\t\t\t\timportsCode,\n\t\t\t\t\"\",\n\t\t\t\t\"// exec wasm module\",\n\t\t\t\t`wasmExports[\"\"](${initParams.join(\", \")})`\n\t\t\t].join(\"\\n\")\n\t\t);\n\t\treturn InitFragment.addToSource(source, initFragments, generateContext);\n\t}\n}\n\nmodule.exports = WebAssemblyJavascriptGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}