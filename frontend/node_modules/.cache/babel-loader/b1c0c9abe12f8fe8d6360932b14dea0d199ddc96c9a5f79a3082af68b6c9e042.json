{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RawModule = require(\"./RawModule\");\nconst EntryDependency = require(\"./dependencies/EntryDependency\");\nconst createSchemaValidation = require(\"./util/create-schema-validation\");\n\n/** @typedef {import(\"../declarations/plugins/IgnorePlugin\").IgnorePluginOptions} IgnorePluginOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./NormalModuleFactory\").ResolveData} ResolveData */\n\nconst validate = createSchemaValidation(require(\"../schemas/plugins/IgnorePlugin.check.js\"), () => require(\"../schemas/plugins/IgnorePlugin.json\"), {\n  name: \"Ignore Plugin\",\n  baseDataPath: \"options\"\n});\nclass IgnorePlugin {\n  /**\n   * @param {IgnorePluginOptions} options IgnorePlugin options\n   */\n  constructor(options) {\n    validate(options);\n    this.options = options;\n\n    /**\n     * @private\n     * @type {Function}\n     */\n    this.checkIgnore = this.checkIgnore.bind(this);\n  }\n\n  /**\n   * Note that if \"contextRegExp\" is given, both the \"resourceRegExp\" and \"contextRegExp\" have to match.\n   * @param {ResolveData} resolveData resolve data\n   * @returns {false|undefined} returns false when the request should be ignored, otherwise undefined\n   */\n  checkIgnore(resolveData) {\n    if (\"checkResource\" in this.options && this.options.checkResource && this.options.checkResource(resolveData.request, resolveData.context)) {\n      return false;\n    }\n    if (\"resourceRegExp\" in this.options && this.options.resourceRegExp && this.options.resourceRegExp.test(resolveData.request)) {\n      if (\"contextRegExp\" in this.options && this.options.contextRegExp) {\n        // if \"contextRegExp\" is given,\n        // both the \"resourceRegExp\" and \"contextRegExp\" have to match.\n        if (this.options.contextRegExp.test(resolveData.context)) {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.normalModuleFactory.tap(\"IgnorePlugin\", nmf => {\n      nmf.hooks.beforeResolve.tap(\"IgnorePlugin\", resolveData => {\n        const result = this.checkIgnore(resolveData);\n        if (result === false && resolveData.dependencies.length > 0 && resolveData.dependencies[0] instanceof EntryDependency) {\n          resolveData.ignoredModule = new RawModule(\"\", \"ignored-entry-module\", \"(ignored-entry-module)\");\n        }\n        return result;\n      });\n    });\n    compiler.hooks.contextModuleFactory.tap(\"IgnorePlugin\", cmf => {\n      cmf.hooks.beforeResolve.tap(\"IgnorePlugin\", this.checkIgnore);\n    });\n  }\n}\nmodule.exports = IgnorePlugin;","map":{"version":3,"names":["RawModule","require","EntryDependency","createSchemaValidation","validate","name","baseDataPath","IgnorePlugin","constructor","options","checkIgnore","bind","resolveData","checkResource","request","context","resourceRegExp","test","contextRegExp","apply","compiler","hooks","normalModuleFactory","tap","nmf","beforeResolve","result","dependencies","length","ignoredModule","contextModuleFactory","cmf","module","exports"],"sources":["/home/wickliff/Desktop/dev-waki/portfolio2/node_modules/webpack/lib/IgnorePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RawModule = require(\"./RawModule\");\nconst EntryDependency = require(\"./dependencies/EntryDependency\");\nconst createSchemaValidation = require(\"./util/create-schema-validation\");\n\n/** @typedef {import(\"../declarations/plugins/IgnorePlugin\").IgnorePluginOptions} IgnorePluginOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./NormalModuleFactory\").ResolveData} ResolveData */\n\nconst validate = createSchemaValidation(\n\trequire(\"../schemas/plugins/IgnorePlugin.check.js\"),\n\t() => require(\"../schemas/plugins/IgnorePlugin.json\"),\n\t{\n\t\tname: \"Ignore Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\n\nclass IgnorePlugin {\n\t/**\n\t * @param {IgnorePluginOptions} options IgnorePlugin options\n\t */\n\tconstructor(options) {\n\t\tvalidate(options);\n\t\tthis.options = options;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {Function}\n\t\t */\n\t\tthis.checkIgnore = this.checkIgnore.bind(this);\n\t}\n\n\t/**\n\t * Note that if \"contextRegExp\" is given, both the \"resourceRegExp\" and \"contextRegExp\" have to match.\n\t * @param {ResolveData} resolveData resolve data\n\t * @returns {false|undefined} returns false when the request should be ignored, otherwise undefined\n\t */\n\tcheckIgnore(resolveData) {\n\t\tif (\n\t\t\t\"checkResource\" in this.options &&\n\t\t\tthis.options.checkResource &&\n\t\t\tthis.options.checkResource(resolveData.request, resolveData.context)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (\n\t\t\t\"resourceRegExp\" in this.options &&\n\t\t\tthis.options.resourceRegExp &&\n\t\t\tthis.options.resourceRegExp.test(resolveData.request)\n\t\t) {\n\t\t\tif (\"contextRegExp\" in this.options && this.options.contextRegExp) {\n\t\t\t\t// if \"contextRegExp\" is given,\n\t\t\t\t// both the \"resourceRegExp\" and \"contextRegExp\" have to match.\n\t\t\t\tif (this.options.contextRegExp.test(resolveData.context)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.normalModuleFactory.tap(\"IgnorePlugin\", nmf => {\n\t\t\tnmf.hooks.beforeResolve.tap(\"IgnorePlugin\", resolveData => {\n\t\t\t\tconst result = this.checkIgnore(resolveData);\n\n\t\t\t\tif (\n\t\t\t\t\tresult === false &&\n\t\t\t\t\tresolveData.dependencies.length > 0 &&\n\t\t\t\t\tresolveData.dependencies[0] instanceof EntryDependency\n\t\t\t\t) {\n\t\t\t\t\tresolveData.ignoredModule = new RawModule(\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\"ignored-entry-module\",\n\t\t\t\t\t\t\"(ignored-entry-module)\"\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t});\n\t\t});\n\t\tcompiler.hooks.contextModuleFactory.tap(\"IgnorePlugin\", cmf => {\n\t\t\tcmf.hooks.beforeResolve.tap(\"IgnorePlugin\", this.checkIgnore);\n\t\t});\n\t}\n}\n\nmodule.exports = IgnorePlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,aAAa,CAAC;AACxC,MAAMC,eAAe,GAAGD,OAAO,CAAC,gCAAgC,CAAC;AACjE,MAAME,sBAAsB,GAAGF,OAAO,CAAC,iCAAiC,CAAC;;AAEzE;AACA;AACA;;AAEA,MAAMG,QAAQ,GAAGD,sBAAsB,CACtCF,OAAO,CAAC,0CAA0C,CAAC,EACnD,MAAMA,OAAO,CAAC,sCAAsC,CAAC,EACrD;EACCI,IAAI,EAAE,eAAe;EACrBC,YAAY,EAAE;AACf,CACD,CAAC;AAED,MAAMC,YAAY,CAAC;EAClB;AACD;AACA;EACCC,WAAWA,CAACC,OAAO,EAAE;IACpBL,QAAQ,CAACK,OAAO,CAAC;IACjB,IAAI,CAACA,OAAO,GAAGA,OAAO;;IAEtB;AACF;AACA;AACA;IACE,IAAI,CAACC,WAAW,GAAG,IAAI,CAACA,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAC/C;;EAEA;AACD;AACA;AACA;AACA;EACCD,WAAWA,CAACE,WAAW,EAAE;IACxB,IACC,eAAe,IAAI,IAAI,CAACH,OAAO,IAC/B,IAAI,CAACA,OAAO,CAACI,aAAa,IAC1B,IAAI,CAACJ,OAAO,CAACI,aAAa,CAACD,WAAW,CAACE,OAAO,EAAEF,WAAW,CAACG,OAAO,CAAC,EACnE;MACD,OAAO,KAAK;IACb;IAEA,IACC,gBAAgB,IAAI,IAAI,CAACN,OAAO,IAChC,IAAI,CAACA,OAAO,CAACO,cAAc,IAC3B,IAAI,CAACP,OAAO,CAACO,cAAc,CAACC,IAAI,CAACL,WAAW,CAACE,OAAO,CAAC,EACpD;MACD,IAAI,eAAe,IAAI,IAAI,CAACL,OAAO,IAAI,IAAI,CAACA,OAAO,CAACS,aAAa,EAAE;QAClE;QACA;QACA,IAAI,IAAI,CAACT,OAAO,CAACS,aAAa,CAACD,IAAI,CAACL,WAAW,CAACG,OAAO,CAAC,EAAE;UACzD,OAAO,KAAK;QACb;MACD,CAAC,MAAM;QACN,OAAO,KAAK;MACb;IACD;EACD;;EAEA;AACD;AACA;AACA;AACA;EACCI,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,mBAAmB,CAACC,GAAG,CAAC,cAAc,EAAEC,GAAG,IAAI;MAC7DA,GAAG,CAACH,KAAK,CAACI,aAAa,CAACF,GAAG,CAAC,cAAc,EAAEX,WAAW,IAAI;QAC1D,MAAMc,MAAM,GAAG,IAAI,CAAChB,WAAW,CAACE,WAAW,CAAC;QAE5C,IACCc,MAAM,KAAK,KAAK,IAChBd,WAAW,CAACe,YAAY,CAACC,MAAM,GAAG,CAAC,IACnChB,WAAW,CAACe,YAAY,CAAC,CAAC,CAAC,YAAYzB,eAAe,EACrD;UACDU,WAAW,CAACiB,aAAa,GAAG,IAAI7B,SAAS,CACxC,EAAE,EACF,sBAAsB,EACtB,wBACD,CAAC;QACF;QAEA,OAAO0B,MAAM;MACd,CAAC,CAAC;IACH,CAAC,CAAC;IACFN,QAAQ,CAACC,KAAK,CAACS,oBAAoB,CAACP,GAAG,CAAC,cAAc,EAAEQ,GAAG,IAAI;MAC9DA,GAAG,CAACV,KAAK,CAACI,aAAa,CAACF,GAAG,CAAC,cAAc,EAAE,IAAI,CAACb,WAAW,CAAC;IAC9D,CAAC,CAAC;EACH;AACD;AAEAsB,MAAM,CAACC,OAAO,GAAG1B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}